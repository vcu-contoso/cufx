/*
 * Credit Union Financial eXchange
 *
 * Credit Union Industry Standard. The following API examples are producedz using scripting methods to create a swagger representation of the XML/XSDs. In the event of any noted deviations, the published XSDs on www.cufxstandards.com are the basis of intended content and behavior. Please see https://bonifii.com/cufx-terms-of-use for the terms of use applicable for CUFX.
 *
 * The version of the OpenAPI document: 4.5
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using VyStar.ApiStandards.CUFX.Converters;

namespace VyStar.ApiStandards.CUFX.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class DepositPartyDepositPartyRelationshipTypeSafeDepositBoxUser 
    {
        /// <summary>
        /// Specifies whether the party has a relationship status of safe deposit box user on the account. 
        /// </summary>
        /// <value>Specifies whether the party has a relationship status of safe deposit box user on the account. </value>
        [DataMember(Name="isSafeDepositBoxUser", EmitDefaultValue=true)]
        public bool IsSafeDepositBoxUser { get; set; }


        /// <summary>
        /// Safe deposit box user is a colessee of the safe deposit box. Safe deposit box user is a deputy of the safe deposit box on behalf of the account or relationship holder. 
        /// </summary>
        /// <value>Safe deposit box user is a colessee of the safe deposit box. Safe deposit box user is a deputy of the safe deposit box on behalf of the account or relationship holder. </value>
        [TypeConverter(typeof(CustomEnumConverter<QualifierEnum>))]
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum QualifierEnum
        {
            
            /// <summary>
            /// Enum ColesseeEnum for Colessee
            /// </summary>
            [EnumMember(Value = "Colessee")]
            ColesseeEnum = 1,
            
            /// <summary>
            /// Enum DeputyEnum for Deputy
            /// </summary>
            [EnumMember(Value = "Deputy")]
            DeputyEnum = 2
        }

        /// <summary>
        /// Safe deposit box user is a colessee of the safe deposit box. Safe deposit box user is a deputy of the safe deposit box on behalf of the account or relationship holder. 
        /// </summary>
        /// <value>Safe deposit box user is a colessee of the safe deposit box. Safe deposit box user is a deputy of the safe deposit box on behalf of the account or relationship holder. </value>
        [DataMember(Name="qualifier", EmitDefaultValue=true)]
        public QualifierEnum Qualifier { get; set; }


        /// <summary>
        /// Has access to funds and can perform transactions. Does not have access to funds and cannot perform transactions. Has access to only to dividend funds and can perform dividend only transactions. 
        /// </summary>
        /// <value>Has access to funds and can perform transactions. Does not have access to funds and cannot perform transactions. Has access to only to dividend funds and can perform dividend only transactions. </value>
        [TypeConverter(typeof(CustomEnumConverter<AuthorityEnum>))]
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum AuthorityEnum
        {
            
            /// <summary>
            /// Enum AuthorizedEnum for Authorized
            /// </summary>
            [EnumMember(Value = "Authorized")]
            AuthorizedEnum = 1,
            
            /// <summary>
            /// Enum UnauthorizedEnum for Unauthorized
            /// </summary>
            [EnumMember(Value = "Unauthorized")]
            UnauthorizedEnum = 2,
            
            /// <summary>
            /// Enum DividendOnlyEnum for DividendOnly
            /// </summary>
            [EnumMember(Value = "DividendOnly")]
            DividendOnlyEnum = 3
        }

        /// <summary>
        /// Has access to funds and can perform transactions. Does not have access to funds and cannot perform transactions. Has access to only to dividend funds and can perform dividend only transactions. 
        /// </summary>
        /// <value>Has access to funds and can perform transactions. Does not have access to funds and cannot perform transactions. Has access to only to dividend funds and can perform dividend only transactions. </value>
        [DataMember(Name="authority", EmitDefaultValue=true)]
        public AuthorityEnum Authority { get; set; }

    }
}
