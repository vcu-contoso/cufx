/*
 * Credit Union Financial eXchange
 *
 * Credit Union Industry Standard. The following API examples are producedz using scripting methods to create a swagger representation of the XML/XSDs. In the event of any noted deviations, the published XSDs on www.cufxstandards.com are the basis of intended content and behavior. Please see https://bonifii.com/cufx-terms-of-use for the terms of use applicable for CUFX.
 *
 * The version of the OpenAPI document: 4.5
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using VyStar.ApiStandards.CUFX.Converters;

namespace VyStar.ApiStandards.CUFX.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class AccountMetaCreditCardMeta 
    {
        /// <summary>
        /// The company that sponsors the card (i.e. Visa, MasterCard, American Express, etc.). 
        /// </summary>
        /// <value>The company that sponsors the card (i.e. Visa, MasterCard, American Express, etc.). </value>
        [DataMember(Name="brand", EmitDefaultValue=false)]
        public string Brand { get; set; }

        /// <summary>
        /// Gets or Sets CreditLimit
        /// </summary>
        [DataMember(Name="creditLimit", EmitDefaultValue=false)]
        public AccountAccountEscheatAmount CreditLimit { get; set; }

        /// <summary>
        /// Gets or Sets MinimumPayment
        /// </summary>
        [DataMember(Name="minimumPayment", EmitDefaultValue=false)]
        public AccountAccountEscheatAmount MinimumPayment { get; set; }

        /// <summary>
        /// The date that payment is due for the loan to keep in good standing and avoid penalties. Many times institutions will institute a grace period beyond this date, but this is the published due date. The date should be ISO 8601 format yyyy-mm-dd (2011-03-28). 
        /// </summary>
        /// <value>The date that payment is due for the loan to keep in good standing and avoid penalties. Many times institutions will institute a grace period beyond this date, but this is the published due date. The date should be ISO 8601 format yyyy-mm-dd (2011-03-28). </value>
        [DataMember(Name="currentDueDate", EmitDefaultValue=false)]
        public DateTime CurrentDueDate { get; set; }

        /// <summary>
        /// The date of the most recent statement The date should be ISO 8601 format yyyy-mm-dd (2011-03-28). 
        /// </summary>
        /// <value>The date of the most recent statement The date should be ISO 8601 format yyyy-mm-dd (2011-03-28). </value>
        [DataMember(Name="lastStatementDate", EmitDefaultValue=false)]
        public DateTime LastStatementDate { get; set; }

        /// <summary>
        /// The date of the previous statment The date should be ISO 8601 format yyyy-mm-dd (2011-03-28). 
        /// </summary>
        /// <value>The date of the previous statment The date should be ISO 8601 format yyyy-mm-dd (2011-03-28). </value>
        [DataMember(Name="previousStatementDate", EmitDefaultValue=false)]
        public DateTime PreviousStatementDate { get; set; }

        /// <summary>
        /// Gets or Sets LatePaymentFee
        /// </summary>
        [DataMember(Name="latePaymentFee", EmitDefaultValue=false)]
        public AccountAccountEscheatAmount LatePaymentFee { get; set; }

        /// <summary>
        /// Gets or Sets PastDueAmount
        /// </summary>
        [DataMember(Name="pastDueAmount", EmitDefaultValue=false)]
        public AccountAccountEscheatAmount PastDueAmount { get; set; }

        /// <summary>
        /// The date that the last payment was made. The date should be ISO 8601 format yyyy-mm-dd (2011-03-28). 
        /// </summary>
        /// <value>The date that the last payment was made. The date should be ISO 8601 format yyyy-mm-dd (2011-03-28). </value>
        [DataMember(Name="lastPaymentDate", EmitDefaultValue=false)]
        public DateTime LastPaymentDate { get; set; }

        /// <summary>
        /// Gets or Sets LastPaymentAmount
        /// </summary>
        [DataMember(Name="lastPaymentAmount", EmitDefaultValue=false)]
        public AccountAccountEscheatAmount LastPaymentAmount { get; set; }

        /// <summary>
        /// Gets or Sets LastStatementBalance
        /// </summary>
        [DataMember(Name="lastStatementBalance", EmitDefaultValue=false)]
        public AccountAccountEscheatAmount LastStatementBalance { get; set; }

        /// <summary>
        /// Interest rate percent of the loan. Determines the amount charged each time period based on the loan period. Value is formatted as a percentile. A passed value of 4.5 is equivalent to 0.045 actual. 4.500 may be displayed as 4.500% or 4.5% depending on the user interface. Decimals available: 999.999 
        /// </summary>
        /// <value>Interest rate percent of the loan. Determines the amount charged each time period based on the loan period. Value is formatted as a percentile. A passed value of 4.5 is equivalent to 0.045 actual. 4.500 may be displayed as 4.500% or 4.5% depending on the user interface. Decimals available: 999.999 </value>
        [DataMember(Name="interestRate", EmitDefaultValue=true)]
        public decimal InterestRate { get; set; }

        /// <summary>
        /// Gets or Sets YtdInterestPaid
        /// </summary>
        [DataMember(Name="ytdInterestPaid", EmitDefaultValue=false)]
        public AccountAccountEscheatAmount YtdInterestPaid { get; set; }

        /// <summary>
        /// Gets or Sets PreviousYtdInterestPaid
        /// </summary>
        [DataMember(Name="previousYtdInterestPaid", EmitDefaultValue=false)]
        public AccountAccountEscheatAmount PreviousYtdInterestPaid { get; set; }

        /// <summary>
        /// The date of the most recent transaction. The date should be ISO 8601 format yyyy-mm-dd (2011-03-28). 
        /// </summary>
        /// <value>The date of the most recent transaction. The date should be ISO 8601 format yyyy-mm-dd (2011-03-28). </value>
        [DataMember(Name="lastTransactionDate", EmitDefaultValue=false)]
        public DateTime LastTransactionDate { get; set; }

        /// <summary>
        /// Calculated annual percentage rate (APR). Is the interest rate for a whole year (annualized). Value is formatted as a percentile. A passed value of 4.5 is equivalent to 0.045 actual. 4.500 may be displayed as 4.500% or 4.5% depending on the user interface. Decimals available: 999.999 
        /// </summary>
        /// <value>Calculated annual percentage rate (APR). Is the interest rate for a whole year (annualized). Value is formatted as a percentile. A passed value of 4.5 is equivalent to 0.045 actual. 4.500 may be displayed as 4.500% or 4.5% depending on the user interface. Decimals available: 999.999 </value>
        [DataMember(Name="annualPercentageRate", EmitDefaultValue=true)]
        public decimal AnnualPercentageRate { get; set; }

        /// <summary>
        /// Gets or Sets InterestDue
        /// </summary>
        [DataMember(Name="interestDue", EmitDefaultValue=false)]
        public AccountAccountEscheatAmount InterestDue { get; set; }

    }
}
