/*
 * Credit Union Financial eXchange
 *
 * Credit Union Industry Standard. The following API examples are producedz using scripting methods to create a swagger representation of the XML/XSDs. In the event of any noted deviations, the published XSDs on www.cufxstandards.com are the basis of intended content and behavior. Please see https://bonifii.com/cufx-terms-of-use for the terms of use applicable for CUFX.
 *
 * The version of the OpenAPI document: 4.5
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using VyStar.ApiStandards.CUFX.Converters;

namespace VyStar.ApiStandards.CUFX.Models
{ 
        /// <summary>
        /// This is the enumeration of statuses for a recurring payment or transfer request . The payment or transfer request is in process for immediate or future payment and is still cancellable by the party since its not InProcess yet. The recurring payment or transfer request has been scheduled. A recurring payment or transfer request was requested to be cancelled by the party, but has not yet been cancelled. A recurring payment or transfer request was requested to be cancelled by the partys financial institution. A recurring payment or transfer request was requested to be cancelled by the partys payment provider. A recurring payment or transfer request has been cancelled. All recurring payments or transfer requests have been completed. Payment or transfer request was scheduled for recurring payment but has been suspended until taken out of suspended status.  This status might be used if a party wants to keep the payment/transfer request in the system but temporarily stop payment or transfers from occurring. 
        /// </summary>
        /// <value>This is the enumeration of statuses for a recurring payment or transfer request . The payment or transfer request is in process for immediate or future payment and is still cancellable by the party since its not InProcess yet. The recurring payment or transfer request has been scheduled. A recurring payment or transfer request was requested to be cancelled by the party, but has not yet been cancelled. A recurring payment or transfer request was requested to be cancelled by the partys financial institution. A recurring payment or transfer request was requested to be cancelled by the partys payment provider. A recurring payment or transfer request has been cancelled. All recurring payments or transfer requests have been completed. Payment or transfer request was scheduled for recurring payment but has been suspended until taken out of suspended status.  This status might be used if a party wants to keep the payment/transfer request in the system but temporarily stop payment or transfers from occurring. </value>
        [TypeConverter(typeof(CustomEnumConverter<RecurringStatus>))]
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum RecurringStatus
        {
            
            /// <summary>
            /// Enum RequestedEnum for Requested
            /// </summary>
            [EnumMember(Value = "Requested")]
            RequestedEnum = 1,
            
            /// <summary>
            /// Enum ActiveEnum for Active
            /// </summary>
            [EnumMember(Value = "Active")]
            ActiveEnum = 2,
            
            /// <summary>
            /// Enum CancelRequestedByPartyEnum for CancelRequestedByParty
            /// </summary>
            [EnumMember(Value = "CancelRequestedByParty")]
            CancelRequestedByPartyEnum = 3,
            
            /// <summary>
            /// Enum CancelRequestedByFinancialInstitutionEnum for CancelRequestedByFinancialInstitution
            /// </summary>
            [EnumMember(Value = "CancelRequestedByFinancialInstitution")]
            CancelRequestedByFinancialInstitutionEnum = 4,
            
            /// <summary>
            /// Enum CancelRequestedByPaymentProviderEnum for CancelRequestedByPaymentProvider
            /// </summary>
            [EnumMember(Value = "CancelRequestedByPaymentProvider")]
            CancelRequestedByPaymentProviderEnum = 5,
            
            /// <summary>
            /// Enum CancelledEnum for Cancelled
            /// </summary>
            [EnumMember(Value = "Cancelled")]
            CancelledEnum = 6,
            
            /// <summary>
            /// Enum CompletedEnum for Completed
            /// </summary>
            [EnumMember(Value = "Completed")]
            CompletedEnum = 7,
            
            /// <summary>
            /// Enum SuspendedEnum for Suspended
            /// </summary>
            [EnumMember(Value = "Suspended")]
            SuspendedEnum = 8
        }
}
