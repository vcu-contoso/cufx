/*
 * Credit Union Financial eXchange
 *
 * Credit Union Industry Standard. The following API examples are producedz using scripting methods to create a swagger representation of the XML/XSDs. In the event of any noted deviations, the published XSDs on www.cufxstandards.com are the basis of intended content and behavior. Please see https://bonifii.com/cufx-terms-of-use for the terms of use applicable for CUFX.
 *
 * The version of the OpenAPI document: 4.5
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using VyStar.ApiStandards.CUFX.Converters;

namespace VyStar.ApiStandards.CUFX.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class DepositFunding 
    {
        /// <summary>
        /// The account ID is a persistent and unique identifier for the account. It must be unique for all users across the institution and remain the same over the life of the account. 
        /// </summary>
        /// <value>The account ID is a persistent and unique identifier for the account. It must be unique for all users across the institution and remain the same over the life of the account. </value>
        [DataMember(Name="targetAccountId", EmitDefaultValue=false)]
        public string TargetAccountId { get; set; }

        /// <summary>
        /// The account ID is a persistent and unique identifier for the account. It must be unique for all users across the institution and remain the same over the life of the account. 
        /// </summary>
        /// <value>The account ID is a persistent and unique identifier for the account. It must be unique for all users across the institution and remain the same over the life of the account. </value>
        [DataMember(Name="fundingSourceId", EmitDefaultValue=false)]
        public string FundingSourceId { get; set; }


        /// <summary>
        /// Identifies the source of the funds. 
        /// </summary>
        /// <value>Identifies the source of the funds. </value>
        [TypeConverter(typeof(CustomEnumConverter<SourceOfFundsEnum>))]
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum SourceOfFundsEnum
        {
            
            /// <summary>
            /// Enum CashEnum for Cash
            /// </summary>
            [EnumMember(Value = "Cash")]
            CashEnum = 1,
            
            /// <summary>
            /// Enum CheckEnum for Check
            /// </summary>
            [EnumMember(Value = "Check")]
            CheckEnum = 2,
            
            /// <summary>
            /// Enum TransferEnum for Transfer
            /// </summary>
            [EnumMember(Value = "Transfer")]
            TransferEnum = 3,
            
            /// <summary>
            /// Enum ACHEnum for ACH
            /// </summary>
            [EnumMember(Value = "ACH")]
            ACHEnum = 4,
            
            /// <summary>
            /// Enum NoneEnum for None
            /// </summary>
            [EnumMember(Value = "None")]
            NoneEnum = 5,
            
            /// <summary>
            /// Enum CreditCardEnum for CreditCard
            /// </summary>
            [EnumMember(Value = "CreditCard")]
            CreditCardEnum = 6,
            
            /// <summary>
            /// Enum DebitCardEnum for DebitCard
            /// </summary>
            [EnumMember(Value = "DebitCard")]
            DebitCardEnum = 7,
            
            /// <summary>
            /// Enum WireEnum for Wire
            /// </summary>
            [EnumMember(Value = "Wire")]
            WireEnum = 8
        }

        /// <summary>
        /// Identifies the source of the funds. 
        /// </summary>
        /// <value>Identifies the source of the funds. </value>
        [DataMember(Name="sourceOfFunds", EmitDefaultValue=true)]
        public SourceOfFundsEnum SourceOfFunds { get; set; }

        /// <summary>
        /// Gets or Sets FundingAmount
        /// </summary>
        [DataMember(Name="fundingAmount", EmitDefaultValue=false)]
        public AccountAccountEscheatAmount FundingAmount { get; set; }

        /// <summary>
        /// Gets or Sets HoldAmount
        /// </summary>
        [DataMember(Name="holdAmount", EmitDefaultValue=false)]
        public AccountAccountEscheatAmount HoldAmount { get; set; }

        /// <summary>
        /// The date on which the hold will expire. 
        /// </summary>
        /// <value>The date on which the hold will expire. </value>
        [DataMember(Name="holdExpirationDate", EmitDefaultValue=false)]
        public DateTime HoldExpirationDate { get; set; }

    }
}
