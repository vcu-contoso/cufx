/*
 * Credit Union Financial eXchange
 *
 * Credit Union Industry Standard. The following API examples are producedz using scripting methods to create a swagger representation of the XML/XSDs. In the event of any noted deviations, the published XSDs on www.cufxstandards.com are the basis of intended content and behavior. Please see https://bonifii.com/cufx-terms-of-use for the terms of use applicable for CUFX.
 *
 * The version of the OpenAPI document: 4.5
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using VyStar.ApiStandards.CUFX.Converters;

namespace VyStar.ApiStandards.CUFX.Models
{ 
    /// <summary>
    /// The list of filter options for services requesting category data.  The options can be used in combination or by themselves. It is up to the data source to either return the data requested or return a standard error identifying why the request was rejected. 
    /// </summary>
    [DataContract]
    public partial class CategoryFilter 
    {
        /// <summary>
        /// Gets or Sets CategoryIdList
        /// </summary>
        [DataMember(Name="categoryIdList", EmitDefaultValue=false)]
        public CategoryFilterCategoryIdList CategoryIdList { get; set; }

        /// <summary>
        /// Gets or Sets CategoryTypeList
        /// </summary>
        [DataMember(Name="categoryTypeList", EmitDefaultValue=false)]
        public CategoryFilterCategoryTypeList CategoryTypeList { get; set; }

        /// <summary>
        /// When True return all children categories associated to the parent category IDs. 
        /// </summary>
        /// <value>When True return all children categories associated to the parent category IDs. </value>
        [DataMember(Name="returnChildrenCategories", EmitDefaultValue=true)]
        public bool ReturnChildrenCategories { get; set; }

        /// <summary>
        /// Gets or Sets CustomData
        /// </summary>
        [DataMember(Name="customData", EmitDefaultValue=false)]
        public AccessProfileCustomData CustomData { get; set; }

    }
}
