/*
 * Credit Union Financial eXchange
 *
 * Credit Union Industry Standard. The following API examples are producedz using scripting methods to create a swagger representation of the XML/XSDs. In the event of any noted deviations, the published XSDs on www.cufxstandards.com are the basis of intended content and behavior. Please see https://bonifii.com/cufx-terms-of-use for the terms of use applicable for CUFX.
 *
 * The version of the OpenAPI document: 4.5
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using VyStar.ApiStandards.CUFX.Converters;

namespace VyStar.ApiStandards.CUFX.Models
{ 
    /// <summary>
    /// The collection/array contains all the devices to be created, read, updated or deleted with this registered device request. 
    /// </summary>
    [DataContract]
    public partial class RegisteredDeviceFilter 
    {
        /// <summary>
        /// Gets or Sets DeviceIDList
        /// </summary>
        [DataMember(Name="deviceIDList", EmitDefaultValue=false)]
        public RegisteredDeviceFilterDeviceIDList DeviceIDList { get; set; }

        /// <summary>
        /// Gets or Sets PartyIdList
        /// </summary>
        [DataMember(Name="partyIdList", EmitDefaultValue=false)]
        public AccountPartyIdList PartyIdList { get; set; }

        /// <summary>
        /// Gets or Sets RelationshipIdList
        /// </summary>
        [DataMember(Name="relationshipIdList", EmitDefaultValue=false)]
        public AccountFilterRelationshipIdList RelationshipIdList { get; set; }

        /// <summary>
        /// Gets or Sets AccountIdList
        /// </summary>
        [DataMember(Name="accountIdList", EmitDefaultValue=false)]
        public AccountFilterAccountIdList AccountIdList { get; set; }

        /// <summary>
        /// Gets or Sets AccountStatusList
        /// </summary>
        [DataMember(Name="accountStatusList", EmitDefaultValue=false)]
        public AccountFilterAccountStatusList AccountStatusList { get; set; }

        /// <summary>
        /// If True, indicates that the device ID was encrypted. Encryption method is agreed upon by application end point providers.  Assume itâ€™s NOT encrypted if this flag is not provided. The message context will be used by the service to understand which client is calling the service to know which encryption algorithm to apply. 
        /// </summary>
        /// <value>If True, indicates that the device ID was encrypted. Encryption method is agreed upon by application end point providers.  Assume itâ€™s NOT encrypted if this flag is not provided. The message context will be used by the service to understand which client is calling the service to know which encryption algorithm to apply. </value>
        [DataMember(Name="encryptedFlag", EmitDefaultValue=true)]
        public bool EncryptedFlag { get; set; }

        /// <summary>
        /// Gets or Sets CustomData
        /// </summary>
        [DataMember(Name="customData", EmitDefaultValue=false)]
        public AccessProfileCustomData CustomData { get; set; }

        /// <summary>
        /// Gets or Sets AccountIdentificationList
        /// </summary>
        [DataMember(Name="accountIdentificationList", EmitDefaultValue=false)]
        public AccountFilterAccountIdentificationList AccountIdentificationList { get; set; }

    }
}
