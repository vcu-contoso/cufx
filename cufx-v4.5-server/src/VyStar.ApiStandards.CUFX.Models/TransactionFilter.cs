/*
 * Credit Union Financial eXchange
 *
 * Credit Union Industry Standard. The following API examples are producedz using scripting methods to create a swagger representation of the XML/XSDs. In the event of any noted deviations, the published XSDs on www.cufxstandards.com are the basis of intended content and behavior. Please see https://bonifii.com/cufx-terms-of-use for the terms of use applicable for CUFX.
 *
 * The version of the OpenAPI document: 4.5
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using VyStar.ApiStandards.CUFX.Converters;

namespace VyStar.ApiStandards.CUFX.Models
{ 
    /// <summary>
    /// The list of filter options for services requesting transaction data. The options can be used in combination or by themselves. It is up to the data source to either return or affect the data requested or return a standard error identifying why the request was rejected. 
    /// </summary>
    [DataContract]
    public partial class TransactionFilter 
    {
        /// <summary>
        /// Gets or Sets TransactionIdList
        /// </summary>
        [DataMember(Name="transactionIdList", EmitDefaultValue=false)]
        public HoldFilterTransactionIdList TransactionIdList { get; set; }

        /// <summary>
        /// Gets or Sets PartyIdList
        /// </summary>
        [DataMember(Name="partyIdList", EmitDefaultValue=false)]
        public AccountPartyIdList PartyIdList { get; set; }

        /// <summary>
        /// Gets or Sets AccountIdList
        /// </summary>
        [DataMember(Name="accountIdList", EmitDefaultValue=false)]
        public AccountFilterAccountIdList AccountIdList { get; set; }

        /// <summary>
        /// Gets or Sets AccountStatusList
        /// </summary>
        [DataMember(Name="accountStatusList", EmitDefaultValue=false)]
        public AccountFilterAccountStatusList AccountStatusList { get; set; }


        /// <summary>
        /// The transaction type simply reflects whether the account was debited or credited. For comment-only transactions, the value can be either Debit or Credit and the transaction amount can be null, not return or 0.00. 
        /// </summary>
        /// <value>The transaction type simply reflects whether the account was debited or credited. For comment-only transactions, the value can be either Debit or Credit and the transaction amount can be null, not return or 0.00. </value>
        [TypeConverter(typeof(CustomEnumConverter<TransactionTypeEnum>))]
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum TransactionTypeEnum
        {
            
            /// <summary>
            /// Enum DebitEnum for Debit
            /// </summary>
            [EnumMember(Value = "Debit")]
            DebitEnum = 1,
            
            /// <summary>
            /// Enum CreditEnum for Credit
            /// </summary>
            [EnumMember(Value = "Credit")]
            CreditEnum = 2
        }

        /// <summary>
        /// The transaction type simply reflects whether the account was debited or credited. For comment-only transactions, the value can be either Debit or Credit and the transaction amount can be null, not return or 0.00. 
        /// </summary>
        /// <value>The transaction type simply reflects whether the account was debited or credited. For comment-only transactions, the value can be either Debit or Credit and the transaction amount can be null, not return or 0.00. </value>
        [DataMember(Name="transactionType", EmitDefaultValue=true)]
        public TransactionTypeEnum TransactionType { get; set; }

        /// <summary>
        /// Gets or Sets TransactionStatusList
        /// </summary>
        [DataMember(Name="transactionStatusList", EmitDefaultValue=false)]
        public TransactionFilterTransactionStatusList TransactionStatusList { get; set; }

        /// <summary>
        /// Gets or Sets TransactionMinAmount
        /// </summary>
        [DataMember(Name="transactionMinAmount", EmitDefaultValue=false)]
        public AccountAccountEscheatAmount TransactionMinAmount { get; set; }

        /// <summary>
        /// Gets or Sets TransactionMaxAmount
        /// </summary>
        [DataMember(Name="transactionMaxAmount", EmitDefaultValue=false)]
        public AccountAccountEscheatAmount TransactionMaxAmount { get; set; }

        /// <summary>
        /// Apply filter to transactions with a description containing the text in this field. 
        /// </summary>
        /// <value>Apply filter to transactions with a description containing the text in this field. </value>
        [DataMember(Name="descriptionContains", EmitDefaultValue=false)]
        public string DescriptionContains { get; set; }

        /// <summary>
        /// Gets or Sets CheckNumberList
        /// </summary>
        [DataMember(Name="checkNumberList", EmitDefaultValue=false)]
        public TransactionFilterCheckNumberList CheckNumberList { get; set; }

        /// <summary>
        /// Gets or Sets TransactionEffectiveDateRange
        /// </summary>
        [DataMember(Name="transactionEffectiveDateRange", EmitDefaultValue=false)]
        public AccessProfileFilterCreateAccessDateRange TransactionEffectiveDateRange { get; set; }

        /// <summary>
        /// Gets or Sets TransactionPostedDateRange
        /// </summary>
        [DataMember(Name="transactionPostedDateRange", EmitDefaultValue=false)]
        public AccessProfileFilterCreateAccessDateRange TransactionPostedDateRange { get; set; }

        /// <summary>
        /// Gets or Sets CategoryList
        /// </summary>
        [DataMember(Name="categoryList", EmitDefaultValue=false)]
        public TransactionFilterCategoryList CategoryList { get; set; }

        /// <summary>
        /// Gets or Sets SourceList
        /// </summary>
        [DataMember(Name="sourceList", EmitDefaultValue=false)]
        public TransactionFilterSourceList SourceList { get; set; }

        /// <summary>
        /// Gets or Sets CustomData
        /// </summary>
        [DataMember(Name="customData", EmitDefaultValue=false)]
        public AccessProfileCustomData CustomData { get; set; }

        /// <summary>
        /// Gets or Sets AccountIdentificationList
        /// </summary>
        [DataMember(Name="accountIdentificationList", EmitDefaultValue=false)]
        public AccountFilterAccountIdentificationList AccountIdentificationList { get; set; }

    }
}
