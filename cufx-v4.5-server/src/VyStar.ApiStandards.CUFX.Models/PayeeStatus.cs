/*
 * Credit Union Financial eXchange
 *
 * Credit Union Industry Standard. The following API examples are producedz using scripting methods to create a swagger representation of the XML/XSDs. In the event of any noted deviations, the published XSDs on www.cufxstandards.com are the basis of intended content and behavior. Please see https://bonifii.com/cufx-terms-of-use for the terms of use applicable for CUFX.
 *
 * The version of the OpenAPI document: 4.5
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using VyStar.ApiStandards.CUFX.Converters;

namespace VyStar.ApiStandards.CUFX.Models
{ 
        /// <summary>
        /// This is enumeration of statuses for the bill payee. This value indicates that the payee is active and visible to the member. This value indicates that the payee is inactive and visible to the member. This value indicates that the payee is inactive and invisible to the member; the payee cannot be re-activated. Some type of error has occured in the process of paying this payee and payments are not successfully received, please re-verify this payee. 
        /// </summary>
        /// <value>This is enumeration of statuses for the bill payee. This value indicates that the payee is active and visible to the member. This value indicates that the payee is inactive and visible to the member. This value indicates that the payee is inactive and invisible to the member; the payee cannot be re-activated. Some type of error has occured in the process of paying this payee and payments are not successfully received, please re-verify this payee. </value>
        [TypeConverter(typeof(CustomEnumConverter<PayeeStatus>))]
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum PayeeStatus
        {
            
            /// <summary>
            /// Enum ActiveEnum for Active
            /// </summary>
            [EnumMember(Value = "Active")]
            ActiveEnum = 1,
            
            /// <summary>
            /// Enum InactiveEnum for Inactive
            /// </summary>
            [EnumMember(Value = "Inactive")]
            InactiveEnum = 2,
            
            /// <summary>
            /// Enum DeletedEnum for Deleted
            /// </summary>
            [EnumMember(Value = "Deleted")]
            DeletedEnum = 3,
            
            /// <summary>
            /// Enum InvalidEnum for Invalid
            /// </summary>
            [EnumMember(Value = "Invalid")]
            InvalidEnum = 4
        }
}
