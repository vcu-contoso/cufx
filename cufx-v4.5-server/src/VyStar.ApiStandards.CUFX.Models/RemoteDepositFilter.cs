/*
 * Credit Union Financial eXchange
 *
 * Credit Union Industry Standard. The following API examples are producedz using scripting methods to create a swagger representation of the XML/XSDs. In the event of any noted deviations, the published XSDs on www.cufxstandards.com are the basis of intended content and behavior. Please see https://bonifii.com/cufx-terms-of-use for the terms of use applicable for CUFX.
 *
 * The version of the OpenAPI document: 4.5
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using VyStar.ApiStandards.CUFX.Converters;

namespace VyStar.ApiStandards.CUFX.Models
{ 
    /// <summary>
    /// The list of filter options for services requesting RemoteDeposit data. The options can be used in combination or by themselves. It is up to the data source to either return or affect the data requested or return a standard error identifying why the request was rejected. 
    /// </summary>
    [DataContract]
    public partial class RemoteDepositFilter 
    {
        /// <summary>
        /// Gets or Sets RemoteDepositIdList
        /// </summary>
        [DataMember(Name="remoteDepositIdList", EmitDefaultValue=false)]
        public RemoteDepositFilterRemoteDepositIdList RemoteDepositIdList { get; set; }

        /// <summary>
        /// Gets or Sets AccountIdList
        /// </summary>
        [DataMember(Name="accountIdList", EmitDefaultValue=false)]
        public AccountFilterAccountIdList AccountIdList { get; set; }

        /// <summary>
        /// Gets or Sets AccountStatusList
        /// </summary>
        [DataMember(Name="accountStatusList", EmitDefaultValue=false)]
        public AccountFilterAccountStatusList AccountStatusList { get; set; }

        /// <summary>
        /// Gets or Sets PartyIdList
        /// </summary>
        [DataMember(Name="partyIdList", EmitDefaultValue=false)]
        public AccountPartyIdList PartyIdList { get; set; }

        /// <summary>
        /// Gets or Sets StatusList
        /// </summary>
        [DataMember(Name="statusList", EmitDefaultValue=false)]
        public RemoteDepositFilterStatusList StatusList { get; set; }

        /// <summary>
        /// Gets or Sets ActionList
        /// </summary>
        [DataMember(Name="actionList", EmitDefaultValue=false)]
        public RemoteDepositFilterActionList ActionList { get; set; }

        /// <summary>
        /// Gets or Sets ImageValidationIssueList
        /// </summary>
        [DataMember(Name="imageValidationIssueList", EmitDefaultValue=false)]
        public RemoteDepositImageValidationIssueList ImageValidationIssueList { get; set; }

        /// <summary>
        /// Gets or Sets RemoteDepositDateRange
        /// </summary>
        [DataMember(Name="remoteDepositDateRange", EmitDefaultValue=false)]
        public AccessProfileFilterCreateAccessDateRange RemoteDepositDateRange { get; set; }


        /// <summary>
        /// An enumeration of possible image types Indicates to not return an image as part of the request. Return front images as part of the request. Return back images as part of the request. Return front and back images as part of the request. 
        /// </summary>
        /// <value>An enumeration of possible image types Indicates to not return an image as part of the request. Return front images as part of the request. Return back images as part of the request. Return front and back images as part of the request. </value>
        [TypeConverter(typeof(CustomEnumConverter<IncludeImageOnReadEnum>))]
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum IncludeImageOnReadEnum
        {
            
            /// <summary>
            /// Enum ArtifactIdOnlyEnum for ArtifactIdOnly
            /// </summary>
            [EnumMember(Value = "ArtifactIdOnly")]
            ArtifactIdOnlyEnum = 1,
            
            /// <summary>
            /// Enum FrontImageEnum for FrontImage
            /// </summary>
            [EnumMember(Value = "FrontImage")]
            FrontImageEnum = 2,
            
            /// <summary>
            /// Enum BackImageEnum for BackImage
            /// </summary>
            [EnumMember(Value = "BackImage")]
            BackImageEnum = 3,
            
            /// <summary>
            /// Enum BothFrontBackImageEnum for BothFrontBackImage
            /// </summary>
            [EnumMember(Value = "BothFrontBackImage")]
            BothFrontBackImageEnum = 4
        }

        /// <summary>
        /// An enumeration of possible image types Indicates to not return an image as part of the request. Return front images as part of the request. Return back images as part of the request. Return front and back images as part of the request. 
        /// </summary>
        /// <value>An enumeration of possible image types Indicates to not return an image as part of the request. Return front images as part of the request. Return back images as part of the request. Return front and back images as part of the request. </value>
        [DataMember(Name="includeImageOnRead", EmitDefaultValue=true)]
        public IncludeImageOnReadEnum IncludeImageOnRead { get; set; }

        /// <summary>
        /// Gets or Sets CustomData
        /// </summary>
        [DataMember(Name="customData", EmitDefaultValue=false)]
        public AccessProfileCustomData CustomData { get; set; }

        /// <summary>
        /// Gets or Sets AccountIdentificationList
        /// </summary>
        [DataMember(Name="accountIdentificationList", EmitDefaultValue=false)]
        public AccountFilterAccountIdentificationList AccountIdentificationList { get; set; }

    }
}
