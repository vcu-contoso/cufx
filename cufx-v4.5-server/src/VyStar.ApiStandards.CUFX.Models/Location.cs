/*
 * Credit Union Financial eXchange
 *
 * Credit Union Industry Standard. The following API examples are producedz using scripting methods to create a swagger representation of the XML/XSDs. In the event of any noted deviations, the published XSDs on www.cufxstandards.com are the basis of intended content and behavior. Please see https://bonifii.com/cufx-terms-of-use for the terms of use applicable for CUFX.
 *
 * The version of the OpenAPI document: 4.5
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using VyStar.ApiStandards.CUFX.Converters;

namespace VyStar.ApiStandards.CUFX.Models
{ 
    /// <summary>
    /// A location such as an ATM or a branch. 
    /// </summary>
    [DataContract]
    public partial class Location 
    {
        /// <summary>
        /// A unique identifier for the location. 
        /// </summary>
        /// <value>A unique identifier for the location. </value>
        [DataMember(Name="locationId", EmitDefaultValue=false)]
        public string LocationId { get; set; }

        /// <summary>
        /// An optional name for the location that would be used to display to the end user on the application, maps, etc. 
        /// </summary>
        /// <value>An optional name for the location that would be used to display to the end user on the application, maps, etc. </value>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets Distance
        /// </summary>
        [DataMember(Name="distance", EmitDefaultValue=false)]
        public LocationDistance Distance { get; set; }


        /// <summary>
        /// The type of location (e.g. ATM, branch). 
        /// </summary>
        /// <value>The type of location (e.g. ATM, branch). </value>
        [TypeConverter(typeof(CustomEnumConverter<TypeEnum>))]
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum TypeEnum
        {
            
            /// <summary>
            /// Enum ATMEnum for ATM
            /// </summary>
            [EnumMember(Value = "ATM")]
            ATMEnum = 1,
            
            /// <summary>
            /// Enum SharedATMEnum for SharedATM
            /// </summary>
            [EnumMember(Value = "SharedATM")]
            SharedATMEnum = 2,
            
            /// <summary>
            /// Enum BranchEnum for Branch
            /// </summary>
            [EnumMember(Value = "Branch")]
            BranchEnum = 3,
            
            /// <summary>
            /// Enum SharedBranchEnum for SharedBranch
            /// </summary>
            [EnumMember(Value = "SharedBranch")]
            SharedBranchEnum = 4,
            
            /// <summary>
            /// Enum KioskEnum for Kiosk
            /// </summary>
            [EnumMember(Value = "Kiosk")]
            KioskEnum = 5,
            
            /// <summary>
            /// Enum OtherEnum for Other
            /// </summary>
            [EnumMember(Value = "Other")]
            OtherEnum = 6
        }

        /// <summary>
        /// The type of location (e.g. ATM, branch). 
        /// </summary>
        /// <value>The type of location (e.g. ATM, branch). </value>
        [DataMember(Name="type", EmitDefaultValue=true)]
        public TypeEnum Type { get; set; }

        /// <summary>
        /// Gets or Sets Address
        /// </summary>
        [DataMember(Name="address", EmitDefaultValue=false)]
        public AccountExternalAccountBankAddress Address { get; set; }

        /// <summary>
        /// Gets or Sets Phone
        /// </summary>
        [DataMember(Name="phone", EmitDefaultValue=false)]
        public BillPayeePayeePhone Phone { get; set; }

        /// <summary>
        /// A url that links to a map displaying this location. 
        /// </summary>
        /// <value>A url that links to a map displaying this location. </value>
        [DataMember(Name="mapUrl", EmitDefaultValue=false)]
        public string MapUrl { get; set; }

        /// <summary>
        /// The network of the ATM or shared branch (e.g. COOP, NYCE, MoneyPass, Star, etc.). 
        /// </summary>
        /// <value>The network of the ATM or shared branch (e.g. COOP, NYCE, MoneyPass, Star, etc.). </value>
        [DataMember(Name="network", EmitDefaultValue=false)]
        public string Network { get; set; }

        /// <summary>
        /// Whether or not this location supports taking deposits. 
        /// </summary>
        /// <value>Whether or not this location supports taking deposits. </value>
        [DataMember(Name="depositTaking", EmitDefaultValue=true)]
        public bool DepositTaking { get; set; }

        /// <summary>
        /// Gets or Sets LocationHoursList
        /// </summary>
        [DataMember(Name="locationHoursList", EmitDefaultValue=false)]
        public LocationLocationHoursList LocationHoursList { get; set; }

        /// <summary>
        /// Gets or Sets ServicesList
        /// </summary>
        [DataMember(Name="servicesList", EmitDefaultValue=false)]
        public LocationServicesList ServicesList { get; set; }

        /// <summary>
        /// Gets or Sets CustomData
        /// </summary>
        [DataMember(Name="customData", EmitDefaultValue=false)]
        public AccessProfileCustomData CustomData { get; set; }

    }
}
