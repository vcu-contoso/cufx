/*
 * Credit Union Financial eXchange
 *
 * Credit Union Industry Standard. The following API examples are producedz using scripting methods to create a swagger representation of the XML/XSDs. In the event of any noted deviations, the published XSDs on www.cufxstandards.com are the basis of intended content and behavior. Please see https://bonifii.com/cufx-terms-of-use for the terms of use applicable for CUFX.
 *
 * The version of the OpenAPI document: 4.5
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using VyStar.ApiStandards.CUFX.Converters;

namespace VyStar.ApiStandards.CUFX.Models
{ 
        /// <summary>
        /// An enumeration of possible image validation issues. CAR read OK, but the amount does not match the amount specified in the remote deposit request. NOTE: Enumeration deprecated for intended removal in v5.0. Use enum AmountMismatch. The check image has folded corners. Excess skew in the check image. Check image was too dark. Check image was too light. The check image file size was below the minimize required size. The check image file size was above the maximum allowed size. The check image height or width is too small. The check image height or width is too great. The check image noise was too great. The check image date was not usable. The check image payee was not usable. The check image signature was not usable. The check image payor was not usable. The check image MICR was not usable. An unknown or unsupported image type was provided The endorsement on the back of the item is not detected. The amount contained in the image does not match the value requested for processing. The image is missing for validation. The image quality is too low. An unknown image validation issue. Other image validation issue. To further describe this issue, use the corresponding imageValidationIssueOther field. 
        /// </summary>
        /// <value>An enumeration of possible image validation issues. CAR read OK, but the amount does not match the amount specified in the remote deposit request. NOTE: Enumeration deprecated for intended removal in v5.0. Use enum AmountMismatch. The check image has folded corners. Excess skew in the check image. Check image was too dark. Check image was too light. The check image file size was below the minimize required size. The check image file size was above the maximum allowed size. The check image height or width is too small. The check image height or width is too great. The check image noise was too great. The check image date was not usable. The check image payee was not usable. The check image signature was not usable. The check image payor was not usable. The check image MICR was not usable. An unknown or unsupported image type was provided The endorsement on the back of the item is not detected. The amount contained in the image does not match the value requested for processing. The image is missing for validation. The image quality is too low. An unknown image validation issue. Other image validation issue. To further describe this issue, use the corresponding imageValidationIssueOther field. </value>
        [TypeConverter(typeof(CustomEnumConverter<ImageValidationIssue>))]
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum ImageValidationIssue
        {
            
            /// <summary>
            /// Enum CARMismatchFailedEnum for CARMismatchFailed
            /// </summary>
            [EnumMember(Value = "CARMismatchFailed")]
            CARMismatchFailedEnum = 1,
            
            /// <summary>
            /// Enum FoldedCornersEnum for FoldedCorners
            /// </summary>
            [EnumMember(Value = "FoldedCorners")]
            FoldedCornersEnum = 2,
            
            /// <summary>
            /// Enum ExcessSkewEnum for ExcessSkew
            /// </summary>
            [EnumMember(Value = "ExcessSkew")]
            ExcessSkewEnum = 3,
            
            /// <summary>
            /// Enum TooDarkEnum for TooDark
            /// </summary>
            [EnumMember(Value = "TooDark")]
            TooDarkEnum = 4,
            
            /// <summary>
            /// Enum TooLightEnum for TooLight
            /// </summary>
            [EnumMember(Value = "TooLight")]
            TooLightEnum = 5,
            
            /// <summary>
            /// Enum BelowMinSizeEnum for BelowMinSize
            /// </summary>
            [EnumMember(Value = "BelowMinSize")]
            BelowMinSizeEnum = 6,
            
            /// <summary>
            /// Enum AboveMaxSizeEnum for AboveMaxSize
            /// </summary>
            [EnumMember(Value = "AboveMaxSize")]
            AboveMaxSizeEnum = 7,
            
            /// <summary>
            /// Enum UndersizedImageEnum for UndersizedImage
            /// </summary>
            [EnumMember(Value = "UndersizedImage")]
            UndersizedImageEnum = 8,
            
            /// <summary>
            /// Enum OversizedImageEnum for OversizedImage
            /// </summary>
            [EnumMember(Value = "OversizedImage")]
            OversizedImageEnum = 9,
            
            /// <summary>
            /// Enum SpotNoiseEnum for SpotNoise
            /// </summary>
            [EnumMember(Value = "SpotNoise")]
            SpotNoiseEnum = 10,
            
            /// <summary>
            /// Enum DateUsabilityEnum for DateUsability
            /// </summary>
            [EnumMember(Value = "DateUsability")]
            DateUsabilityEnum = 11,
            
            /// <summary>
            /// Enum PayeeUsabilityEnum for PayeeUsability
            /// </summary>
            [EnumMember(Value = "PayeeUsability")]
            PayeeUsabilityEnum = 12,
            
            /// <summary>
            /// Enum SignatureUsabilityEnum for SignatureUsability
            /// </summary>
            [EnumMember(Value = "SignatureUsability")]
            SignatureUsabilityEnum = 13,
            
            /// <summary>
            /// Enum PayorUsabilityEnum for PayorUsability
            /// </summary>
            [EnumMember(Value = "PayorUsability")]
            PayorUsabilityEnum = 14,
            
            /// <summary>
            /// Enum MICRUsabilityEnum for MICRUsability
            /// </summary>
            [EnumMember(Value = "MICRUsability")]
            MICRUsabilityEnum = 15,
            
            /// <summary>
            /// Enum ImageFormatEnum for ImageFormat
            /// </summary>
            [EnumMember(Value = "ImageFormat")]
            ImageFormatEnum = 16,
            
            /// <summary>
            /// Enum EndorsementUsabilityEnum for EndorsementUsability
            /// </summary>
            [EnumMember(Value = "EndorsementUsability")]
            EndorsementUsabilityEnum = 17,
            
            /// <summary>
            /// Enum AmountMismatchEnum for AmountMismatch
            /// </summary>
            [EnumMember(Value = "AmountMismatch")]
            AmountMismatchEnum = 18,
            
            /// <summary>
            /// Enum MissingEnum for Missing
            /// </summary>
            [EnumMember(Value = "Missing")]
            MissingEnum = 19,
            
            /// <summary>
            /// Enum ImageQualityEnum for ImageQuality
            /// </summary>
            [EnumMember(Value = "ImageQuality")]
            ImageQualityEnum = 20,
            
            /// <summary>
            /// Enum UnknownEnum for Unknown
            /// </summary>
            [EnumMember(Value = "Unknown")]
            UnknownEnum = 21,
            
            /// <summary>
            /// Enum OtherEnum for Other
            /// </summary>
            [EnumMember(Value = "Other")]
            OtherEnum = 22
        }
}
