/*
 * Credit Union Financial eXchange
 *
 * Credit Union Industry Standard. The following API examples are producedz using scripting methods to create a swagger representation of the XML/XSDs. In the event of any noted deviations, the published XSDs on www.cufxstandards.com are the basis of intended content and behavior. Please see https://bonifii.com/cufx-terms-of-use for the terms of use applicable for CUFX.
 *
 * The version of the OpenAPI document: 4.5
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using VyStar.ApiStandards.CUFX.Converters;

namespace VyStar.ApiStandards.CUFX.Models
{ 
    /// <summary>
    /// The list of filter options for services requesting credit report data from storage.  The options can be used in combination or by themselves.  It is up to the data source to either return or affect the data requested or return a standard error identifying why the request was rejected. 
    /// </summary>
    [DataContract]
    public partial class CreditReportFilter 
    {
        /// <summary>
        /// Gets or Sets CreditReportIdList
        /// </summary>
        [DataMember(Name="creditReportIdList", EmitDefaultValue=false)]
        public CreditReportFilterCreditReportIdList CreditReportIdList { get; set; }

        /// <summary>
        /// Gets or Sets CreditReportDateRange
        /// </summary>
        [DataMember(Name="creditReportDateRange", EmitDefaultValue=false)]
        public AccessProfileFilterCreateAccessDateRange CreditReportDateRange { get; set; }

        /// <summary>
        /// Filter that is used searching the credit reports based on minimum credit score. min and max amount filters work together. Must be less than or equal to the maxAmount if a max amount is supplied. If neither minCreditScore nor maxCreditScore is provided, all applicable credit reports will be returned based on other criteria. 
        /// </summary>
        /// <value>Filter that is used searching the credit reports based on minimum credit score. min and max amount filters work together. Must be less than or equal to the maxAmount if a max amount is supplied. If neither minCreditScore nor maxCreditScore is provided, all applicable credit reports will be returned based on other criteria. </value>
        [DataMember(Name="minCreditScore", EmitDefaultValue=true)]
        public int MinCreditScore { get; set; }

        /// <summary>
        /// Filter that is used searching the credit reports based on maximum credit score. min and max amount filters work together. Must be less than or equal to the maxAmount if a max amount is supplied. If neither minCreditScore nor maxCreditScore is provided, all applicable credit reports will be returned based on other criteria. 
        /// </summary>
        /// <value>Filter that is used searching the credit reports based on maximum credit score. min and max amount filters work together. Must be less than or equal to the maxAmount if a max amount is supplied. If neither minCreditScore nor maxCreditScore is provided, all applicable credit reports will be returned based on other criteria. </value>
        [DataMember(Name="maxCreditScore", EmitDefaultValue=true)]
        public int MaxCreditScore { get; set; }

        /// <summary>
        /// For example, Experian CreditProfile, TransUnion EmploymentReport, as defined and supported by individual service providers. Can request more than one report type to be returned for each applicant, if available. 
        /// </summary>
        /// <value>For example, Experian CreditProfile, TransUnion EmploymentReport, as defined and supported by individual service providers. Can request more than one report type to be returned for each applicant, if available. </value>
        [DataMember(Name="reportType", EmitDefaultValue=false)]
        public string ReportType { get; set; }

        /// <summary>
        /// The party ID is a persistent and unique identifier for the party not related to the accounts they own but tied to that person or organization. It should be unique for all parties across the institution and remain the same over the life of the relationship with the financial institution. 
        /// </summary>
        /// <value>The party ID is a persistent and unique identifier for the party not related to the accounts they own but tied to that person or organization. It should be unique for all parties across the institution and remain the same over the life of the relationship with the financial institution. </value>
        [DataMember(Name="partyId", EmitDefaultValue=false)]
        public string PartyId { get; set; }

        /// <summary>
        /// Individual Social Security Number (SSN), Individual Tax Payer Number (TIN), the organizational Employer Identification Number (EIN), or other international Tax ID. 
        /// </summary>
        /// <value>Individual Social Security Number (SSN), Individual Tax Payer Number (TIN), the organizational Employer Identification Number (EIN), or other international Tax ID. </value>
        [DataMember(Name="taxId", EmitDefaultValue=false)]
        public string TaxId { get; set; }

        /// <summary>
        /// Gets or Sets CustomData
        /// </summary>
        [DataMember(Name="customData", EmitDefaultValue=false)]
        public AccessProfileCustomData CustomData { get; set; }

    }
}
