/*
 * Credit Union Financial eXchange
 *
 * Credit Union Industry Standard. The following API examples are producedz using scripting methods to create a swagger representation of the XML/XSDs. In the event of any noted deviations, the published XSDs on www.cufxstandards.com are the basis of intended content and behavior. Please see https://bonifii.com/cufx-terms-of-use for the terms of use applicable for CUFX.
 *
 * The version of the OpenAPI document: 4.5
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using VyStar.ApiStandards.CUFX.Converters;

namespace VyStar.ApiStandards.CUFX.Models
{ 
    /// <summary>
    /// A location filter is used to query for locations near an address, for a given type, etc. 
    /// </summary>
    [DataContract]
    public partial class LocationFilter 
    {
        /// <summary>
        /// Gets or Sets LocationIdList
        /// </summary>
        [DataMember(Name="locationIdList", EmitDefaultValue=false)]
        public LocationFilterLocationIdList LocationIdList { get; set; }

        /// <summary>
        /// Gets or Sets LocationTypeList
        /// </summary>
        [DataMember(Name="locationTypeList", EmitDefaultValue=false)]
        public LocationFilterLocationTypeList LocationTypeList { get; set; }

        /// <summary>
        /// Gets or Sets ServicesList
        /// </summary>
        [DataMember(Name="servicesList", EmitDefaultValue=false)]
        public LocationServicesList ServicesList { get; set; }

        /// <summary>
        /// Gets or Sets SearchFromAddress
        /// </summary>
        [DataMember(Name="searchFromAddress", EmitDefaultValue=false)]
        public AccountExternalAccountBankAddress SearchFromAddress { get; set; }

        /// <summary>
        /// Whether or not this location supports taking deposits. 
        /// </summary>
        /// <value>Whether or not this location supports taking deposits. </value>
        [DataMember(Name="depositTaking", EmitDefaultValue=true)]
        public bool DepositTaking { get; set; }

        /// <summary>
        /// Maximum number of results to return. 
        /// </summary>
        /// <value>Maximum number of results to return. </value>
        [DataMember(Name="maxNumberOfResults", EmitDefaultValue=true)]
        public int MaxNumberOfResults { get; set; }

        /// <summary>
        /// Gets or Sets MaxDistance
        /// </summary>
        [DataMember(Name="maxDistance", EmitDefaultValue=false)]
        public LocationDistance MaxDistance { get; set; }

        /// <summary>
        /// Filters for locations that are currently open. If not provided will return all results bases on provided criteria. 
        /// </summary>
        /// <value>Filters for locations that are currently open. If not provided will return all results bases on provided criteria. </value>
        [DataMember(Name="isLocationOpen", EmitDefaultValue=true)]
        public bool IsLocationOpen { get; set; }

        /// <summary>
        /// Gets or Sets CustomData
        /// </summary>
        [DataMember(Name="customData", EmitDefaultValue=false)]
        public AccessProfileCustomData CustomData { get; set; }

    }
}
