/*
 * Credit Union Financial eXchange
 *
 * Credit Union Industry Standard. The following API examples are producedz using scripting methods to create a swagger representation of the XML/XSDs. In the event of any noted deviations, the published XSDs on www.cufxstandards.com are the basis of intended content and behavior. Please see https://bonifii.com/cufx-terms-of-use for the terms of use applicable for CUFX.
 *
 * The version of the OpenAPI document: 4.5
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using VyStar.ApiStandards.CUFX.Converters;

namespace VyStar.ApiStandards.CUFX.Models
{ 
    /// <summary>
    /// The list of filter options for services requesting note data. The options can be used in combination or by themselves. It is up to the data source to either return or affect the data requested or return a standard error identifying why the request was rejected. 
    /// </summary>
    [DataContract]
    public partial class NotesFilter 
    {
        /// <summary>
        /// Gets or Sets NoteIdList
        /// </summary>
        [DataMember(Name="noteIdList", EmitDefaultValue=false)]
        public NotesFilterNoteIdList NoteIdList { get; set; }


        /// <summary>
        /// Enumeration of the different types of top-level records. 
        /// </summary>
        /// <value>Enumeration of the different types of top-level records. </value>
        [TypeConverter(typeof(CustomEnumConverter<RecordTypeEnum>))]
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum RecordTypeEnum
        {
            
            /// <summary>
            /// Enum AccountEnum for Account
            /// </summary>
            [EnumMember(Value = "Account")]
            AccountEnum = 1,
            
            /// <summary>
            /// Enum ApplicationEnum for Application
            /// </summary>
            [EnumMember(Value = "Application")]
            ApplicationEnum = 2,
            
            /// <summary>
            /// Enum LoanEnum for Loan
            /// </summary>
            [EnumMember(Value = "Loan")]
            LoanEnum = 3,
            
            /// <summary>
            /// Enum PortfolioEnum for Portfolio
            /// </summary>
            [EnumMember(Value = "Portfolio")]
            PortfolioEnum = 4,
            
            /// <summary>
            /// Enum DepositEnum for Deposit
            /// </summary>
            [EnumMember(Value = "Deposit")]
            DepositEnum = 5,
            
            /// <summary>
            /// Enum ProductServiceRequestEnum for ProductServiceRequest
            /// </summary>
            [EnumMember(Value = "ProductServiceRequest")]
            ProductServiceRequestEnum = 6,
            
            /// <summary>
            /// Enum RelationshipEnum for Relationship
            /// </summary>
            [EnumMember(Value = "Relationship")]
            RelationshipEnum = 7,
            
            /// <summary>
            /// Enum RequestEnum for Request
            /// </summary>
            [EnumMember(Value = "Request")]
            RequestEnum = 8,
            
            /// <summary>
            /// Enum ActivityEnum for Activity
            /// </summary>
            [EnumMember(Value = "Activity")]
            ActivityEnum = 9,
            
            /// <summary>
            /// Enum TransactionEnum for Transaction
            /// </summary>
            [EnumMember(Value = "Transaction")]
            TransactionEnum = 10,
            
            /// <summary>
            /// Enum TransferEnum for Transfer
            /// </summary>
            [EnumMember(Value = "Transfer")]
            TransferEnum = 11,
            
            /// <summary>
            /// Enum TransferOccurrenceEnum for TransferOccurrence
            /// </summary>
            [EnumMember(Value = "TransferOccurrence")]
            TransferOccurrenceEnum = 12,
            
            /// <summary>
            /// Enum TransferRecurringEnum for TransferRecurring
            /// </summary>
            [EnumMember(Value = "TransferRecurring")]
            TransferRecurringEnum = 13
        }

        /// <summary>
        /// Enumeration of the different types of top-level records. 
        /// </summary>
        /// <value>Enumeration of the different types of top-level records. </value>
        [DataMember(Name="recordType", EmitDefaultValue=true)]
        public RecordTypeEnum RecordType { get; set; }

        /// <summary>
        /// Gets or Sets NoteCodelist
        /// </summary>
        [DataMember(Name="noteCodelist", EmitDefaultValue=false)]
        public NotesFilterNoteCodelist NoteCodelist { get; set; }

        /// <summary>
        /// Gets or Sets NoteCreatorList
        /// </summary>
        [DataMember(Name="noteCreatorList", EmitDefaultValue=false)]
        public NotesFilterNoteCreatorList NoteCreatorList { get; set; }

        /// <summary>
        /// Gets or Sets AccountIdList
        /// </summary>
        [DataMember(Name="accountIdList", EmitDefaultValue=false)]
        public AccountFilterAccountIdList AccountIdList { get; set; }

        /// <summary>
        /// Gets or Sets AccountStatusList
        /// </summary>
        [DataMember(Name="accountStatusList", EmitDefaultValue=false)]
        public AccountFilterAccountStatusList AccountStatusList { get; set; }

        /// <summary>
        /// Gets or Sets ApplicationIdList
        /// </summary>
        [DataMember(Name="applicationIdList", EmitDefaultValue=false)]
        public ApplicationFilterApplicationIdList ApplicationIdList { get; set; }

        /// <summary>
        /// Gets or Sets PartyIdList
        /// </summary>
        [DataMember(Name="partyIdList", EmitDefaultValue=false)]
        public AccountPartyIdList PartyIdList { get; set; }

        /// <summary>
        /// Gets or Sets RelationshipIdList
        /// </summary>
        [DataMember(Name="relationshipIdList", EmitDefaultValue=false)]
        public AccountFilterRelationshipIdList RelationshipIdList { get; set; }

        /// <summary>
        /// Gets or Sets ProductServiceRequestIdList
        /// </summary>
        [DataMember(Name="productServiceRequestIdList", EmitDefaultValue=false)]
        public FieldFilterProductServiceRequestIdList ProductServiceRequestIdList { get; set; }

        /// <summary>
        /// Gets or Sets ActivityIdList
        /// </summary>
        [DataMember(Name="activityIdList", EmitDefaultValue=false)]
        public ActivityFilterActivityIdList ActivityIdList { get; set; }

        /// <summary>
        /// Gets or Sets TransactionIdList
        /// </summary>
        [DataMember(Name="transactionIdList", EmitDefaultValue=false)]
        public HoldFilterTransactionIdList TransactionIdList { get; set; }

        /// <summary>
        /// Gets or Sets NoteCreatedDateRange
        /// </summary>
        [DataMember(Name="noteCreatedDateRange", EmitDefaultValue=false)]
        public AccessProfileFilterCreateAccessDateRange NoteCreatedDateRange { get; set; }

        /// <summary>
        /// Gets or Sets CustomData
        /// </summary>
        [DataMember(Name="customData", EmitDefaultValue=false)]
        public AccessProfileCustomData CustomData { get; set; }

        /// <summary>
        /// Gets or Sets AccountIdentificationList
        /// </summary>
        [DataMember(Name="accountIdentificationList", EmitDefaultValue=false)]
        public AccountFilterAccountIdentificationList AccountIdentificationList { get; set; }

    }
}
