/*
 * Credit Union Financial eXchange
 *
 * Credit Union Industry Standard. The following API examples are producedz using scripting methods to create a swagger representation of the XML/XSDs. In the event of any noted deviations, the published XSDs on www.cufxstandards.com are the basis of intended content and behavior. Please see https://bonifii.com/cufx-terms-of-use for the terms of use applicable for CUFX.
 *
 * The version of the OpenAPI document: 4.5
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using VyStar.ApiStandards.CUFX.Converters;

namespace VyStar.ApiStandards.CUFX.Models
{ 
    /// <summary>
    /// Details describing up front skip payment parameters, available in specific loan products. 
    /// </summary>
    [DataContract]
    public partial class LoanSkipPayment 
    {
        /// <summary>
        /// Number of loan payments allowed to be skipped. 
        /// </summary>
        /// <value>Number of loan payments allowed to be skipped. </value>
        [DataMember(Name="numberOfSkipPaymentsAllowed", EmitDefaultValue=true)]
        public int NumberOfSkipPaymentsAllowed { get; set; }

        /// <summary>
        /// Date a borrower is allowed to begin skipping payments. 
        /// </summary>
        /// <value>Date a borrower is allowed to begin skipping payments. </value>
        [DataMember(Name="skipPaymentBeginDate", EmitDefaultValue=false)]
        public DateTime SkipPaymentBeginDate { get; set; }


        /// <summary>
        /// Type representing name of months. 
        /// </summary>
        /// <value>Type representing name of months. </value>
        [TypeConverter(typeof(CustomEnumConverter<MonthToStartSkipPaymentsEnum>))]
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum MonthToStartSkipPaymentsEnum
        {
            
            /// <summary>
            /// Enum JanuaryEnum for January
            /// </summary>
            [EnumMember(Value = "January")]
            JanuaryEnum = 1,
            
            /// <summary>
            /// Enum FebruaryEnum for February
            /// </summary>
            [EnumMember(Value = "February")]
            FebruaryEnum = 2,
            
            /// <summary>
            /// Enum MarchEnum for March
            /// </summary>
            [EnumMember(Value = "March")]
            MarchEnum = 3,
            
            /// <summary>
            /// Enum AprilEnum for April
            /// </summary>
            [EnumMember(Value = "April")]
            AprilEnum = 4,
            
            /// <summary>
            /// Enum MayEnum for May
            /// </summary>
            [EnumMember(Value = "May")]
            MayEnum = 5,
            
            /// <summary>
            /// Enum JuneEnum for June
            /// </summary>
            [EnumMember(Value = "June")]
            JuneEnum = 6,
            
            /// <summary>
            /// Enum JulyEnum for July
            /// </summary>
            [EnumMember(Value = "July")]
            JulyEnum = 7,
            
            /// <summary>
            /// Enum AugustEnum for August
            /// </summary>
            [EnumMember(Value = "August")]
            AugustEnum = 8,
            
            /// <summary>
            /// Enum SeptemberEnum for September
            /// </summary>
            [EnumMember(Value = "September")]
            SeptemberEnum = 9,
            
            /// <summary>
            /// Enum OctoberEnum for October
            /// </summary>
            [EnumMember(Value = "October")]
            OctoberEnum = 10,
            
            /// <summary>
            /// Enum NovemberEnum for November
            /// </summary>
            [EnumMember(Value = "November")]
            NovemberEnum = 11,
            
            /// <summary>
            /// Enum DecemberEnum for December
            /// </summary>
            [EnumMember(Value = "December")]
            DecemberEnum = 12
        }

        /// <summary>
        /// Type representing name of months. 
        /// </summary>
        /// <value>Type representing name of months. </value>
        [DataMember(Name="monthToStartSkipPayments", EmitDefaultValue=true)]
        public MonthToStartSkipPaymentsEnum MonthToStartSkipPayments { get; set; }

        /// <summary>
        /// Indicates the year that a loan payment will be skipped. 
        /// </summary>
        /// <value>Indicates the year that a loan payment will be skipped. </value>
        [DataMember(Name="yearToSkipPayment", EmitDefaultValue=true)]
        public int YearToSkipPayment { get; set; }

        /// <summary>
        /// Indicates that the skip payment details are on a recurring basis. 
        /// </summary>
        /// <value>Indicates that the skip payment details are on a recurring basis. </value>
        [DataMember(Name="isSkipRecurring", EmitDefaultValue=true)]
        public bool IsSkipRecurring { get; set; }

    }
}
