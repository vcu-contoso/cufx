/*
 * Credit Union Financial eXchange
 *
 * Credit Union Industry Standard. The following API examples are producedz using scripting methods to create a swagger representation of the XML/XSDs. In the event of any noted deviations, the published XSDs on www.cufxstandards.com are the basis of intended content and behavior. Please see https://bonifii.com/cufx-terms-of-use for the terms of use applicable for CUFX.
 *
 * The version of the OpenAPI document: 4.5
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using VyStar.ApiStandards.CUFX.Converters;

namespace VyStar.ApiStandards.CUFX.Models
{ 
    /// <summary>
    /// The list of filter options for services requesting artifact data.  The options can be used in combination or by themselves. It is up to the data source to either return the data requested or return a standard error identifying why the request was rejected. 
    /// </summary>
    [DataContract]
    public partial class ArtifactFilter 
    {
        /// <summary>
        /// Gets or Sets ArtifactIdList
        /// </summary>
        [DataMember(Name="artifactIdList", EmitDefaultValue=false)]
        public ArtifactFilterArtifactIdList ArtifactIdList { get; set; }

        /// <summary>
        /// Gets or Sets AccountIdList
        /// </summary>
        [DataMember(Name="accountIdList", EmitDefaultValue=false)]
        public AccountFilterAccountIdList AccountIdList { get; set; }

        /// <summary>
        /// Gets or Sets PartyIdList
        /// </summary>
        [DataMember(Name="partyIdList", EmitDefaultValue=false)]
        public AccountPartyIdList PartyIdList { get; set; }

        /// <summary>
        /// A human-readable name of the artifact. 
        /// </summary>
        /// <value>A human-readable name of the artifact. </value>
        [DataMember(Name="artifactName", EmitDefaultValue=false)]
        public string ArtifactName { get; set; }

        /// <summary>
        /// A human-readable text describing the contents of the artifact. 
        /// </summary>
        /// <value>A human-readable text describing the contents of the artifact. </value>
        [DataMember(Name="artifactDescription", EmitDefaultValue=false)]
        public string ArtifactDescription { get; set; }

        /// <summary>
        /// A flag used to determine if the artifact has been archived or not. 
        /// </summary>
        /// <value>A flag used to determine if the artifact has been archived or not. </value>
        [DataMember(Name="artifactArchived", EmitDefaultValue=true)]
        public bool ArtifactArchived { get; set; }

        /// <summary>
        /// Gets or Sets ArtifactCreationDateRange
        /// </summary>
        [DataMember(Name="artifactCreationDateRange", EmitDefaultValue=false)]
        public AccessProfileFilterCreateAccessDateRange ArtifactCreationDateRange { get; set; }

        /// <summary>
        /// Gets or Sets ArtifactModifiedDateRange
        /// </summary>
        [DataMember(Name="artifactModifiedDateRange", EmitDefaultValue=false)]
        public AccessProfileFilterCreateAccessDateRange ArtifactModifiedDateRange { get; set; }

        /// <summary>
        /// Gets or Sets ArtifactArchivedDateRange
        /// </summary>
        [DataMember(Name="artifactArchivedDateRange", EmitDefaultValue=false)]
        public AccessProfileFilterCreateAccessDateRange ArtifactArchivedDateRange { get; set; }

        /// <summary>
        /// Gets or Sets ArtifactDeletedDateRange
        /// </summary>
        [DataMember(Name="artifactDeletedDateRange", EmitDefaultValue=false)]
        public AccessProfileFilterCreateAccessDateRange ArtifactDeletedDateRange { get; set; }

        /// <summary>
        /// Gets or Sets CustomData
        /// </summary>
        [DataMember(Name="customData", EmitDefaultValue=false)]
        public AccessProfileCustomData CustomData { get; set; }

        /// <summary>
        /// Gets or Sets AccountIdentificationList
        /// </summary>
        [DataMember(Name="accountIdentificationList", EmitDefaultValue=false)]
        public AccountFilterAccountIdentificationList AccountIdentificationList { get; set; }

    }
}
