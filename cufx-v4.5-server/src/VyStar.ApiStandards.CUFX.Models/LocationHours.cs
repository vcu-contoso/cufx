/*
 * Credit Union Financial eXchange
 *
 * Credit Union Industry Standard. The following API examples are producedz using scripting methods to create a swagger representation of the XML/XSDs. In the event of any noted deviations, the published XSDs on www.cufxstandards.com are the basis of intended content and behavior. Please see https://bonifii.com/cufx-terms-of-use for the terms of use applicable for CUFX.
 *
 * The version of the OpenAPI document: 4.5
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using VyStar.ApiStandards.CUFX.Converters;

namespace VyStar.ApiStandards.CUFX.Models
{ 
    /// <summary>
    /// The location hours of an ATM or branch. 
    /// </summary>
    [DataContract]
    public partial class LocationHours 
    {

        /// <summary>
        /// An optional indicator of the type of hours being described, i.e. lobby hours, drive-up hours, etc. 
        /// </summary>
        /// <value>An optional indicator of the type of hours being described, i.e. lobby hours, drive-up hours, etc. </value>
        [TypeConverter(typeof(CustomEnumConverter<LocationHoursTypeEnum>))]
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum LocationHoursTypeEnum
        {
            
            /// <summary>
            /// Enum LobbyEnum for Lobby
            /// </summary>
            [EnumMember(Value = "Lobby")]
            LobbyEnum = 1,
            
            /// <summary>
            /// Enum DriveUpEnum for DriveUp
            /// </summary>
            [EnumMember(Value = "DriveUp")]
            DriveUpEnum = 2,
            
            /// <summary>
            /// Enum ATMEnum for ATM
            /// </summary>
            [EnumMember(Value = "ATM")]
            ATMEnum = 3,
            
            /// <summary>
            /// Enum OtherEnum for Other
            /// </summary>
            [EnumMember(Value = "Other")]
            OtherEnum = 4
        }

        /// <summary>
        /// An optional indicator of the type of hours being described, i.e. lobby hours, drive-up hours, etc. 
        /// </summary>
        /// <value>An optional indicator of the type of hours being described, i.e. lobby hours, drive-up hours, etc. </value>
        [DataMember(Name="locationHoursType", EmitDefaultValue=true)]
        public LocationHoursTypeEnum LocationHoursType { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name="description", EmitDefaultValue=false)]
        public string Description { get; set; }


        /// <summary>
        /// Gets or Sets DayOfTheWeek
        /// </summary>
        [TypeConverter(typeof(CustomEnumConverter<DayOfTheWeekEnum>))]
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum DayOfTheWeekEnum
        {
            
            /// <summary>
            /// Enum MondayEnum for Monday
            /// </summary>
            [EnumMember(Value = "Monday")]
            MondayEnum = 1,
            
            /// <summary>
            /// Enum TuesdayEnum for Tuesday
            /// </summary>
            [EnumMember(Value = "Tuesday")]
            TuesdayEnum = 2,
            
            /// <summary>
            /// Enum WednesdayEnum for Wednesday
            /// </summary>
            [EnumMember(Value = "Wednesday")]
            WednesdayEnum = 3,
            
            /// <summary>
            /// Enum ThursdayEnum for Thursday
            /// </summary>
            [EnumMember(Value = "Thursday")]
            ThursdayEnum = 4,
            
            /// <summary>
            /// Enum FridayEnum for Friday
            /// </summary>
            [EnumMember(Value = "Friday")]
            FridayEnum = 5,
            
            /// <summary>
            /// Enum SaturdayEnum for Saturday
            /// </summary>
            [EnumMember(Value = "Saturday")]
            SaturdayEnum = 6,
            
            /// <summary>
            /// Enum SundayEnum for Sunday
            /// </summary>
            [EnumMember(Value = "Sunday")]
            SundayEnum = 7
        }

        /// <summary>
        /// Gets or Sets DayOfTheWeek
        /// </summary>
        [DataMember(Name="dayOfTheWeek", EmitDefaultValue=true)]
        public DayOfTheWeekEnum DayOfTheWeek { get; set; }

        /// <summary>
        /// Gets or Sets OpenTime
        /// </summary>
        [DataMember(Name="openTime", EmitDefaultValue=false)]
        public string OpenTime { get; set; }

        /// <summary>
        /// Gets or Sets CloseTime
        /// </summary>
        [DataMember(Name="closeTime", EmitDefaultValue=false)]
        public string CloseTime { get; set; }

        /// <summary>
        /// Gets or Sets ClosedAllDay
        /// </summary>
        [DataMember(Name="closedAllDay", EmitDefaultValue=true)]
        public bool ClosedAllDay { get; set; }

        /// <summary>
        /// Gets or Sets OpenAllDay
        /// </summary>
        [DataMember(Name="openAllDay", EmitDefaultValue=true)]
        public bool OpenAllDay { get; set; }

    }
}
