/*
 * Credit Union Financial eXchange
 *
 * Credit Union Industry Standard. The following API examples are producedz using scripting methods to create a swagger representation of the XML/XSDs. In the event of any noted deviations, the published XSDs on www.cufxstandards.com are the basis of intended content and behavior. Please see https://bonifii.com/cufx-terms-of-use for the terms of use applicable for CUFX.
 *
 * The version of the OpenAPI document: 4.5
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using VyStar.ApiStandards.CUFX.Converters;

namespace VyStar.ApiStandards.CUFX.Models
{ 
    /// <summary>
    /// Intended choice - Due to cross language serialization issues the choice construct has been removed. It is the responsibility of the implementer to add programmatic logic for this complex type to detect, handle and or error when population of more than one element is present. A loan disbursement contains all the information necessary to disburse the funds for a loan, such as disbursing the funds to a check, a dealer, the members share, etc. 
    /// </summary>
    [DataContract]
    public partial class LoanDisbursement 
    {
        /// <summary>
        /// Gets or Sets LoanDisbursementCheck
        /// </summary>
        [DataMember(Name="loanDisbursementCheck", EmitDefaultValue=false)]
        public LoanDisbursementLoanDisbursementCheck LoanDisbursementCheck { get; set; }

        /// <summary>
        /// Gets or Sets LoanDisbursementDepositToAccount
        /// </summary>
        [DataMember(Name="loanDisbursementDepositToAccount", EmitDefaultValue=false)]
        public LoanDisbursementLoanDisbursementDepositToAccount LoanDisbursementDepositToAccount { get; set; }

        /// <summary>
        /// Gets or Sets LoanDisbursementDealerAch
        /// </summary>
        [DataMember(Name="loanDisbursementDealerAch", EmitDefaultValue=false)]
        public LoanDisbursementLoanDisbursementDealerAch LoanDisbursementDealerAch { get; set; }

        /// <summary>
        /// Gets or Sets LoanDisbursementGL
        /// </summary>
        [DataMember(Name="loanDisbursementGL", EmitDefaultValue=false)]
        public LoanDisbursementLoanDisbursementGL LoanDisbursementGL { get; set; }

        /// <summary>
        /// The transaction ID is a persistent and unique identifier for each transaction. It must be unique within the account as it is used for matching purposes. Transactions should always be returned with the same ID, even if transactional information has changed (type, amount, description, date, etc.) since the previous account data pull. 
        /// </summary>
        /// <value>The transaction ID is a persistent and unique identifier for each transaction. It must be unique within the account as it is used for matching purposes. Transactions should always be returned with the same ID, even if transactional information has changed (type, amount, description, date, etc.) since the previous account data pull. </value>
        [DataMember(Name="transactionId", EmitDefaultValue=false)]
        public string TransactionId { get; set; }

    }
}
