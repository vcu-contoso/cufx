/*
 * Credit Union Financial eXchange
 *
 * Credit Union Industry Standard. The following API examples are producedz using scripting methods to create a swagger representation of the XML/XSDs. In the event of any noted deviations, the published XSDs on www.cufxstandards.com are the basis of intended content and behavior. Please see https://bonifii.com/cufx-terms-of-use for the terms of use applicable for CUFX.
 *
 * The version of the OpenAPI document: 4.5
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using VyStar.ApiStandards.CUFX.Converters;

namespace VyStar.ApiStandards.CUFX.Models
{ 
        /// <summary>
        /// Enumeration of the different types of statuses for a card. The card has been disabled typically controlled by the FI. Card is to be captured and destroyed at next presentation. The card has been disabled typically controlled by the card owner. 
        /// </summary>
        /// <value>Enumeration of the different types of statuses for a card. The card has been disabled typically controlled by the FI. Card is to be captured and destroyed at next presentation. The card has been disabled typically controlled by the card owner. </value>
        [TypeConverter(typeof(CustomEnumConverter<CardStatus>))]
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum CardStatus
        {
            
            /// <summary>
            /// Enum ActiveEnum for Active
            /// </summary>
            [EnumMember(Value = "Active")]
            ActiveEnum = 1,
            
            /// <summary>
            /// Enum AssignPINEnum for AssignPIN
            /// </summary>
            [EnumMember(Value = "AssignPIN")]
            AssignPINEnum = 2,
            
            /// <summary>
            /// Enum BlockedEnum for Blocked
            /// </summary>
            [EnumMember(Value = "Blocked")]
            BlockedEnum = 3,
            
            /// <summary>
            /// Enum ClosedEnum for Closed
            /// </summary>
            [EnumMember(Value = "Closed")]
            ClosedEnum = 4,
            
            /// <summary>
            /// Enum ExpediteEnum for Expedite
            /// </summary>
            [EnumMember(Value = "Expedite")]
            ExpediteEnum = 5,
            
            /// <summary>
            /// Enum ExpiredEnum for Expired
            /// </summary>
            [EnumMember(Value = "Expired")]
            ExpiredEnum = 6,
            
            /// <summary>
            /// Enum HotCardedEnum for HotCarded
            /// </summary>
            [EnumMember(Value = "HotCarded")]
            HotCardedEnum = 7,
            
            /// <summary>
            /// Enum InactiveEnum for Inactive
            /// </summary>
            [EnumMember(Value = "Inactive")]
            InactiveEnum = 8,
            
            /// <summary>
            /// Enum IssuedEnum for Issued
            /// </summary>
            [EnumMember(Value = "Issued")]
            IssuedEnum = 9,
            
            /// <summary>
            /// Enum LostEnum for Lost
            /// </summary>
            [EnumMember(Value = "Lost")]
            LostEnum = 10,
            
            /// <summary>
            /// Enum ReadOnlyEnum for ReadOnly
            /// </summary>
            [EnumMember(Value = "ReadOnly")]
            ReadOnlyEnum = 11,
            
            /// <summary>
            /// Enum RestrictedEnum for Restricted
            /// </summary>
            [EnumMember(Value = "Restricted")]
            RestrictedEnum = 12,
            
            /// <summary>
            /// Enum StolenEnum for Stolen
            /// </summary>
            [EnumMember(Value = "Stolen")]
            StolenEnum = 13,
            
            /// <summary>
            /// Enum SuspendedEnum for Suspended
            /// </summary>
            [EnumMember(Value = "Suspended")]
            SuspendedEnum = 14,
            
            /// <summary>
            /// Enum OtherEnum for Other
            /// </summary>
            [EnumMember(Value = "Other")]
            OtherEnum = 15
        }
}
