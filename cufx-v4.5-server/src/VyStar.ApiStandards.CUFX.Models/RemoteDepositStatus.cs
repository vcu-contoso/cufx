/*
 * Credit Union Financial eXchange
 *
 * Credit Union Industry Standard. The following API examples are producedz using scripting methods to create a swagger representation of the XML/XSDs. In the event of any noted deviations, the published XSDs on www.cufxstandards.com are the basis of intended content and behavior. Please see https://bonifii.com/cufx-terms-of-use for the terms of use applicable for CUFX.
 *
 * The version of the OpenAPI document: 4.5
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using VyStar.ApiStandards.CUFX.Converters;

namespace VyStar.ApiStandards.CUFX.Models
{ 
        /// <summary>
        /// An enumeration of possible statuses for a remote deposit capture request. The user exceeded their deposit limit. The remote deposit image request was approved. The remote deposit request is currently under review, and is not currently approved. The remote deposit request was declined because the user is currently restricted from using this service. The remote deposit image request was declined because of image validation issues.  See the image validation issues list attribute for a list of the specific issues. This item has already been submitted to the target system. An unknown reference id was provided The remote deposit request is currently awaiting review, and is not currently approved. The remote deposit request is in a suspended state, and is not currently approved. The remote deposit request is in an undefined state. The remote deposit has exceeded risk confidence thresholds. The remote deposit request was declined because the user is unknown. The remote deposit request was declined because the target account is invalid. The remote deposit request requires a user confirmation before continuing. 
        /// </summary>
        /// <value>An enumeration of possible statuses for a remote deposit capture request. The user exceeded their deposit limit. The remote deposit image request was approved. The remote deposit request is currently under review, and is not currently approved. The remote deposit request was declined because the user is currently restricted from using this service. The remote deposit image request was declined because of image validation issues.  See the image validation issues list attribute for a list of the specific issues. This item has already been submitted to the target system. An unknown reference id was provided The remote deposit request is currently awaiting review, and is not currently approved. The remote deposit request is in a suspended state, and is not currently approved. The remote deposit request is in an undefined state. The remote deposit has exceeded risk confidence thresholds. The remote deposit request was declined because the user is unknown. The remote deposit request was declined because the target account is invalid. The remote deposit request requires a user confirmation before continuing. </value>
        [TypeConverter(typeof(CustomEnumConverter<RemoteDepositStatus>))]
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum RemoteDepositStatus
        {
            
            /// <summary>
            /// Enum ExceedsDepositLimitEnum for ExceedsDepositLimit
            /// </summary>
            [EnumMember(Value = "ExceedsDepositLimit")]
            ExceedsDepositLimitEnum = 1,
            
            /// <summary>
            /// Enum ApprovedEnum for Approved
            /// </summary>
            [EnumMember(Value = "Approved")]
            ApprovedEnum = 2,
            
            /// <summary>
            /// Enum UnderReviewEnum for UnderReview
            /// </summary>
            [EnumMember(Value = "UnderReview")]
            UnderReviewEnum = 3,
            
            /// <summary>
            /// Enum DeclinedEligibilityEnum for DeclinedEligibility
            /// </summary>
            [EnumMember(Value = "DeclinedEligibility")]
            DeclinedEligibilityEnum = 4,
            
            /// <summary>
            /// Enum DeclinedImageValidationIssueEnum for DeclinedImageValidationIssue
            /// </summary>
            [EnumMember(Value = "DeclinedImageValidationIssue")]
            DeclinedImageValidationIssueEnum = 5,
            
            /// <summary>
            /// Enum DuplicateItemEnum for DuplicateItem
            /// </summary>
            [EnumMember(Value = "DuplicateItem")]
            DuplicateItemEnum = 6,
            
            /// <summary>
            /// Enum InvalidReferenceIdEnum for InvalidReferenceId
            /// </summary>
            [EnumMember(Value = "InvalidReferenceId")]
            InvalidReferenceIdEnum = 7,
            
            /// <summary>
            /// Enum PendingReviewEnum for PendingReview
            /// </summary>
            [EnumMember(Value = "PendingReview")]
            PendingReviewEnum = 8,
            
            /// <summary>
            /// Enum SuspendedEnum for Suspended
            /// </summary>
            [EnumMember(Value = "Suspended")]
            SuspendedEnum = 9,
            
            /// <summary>
            /// Enum UnknownEnum for Unknown
            /// </summary>
            [EnumMember(Value = "Unknown")]
            UnknownEnum = 10,
            
            /// <summary>
            /// Enum UnacceptableRiskEnum for UnacceptableRisk
            /// </summary>
            [EnumMember(Value = "UnacceptableRisk")]
            UnacceptableRiskEnum = 11,
            
            /// <summary>
            /// Enum UnknownUserEnum for UnknownUser
            /// </summary>
            [EnumMember(Value = "UnknownUser")]
            UnknownUserEnum = 12,
            
            /// <summary>
            /// Enum InvalidAccountEnum for InvalidAccount
            /// </summary>
            [EnumMember(Value = "InvalidAccount")]
            InvalidAccountEnum = 13,
            
            /// <summary>
            /// Enum ConfirmationRequiredEnum for ConfirmationRequired
            /// </summary>
            [EnumMember(Value = "ConfirmationRequired")]
            ConfirmationRequiredEnum = 14
        }
}
