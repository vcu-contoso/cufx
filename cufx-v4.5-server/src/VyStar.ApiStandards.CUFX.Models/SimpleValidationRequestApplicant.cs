/*
 * Credit Union Financial eXchange
 *
 * Credit Union Industry Standard. The following API examples are producedz using scripting methods to create a swagger representation of the XML/XSDs. In the event of any noted deviations, the published XSDs on www.cufxstandards.com are the basis of intended content and behavior. Please see https://bonifii.com/cufx-terms-of-use for the terms of use applicable for CUFX.
 *
 * The version of the OpenAPI document: 4.5
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using VyStar.ApiStandards.CUFX.Converters;

namespace VyStar.ApiStandards.CUFX.Models
{ 
    /// <summary>
    /// Collection of fields to describe an applicant for the product. 
    /// </summary>
    [DataContract]
    public partial class SimpleValidationRequestApplicant 
    {
        /// <summary>
        /// Unique identifier for the applicant. 
        /// </summary>
        /// <value>Unique identifier for the applicant. </value>
        [DataMember(Name="applicantId", EmitDefaultValue=false)]
        public string ApplicantId { get; set; }


        /// <summary>
        /// Role of the  applicant. 
        /// </summary>
        /// <value>Role of the  applicant. </value>
        [TypeConverter(typeof(CustomEnumConverter<RoleEnum>))]
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum RoleEnum
        {
            
            /// <summary>
            /// Enum PrimaryEnum for Primary
            /// </summary>
            [EnumMember(Value = "Primary")]
            PrimaryEnum = 1,
            
            /// <summary>
            /// Enum SecondaryEnum for Secondary
            /// </summary>
            [EnumMember(Value = "Secondary")]
            SecondaryEnum = 2,
            
            /// <summary>
            /// Enum AuthorizedUserEnum for AuthorizedUser
            /// </summary>
            [EnumMember(Value = "AuthorizedUser")]
            AuthorizedUserEnum = 3
        }

        /// <summary>
        /// Role of the  applicant. 
        /// </summary>
        /// <value>Role of the  applicant. </value>
        [DataMember(Name="role", EmitDefaultValue=true)]
        public RoleEnum Role { get; set; }

        /// <summary>
        /// Gets or Sets CreditReportList
        /// </summary>
        [DataMember(Name="creditReportList", EmitDefaultValue=false)]
        public ApplicantCreditReportList CreditReportList { get; set; }

        /// <summary>
        /// The relationship ID is a persistent and unique identifier for the relationship. It should be unique for all relationships across the institution and remain the same over the life of the relationship with the financial institution. 
        /// </summary>
        /// <value>The relationship ID is a persistent and unique identifier for the relationship. It should be unique for all relationships across the institution and remain the same over the life of the relationship with the financial institution. </value>
        [DataMember(Name="relationshipId", EmitDefaultValue=false)]
        public string RelationshipId { get; set; }

        /// <summary>
        /// The party ID is a persistent and unique identifier for the party not related to the accounts they own but tied to that person or organization. It should be unique for all parties across the institution and remain the same over the life of the relationship with the financial institution. 
        /// </summary>
        /// <value>The party ID is a persistent and unique identifier for the party not related to the accounts they own but tied to that person or organization. It should be unique for all parties across the institution and remain the same over the life of the relationship with the financial institution. </value>
        [DataMember(Name="partyId", EmitDefaultValue=false)]
        public string PartyId { get; set; }

        /// <summary>
        /// Gets or Sets Party
        /// </summary>
        [DataMember(Name="party", EmitDefaultValue=false)]
        public Party Party { get; set; }

        /// <summary>
        /// Gets or Sets CustomData
        /// </summary>
        [DataMember(Name="customData", EmitDefaultValue=false)]
        public AccessProfileCustomData CustomData { get; set; }

    }
}
