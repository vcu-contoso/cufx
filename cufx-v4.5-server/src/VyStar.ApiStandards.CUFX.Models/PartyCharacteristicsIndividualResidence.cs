/*
 * Credit Union Financial eXchange
 *
 * Credit Union Industry Standard. The following API examples are producedz using scripting methods to create a swagger representation of the XML/XSDs. In the event of any noted deviations, the published XSDs on www.cufxstandards.com are the basis of intended content and behavior. Please see https://bonifii.com/cufx-terms-of-use for the terms of use applicable for CUFX.
 *
 * The version of the OpenAPI document: 4.5
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using VyStar.ApiStandards.CUFX.Converters;

namespace VyStar.ApiStandards.CUFX.Models
{ 
    /// <summary>
    /// Details related to residence. 
    /// </summary>
    [DataContract]
    public partial class PartyCharacteristicsIndividualResidence 
    {

        /// <summary>
        /// The housing status type for the current residence. 
        /// </summary>
        /// <value>The housing status type for the current residence. </value>
        [TypeConverter(typeof(CustomEnumConverter<CurrentHousingStatusEnum>))]
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum CurrentHousingStatusEnum
        {
            
            /// <summary>
            /// Enum RentEnum for Rent
            /// </summary>
            [EnumMember(Value = "Rent")]
            RentEnum = 1,
            
            /// <summary>
            /// Enum OwnEnum for Own
            /// </summary>
            [EnumMember(Value = "Own")]
            OwnEnum = 2,
            
            /// <summary>
            /// Enum OtherEnum for Other
            /// </summary>
            [EnumMember(Value = "Other")]
            OtherEnum = 3
        }

        /// <summary>
        /// The housing status type for the current residence. 
        /// </summary>
        /// <value>The housing status type for the current residence. </value>
        [DataMember(Name="currentHousingStatus", EmitDefaultValue=true)]
        public CurrentHousingStatusEnum CurrentHousingStatus { get; set; }


        /// <summary>
        /// The housing ownership type for the current residence. 
        /// </summary>
        /// <value>The housing ownership type for the current residence. </value>
        [TypeConverter(typeof(CustomEnumConverter<CurrentHousingOwnershipTypeEnum>))]
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum CurrentHousingOwnershipTypeEnum
        {
            
            /// <summary>
            /// Enum SelfEnum for Self
            /// </summary>
            [EnumMember(Value = "Self")]
            SelfEnum = 1,
            
            /// <summary>
            /// Enum GovernmentEnum for Government
            /// </summary>
            [EnumMember(Value = "Government")]
            GovernmentEnum = 2,
            
            /// <summary>
            /// Enum MilitaryEnum for Military
            /// </summary>
            [EnumMember(Value = "Military")]
            MilitaryEnum = 3,
            
            /// <summary>
            /// Enum OtherEnum for Other
            /// </summary>
            [EnumMember(Value = "Other")]
            OtherEnum = 4
        }

        /// <summary>
        /// The housing ownership type for the current residence. 
        /// </summary>
        /// <value>The housing ownership type for the current residence. </value>
        [DataMember(Name="currentHousingOwnershipType", EmitDefaultValue=true)]
        public CurrentHousingOwnershipTypeEnum CurrentHousingOwnershipType { get; set; }


        /// <summary>
        /// The housing debt type for the current residence. 
        /// </summary>
        /// <value>The housing debt type for the current residence. </value>
        [TypeConverter(typeof(CustomEnumConverter<CurrentHousingDebtTypeEnum>))]
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum CurrentHousingDebtTypeEnum
        {
            
            /// <summary>
            /// Enum OwnWithMortgageEnum for OwnWithMortgage
            /// </summary>
            [EnumMember(Value = "OwnWithMortgage")]
            OwnWithMortgageEnum = 1,
            
            /// <summary>
            /// Enum OwnWithoutMortgageEnum for OwnWithoutMortgage
            /// </summary>
            [EnumMember(Value = "OwnWithoutMortgage")]
            OwnWithoutMortgageEnum = 2,
            
            /// <summary>
            /// Enum RentEnum for Rent
            /// </summary>
            [EnumMember(Value = "Rent")]
            RentEnum = 3,
            
            /// <summary>
            /// Enum NoHousingExpenseEnum for NoHousingExpense
            /// </summary>
            [EnumMember(Value = "NoHousingExpense")]
            NoHousingExpenseEnum = 4,
            
            /// <summary>
            /// Enum OtherEnum for Other
            /// </summary>
            [EnumMember(Value = "Other")]
            OtherEnum = 5
        }

        /// <summary>
        /// The housing debt type for the current residence. 
        /// </summary>
        /// <value>The housing debt type for the current residence. </value>
        [DataMember(Name="currentHousingDebtType", EmitDefaultValue=true)]
        public CurrentHousingDebtTypeEnum CurrentHousingDebtType { get; set; }


        /// <summary>
        /// The housing type for the current residence. 
        /// </summary>
        /// <value>The housing type for the current residence. </value>
        [TypeConverter(typeof(CustomEnumConverter<CurrentHousingTypeEnum>))]
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum CurrentHousingTypeEnum
        {
            
            /// <summary>
            /// Enum PrimaryResidenceEnum for PrimaryResidence
            /// </summary>
            [EnumMember(Value = "PrimaryResidence")]
            PrimaryResidenceEnum = 1,
            
            /// <summary>
            /// Enum NonPrimaryResidenceEnum for NonPrimaryResidence
            /// </summary>
            [EnumMember(Value = "NonPrimaryResidence")]
            NonPrimaryResidenceEnum = 2
        }

        /// <summary>
        /// The housing type for the current residence. 
        /// </summary>
        /// <value>The housing type for the current residence. </value>
        [DataMember(Name="currentHousingType", EmitDefaultValue=true)]
        public CurrentHousingTypeEnum CurrentHousingType { get; set; }

    }
}
