/*
 * Credit Union Financial eXchange
 *
 * Credit Union Industry Standard. The following API examples are producedz using scripting methods to create a swagger representation of the XML/XSDs. In the event of any noted deviations, the published XSDs on www.cufxstandards.com are the basis of intended content and behavior. Please see https://bonifii.com/cufx-terms-of-use for the terms of use applicable for CUFX.
 *
 * The version of the OpenAPI document: 4.5
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using VyStar.ApiStandards.CUFX.Converters;

namespace VyStar.ApiStandards.CUFX.Models
{ 
        /// <summary>
        /// The type of location (e.g. ATM, branch). 
        /// </summary>
        /// <value>The type of location (e.g. ATM, branch). </value>
        [TypeConverter(typeof(CustomEnumConverter<LocationType>))]
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum LocationType
        {
            
            /// <summary>
            /// Enum ATMEnum for ATM
            /// </summary>
            [EnumMember(Value = "ATM")]
            ATMEnum = 1,
            
            /// <summary>
            /// Enum SharedATMEnum for SharedATM
            /// </summary>
            [EnumMember(Value = "SharedATM")]
            SharedATMEnum = 2,
            
            /// <summary>
            /// Enum BranchEnum for Branch
            /// </summary>
            [EnumMember(Value = "Branch")]
            BranchEnum = 3,
            
            /// <summary>
            /// Enum SharedBranchEnum for SharedBranch
            /// </summary>
            [EnumMember(Value = "SharedBranch")]
            SharedBranchEnum = 4,
            
            /// <summary>
            /// Enum KioskEnum for Kiosk
            /// </summary>
            [EnumMember(Value = "Kiosk")]
            KioskEnum = 5,
            
            /// <summary>
            /// Enum OtherEnum for Other
            /// </summary>
            [EnumMember(Value = "Other")]
            OtherEnum = 6
        }
}
