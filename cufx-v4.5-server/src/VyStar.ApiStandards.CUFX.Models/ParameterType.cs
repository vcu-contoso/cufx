/*
 * Credit Union Financial eXchange
 *
 * Credit Union Industry Standard. The following API examples are producedz using scripting methods to create a swagger representation of the XML/XSDs. In the event of any noted deviations, the published XSDs on www.cufxstandards.com are the basis of intended content and behavior. Please see https://bonifii.com/cufx-terms-of-use for the terms of use applicable for CUFX.
 *
 * The version of the OpenAPI document: 4.5
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using VyStar.ApiStandards.CUFX.Converters;

namespace VyStar.ApiStandards.CUFX.Models
{ 
        /// <summary>
        /// The parameter is being managed in the registry. For example: THe Windows Registry.  See Scope for where it applies. The parameter is being set at the OS level. For example: Using a set command on Windows command line. The parameter is in an XML file.  See For example: An IIS entry in the web.config file. See Path and XPath for specific location and path in the XML file. The parameter is in flat text file.  See For example: An entry in a configuration  text file. Some other parameter type that has yet to be defined. Please request addition to specification if you believe others will benefit by the addition. 
        /// </summary>
        /// <value>The parameter is being managed in the registry. For example: THe Windows Registry.  See Scope for where it applies. The parameter is being set at the OS level. For example: Using a set command on Windows command line. The parameter is in an XML file.  See For example: An IIS entry in the web.config file. See Path and XPath for specific location and path in the XML file. The parameter is in flat text file.  See For example: An entry in a configuration  text file. Some other parameter type that has yet to be defined. Please request addition to specification if you believe others will benefit by the addition. </value>
        [TypeConverter(typeof(CustomEnumConverter<ParameterType>))]
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum ParameterType
        {
            
            /// <summary>
            /// Enum RegistryEnum for Registry
            /// </summary>
            [EnumMember(Value = "Registry")]
            RegistryEnum = 1,
            
            /// <summary>
            /// Enum OSEnum for OS
            /// </summary>
            [EnumMember(Value = "OS")]
            OSEnum = 2,
            
            /// <summary>
            /// Enum XMLEnum for XML
            /// </summary>
            [EnumMember(Value = "XML")]
            XMLEnum = 3,
            
            /// <summary>
            /// Enum KeyValuePairsEnum for KeyValuePairs
            /// </summary>
            [EnumMember(Value = "KeyValuePairs")]
            KeyValuePairsEnum = 4,
            
            /// <summary>
            /// Enum OtherEnum for Other
            /// </summary>
            [EnumMember(Value = "Other")]
            OtherEnum = 5
        }
}
