/*
 * Credit Union Financial eXchange
 *
 * Credit Union Industry Standard. The following API examples are producedz using scripting methods to create a swagger representation of the XML/XSDs. In the event of any noted deviations, the published XSDs on www.cufxstandards.com are the basis of intended content and behavior. Please see https://bonifii.com/cufx-terms-of-use for the terms of use applicable for CUFX.
 *
 * The version of the OpenAPI document: 4.5
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using VyStar.ApiStandards.CUFX.Converters;

namespace VyStar.ApiStandards.CUFX.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class IdentificationDocument 
    {
        /// <summary>
        /// The actual identifier assigned by the state, government or other institution to the document. Examples would be a driverâ€™s license or passport number. 
        /// </summary>
        /// <value>The actual identifier assigned by the state, government or other institution to the document. Examples would be a driverâ€™s license or passport number. </value>
        [DataMember(Name="idDocumentIdentifer", EmitDefaultValue=false)]
        public string IdDocumentIdentifer { get; set; }

        /// <summary>
        /// Gets or Sets IdDocumentType
        /// </summary>
        [DataMember(Name="idDocumentType", EmitDefaultValue=false)]
        public IdentificationDocumentIdDocumentType IdDocumentType { get; set; }

        /// <summary>
        /// State of issuance, country of issuance, etc. 
        /// </summary>
        /// <value>State of issuance, country of issuance, etc. </value>
        [DataMember(Name="idIssuedBy", EmitDefaultValue=false)]
        public string IdIssuedBy { get; set; }

        /// <summary>
        /// Date that the ID was issued, if there is one. Note: This is different than the effective date of the document. 
        /// </summary>
        /// <value>Date that the ID was issued, if there is one. Note: This is different than the effective date of the document. </value>
        [DataMember(Name="idIssueDate", EmitDefaultValue=false)]
        public DateTime IdIssueDate { get; set; }

        /// <summary>
        /// Expiration printed on the ID, if there is one. Note: This is different than the expiration of the document.  
        /// </summary>
        /// <value>Expiration printed on the ID, if there is one. Note: This is different than the expiration of the document.  </value>
        [DataMember(Name="idExpirationDate", EmitDefaultValue=false)]
        public DateTime IdExpirationDate { get; set; }

        /// <summary>
        /// The order in which this document will be displayed when multiple documents exist and are brought up on the screen. 
        /// </summary>
        /// <value>The order in which this document will be displayed when multiple documents exist and are brought up on the screen. </value>
        [DataMember(Name="idDisplayOrder", EmitDefaultValue=true)]
        public int IdDisplayOrder { get; set; }

        /// <summary>
        /// The date the identification type/document was verified. The date/time should be ISO 8601 UTC format. yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. 
        /// </summary>
        /// <value>The date the identification type/document was verified. The date/time should be ISO 8601 UTC format. yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. </value>
        [DataMember(Name="idVerifyDateTime", EmitDefaultValue=false)]
        public string IdVerifyDateTime { get; set; }

        /// <summary>
        /// The document ID is a persistent and unique identifier for the document not related to the party, relationship or accounts that the document is for. It should be unique for all documents across the institution and remain the same over the life of the document within the financial institution. 
        /// </summary>
        /// <value>The document ID is a persistent and unique identifier for the document not related to the party, relationship or accounts that the document is for. It should be unique for all documents across the institution and remain the same over the life of the document within the financial institution. </value>
        [DataMember(Name="documentId", EmitDefaultValue=false)]
        public string DocumentId { get; set; }

    }
}
