/*
 * Credit Union Financial eXchange
 *
 * Credit Union Industry Standard. The following API examples are producedz using scripting methods to create a swagger representation of the XML/XSDs. In the event of any noted deviations, the published XSDs on www.cufxstandards.com are the basis of intended content and behavior. Please see https://bonifii.com/cufx-terms-of-use for the terms of use applicable for CUFX.
 *
 * The version of the OpenAPI document: 4.5
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using VyStar.ApiStandards.CUFX.Converters;

namespace VyStar.ApiStandards.CUFX.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class Field 
    {
        /// <summary>
        /// Identifier for the field. 
        /// </summary>
        /// <value>Identifier for the field. </value>
        [DataMember(Name="fieldId", EmitDefaultValue=false)]
        public string FieldId { get; set; }

        /// <summary>
        /// The name of the field. 
        /// </summary>
        /// <value>The name of the field. </value>
        [DataMember(Name="fieldName", EmitDefaultValue=false)]
        public string FieldName { get; set; }

        /// <summary>
        /// The expected type for the  field. May be a Boolean, String, GUID, or other data types. 
        /// </summary>
        /// <value>The expected type for the  field. May be a Boolean, String, GUID, or other data types. </value>
        [DataMember(Name="fieldType", EmitDefaultValue=false)]
        public string FieldType { get; set; }

        /// <summary>
        /// Description providing instruction on how to populate the fieldValue, intended for presentation to a user. May also be a url for supporting information. 
        /// </summary>
        /// <value>Description providing instruction on how to populate the fieldValue, intended for presentation to a user. May also be a url for supporting information. </value>
        [DataMember(Name="fieldPrompt", EmitDefaultValue=false)]
        public string FieldPrompt { get; set; }

        /// <summary>
        /// The selected or entered field value to be returned to the calling application. 
        /// </summary>
        /// <value>The selected or entered field value to be returned to the calling application. </value>
        [DataMember(Name="fieldValue", EmitDefaultValue=false)]
        public string FieldValue { get; set; }

        /// <summary>
        /// Optional boolean to define if the field is required or optional. If not populated, then it will assume to be optional. 
        /// </summary>
        /// <value>Optional boolean to define if the field is required or optional. If not populated, then it will assume to be optional. </value>
        [DataMember(Name="isFieldRequired", EmitDefaultValue=true)]
        public bool IsFieldRequired { get; set; }

        /// <summary>
        /// Gets or Sets FieldRequirementList
        /// </summary>
        [DataMember(Name="fieldRequirementList", EmitDefaultValue=false)]
        public FieldFieldRequirementList FieldRequirementList { get; set; }

        /// <summary>
        /// Gets or Sets CustomData
        /// </summary>
        [DataMember(Name="customData", EmitDefaultValue=false)]
        public AccessProfileCustomData CustomData { get; set; }

    }
}
