/*
 * Credit Union Financial eXchange
 *
 * Credit Union Industry Standard. The following API examples are producedz using scripting methods to create a swagger representation of the XML/XSDs. In the event of any noted deviations, the published XSDs on www.cufxstandards.com are the basis of intended content and behavior. Please see https://bonifii.com/cufx-terms-of-use for the terms of use applicable for CUFX.
 *
 * The version of the OpenAPI document: 4.5
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using VyStar.ApiStandards.CUFX.Converters;

namespace VyStar.ApiStandards.CUFX.Models
{ 
    /// <summary>
    /// The message collection/array contains all the messages returned when a service point was called. 
    /// </summary>
    [DataContract]
    public partial class Status 
    {

        /// <summary>
        /// Response type classifies the message type in the message response list and allows for high level discrimination of Success, Warning, Error or Other message types. The message associated with this response type was a success. Additional information about the response, including verbose responses. Informational warning that should not stop processing. The message is associated with response was an error. 
        /// </summary>
        /// <value>Response type classifies the message type in the message response list and allows for high level discrimination of Success, Warning, Error or Other message types. The message associated with this response type was a success. Additional information about the response, including verbose responses. Informational warning that should not stop processing. The message is associated with response was an error. </value>
        [TypeConverter(typeof(CustomEnumConverter<StatusTypeEnum>))]
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum StatusTypeEnum
        {
            
            /// <summary>
            /// Enum SuccessEnum for Success
            /// </summary>
            [EnumMember(Value = "Success")]
            SuccessEnum = 1,
            
            /// <summary>
            /// Enum InformationalEnum for Informational
            /// </summary>
            [EnumMember(Value = "Informational")]
            InformationalEnum = 2,
            
            /// <summary>
            /// Enum WarningEnum for Warning
            /// </summary>
            [EnumMember(Value = "Warning")]
            WarningEnum = 3,
            
            /// <summary>
            /// Enum ErrorEnum for Error
            /// </summary>
            [EnumMember(Value = "Error")]
            ErrorEnum = 4
        }

        /// <summary>
        /// Response type classifies the message type in the message response list and allows for high level discrimination of Success, Warning, Error or Other message types. The message associated with this response type was a success. Additional information about the response, including verbose responses. Informational warning that should not stop processing. The message is associated with response was an error. 
        /// </summary>
        /// <value>Response type classifies the message type in the message response list and allows for high level discrimination of Success, Warning, Error or Other message types. The message associated with this response type was a success. Additional information about the response, including verbose responses. Informational warning that should not stop processing. The message is associated with response was an error. </value>
        [DataMember(Name="statusType", EmitDefaultValue=true)]
        public StatusTypeEnum StatusType { get; set; }


        /// <summary>
        /// Standard CUFX code returned by the service point. The documentation contains the standard message to return. When %s is in the message, it should be replaced with additional details relative to the message content. ValueOutOfRangeError.  The value %s is not supported for the field %s by this service. Valid values must be between %s and %s. Formerly value 413. UnsupportedValueError.  The value %s is not supported for the field %s by this service. Valid values include %s. Formerly value 415. DatesOutOfOrderError.  The end date is before the start date. Formerly value 497. DateRangeTooWideError.  Date range is too wide for the data source to handle. Formerly value 498. InvalidFieldFormat.  The format of the field is not supported. The format %s is not supported for the field %s by this service. Valid values include %s Formerly value 475. OtherValidationError. Values were within range but some other business rule failed with the while validating the data in the request.  Use %s to include what record rejected and why. NoDataInRequest. Endpoint expected values in request but there were none. Formerly value 300. IncompleteRequest.  The request omitted the following required fields: %s. Formerly value 411. RecordHasBeenArchivedError.  The record was found, but is not available for viewing as it has been archived in offline storage. Formerly value 441. LoginInvalidError.  The user token or credentials were invalid. Formerly value 401. UserPermissionError. User was able to login but was unable to process request because user did not have proper permissions to either the object type, instance of object or capability on that object. AppPermissionError. Client app lacks necessary security to perform the action. UserSessionTokenExpiredError. Endpoint no longer recognizes a user session token as valid. AppSessionTokenExpiredError. Endpoint no longer recognizes an application session token as valid. UserCredentialsLockedOut. User provided proper credentials, but system indicates that system no longer allows this user to access the requested resources. The resource %s has been locked out. AppCredentialsLockedOut. App provided proper credentials, but system indicates that system no longer allows this app to access the requested resources. The app resource %s has been locked out. ConflictAlreadyExists.  The entity submitted for creation already exists. Formerly value 409. UpdateToFieldNotAllowed. The repository does not allow updates to %s. Formerly value 438. InvalidMACAddressError.  The MAC address was invalid or missing. Formerly value 425. InvalidIPAddressError.  Clientâ€™s IP address is not valid or does not have permissions to access the endpoint. InvalidLanguageError.  The requested language %s is not supported. Formerly value 430. InvalidDataSourceIdError.  The data source ID was not recognized. Formerly value 433. InvalidFiIdError.  The financial institution ID was not recognized. Formerly value 434. InvalidEnvironmentError.  The environment specified in MessageContext is disallowed by the system as configured. Formerly value 476. PreviousRequestRequired.  A %s request must be made before this one, and was not. Formerly value 412. MalformedRequestError.  Malformed request to endpoint based on CUFX standard. UnsupportedMethodError.  End point does not support the method.  For example: GET is supported but not a POST or DELETE. UnsupportedServiceError.  Service exists but endpoint does not support the service for this FiId and/or app combination. RequestedServiceNotFound.  The client application requested a service that does not exist. EncryptionError.  The provided encrypted data could not be decrypted. Formerly value 426. MIMETypeNotSupported.  Repository rejected the MIME type. Formerly value 440. ObjectTooLarge.  The %s object was rejected because it exceeded the size limit. Formerly value 442. ObjectTooSmall.  The %s object was rejected because it is smaller than its minimum size requirement. Formerly value 443. ObjectNotFoundError.  The object could not be found in the repository. Formerly value 437. ObjectRejectedError. The repository has rejected the object. See the sub error codes for the specific reason. Example: Restricted content or copyright detected. Formerly value 444. CompressionError.  Endpoint could not compress the object %s as requested. DecompressionError.  Endpoint could not decompress the object %s as requested. TooManyRequests.  The user has sent too many requests in a given amount of time. Formerly value 429. ServiceTemporarilyUnavailableError.  This is for a short term outage. ServiceUnavailableError.  Endpoint is not available for requests at this time.  This is due to an extended system outage. ServiceFailureError.  Endpoint failed while processing the request. General Error.  Review subCode for more information. Formerly value 400 or 499. NoMatchingRecordsWarning. No matching records were found. Formerly value 302. RecordNotFoundWarning.  The request contained the following references to entities that could not be found: %s. Formerly value 422. A general warning occurred. Review subCode for more information. 
        /// </summary>
        /// <value>Standard CUFX code returned by the service point. The documentation contains the standard message to return. When %s is in the message, it should be replaced with additional details relative to the message content. ValueOutOfRangeError.  The value %s is not supported for the field %s by this service. Valid values must be between %s and %s. Formerly value 413. UnsupportedValueError.  The value %s is not supported for the field %s by this service. Valid values include %s. Formerly value 415. DatesOutOfOrderError.  The end date is before the start date. Formerly value 497. DateRangeTooWideError.  Date range is too wide for the data source to handle. Formerly value 498. InvalidFieldFormat.  The format of the field is not supported. The format %s is not supported for the field %s by this service. Valid values include %s Formerly value 475. OtherValidationError. Values were within range but some other business rule failed with the while validating the data in the request.  Use %s to include what record rejected and why. NoDataInRequest. Endpoint expected values in request but there were none. Formerly value 300. IncompleteRequest.  The request omitted the following required fields: %s. Formerly value 411. RecordHasBeenArchivedError.  The record was found, but is not available for viewing as it has been archived in offline storage. Formerly value 441. LoginInvalidError.  The user token or credentials were invalid. Formerly value 401. UserPermissionError. User was able to login but was unable to process request because user did not have proper permissions to either the object type, instance of object or capability on that object. AppPermissionError. Client app lacks necessary security to perform the action. UserSessionTokenExpiredError. Endpoint no longer recognizes a user session token as valid. AppSessionTokenExpiredError. Endpoint no longer recognizes an application session token as valid. UserCredentialsLockedOut. User provided proper credentials, but system indicates that system no longer allows this user to access the requested resources. The resource %s has been locked out. AppCredentialsLockedOut. App provided proper credentials, but system indicates that system no longer allows this app to access the requested resources. The app resource %s has been locked out. ConflictAlreadyExists.  The entity submitted for creation already exists. Formerly value 409. UpdateToFieldNotAllowed. The repository does not allow updates to %s. Formerly value 438. InvalidMACAddressError.  The MAC address was invalid or missing. Formerly value 425. InvalidIPAddressError.  Clientâ€™s IP address is not valid or does not have permissions to access the endpoint. InvalidLanguageError.  The requested language %s is not supported. Formerly value 430. InvalidDataSourceIdError.  The data source ID was not recognized. Formerly value 433. InvalidFiIdError.  The financial institution ID was not recognized. Formerly value 434. InvalidEnvironmentError.  The environment specified in MessageContext is disallowed by the system as configured. Formerly value 476. PreviousRequestRequired.  A %s request must be made before this one, and was not. Formerly value 412. MalformedRequestError.  Malformed request to endpoint based on CUFX standard. UnsupportedMethodError.  End point does not support the method.  For example: GET is supported but not a POST or DELETE. UnsupportedServiceError.  Service exists but endpoint does not support the service for this FiId and/or app combination. RequestedServiceNotFound.  The client application requested a service that does not exist. EncryptionError.  The provided encrypted data could not be decrypted. Formerly value 426. MIMETypeNotSupported.  Repository rejected the MIME type. Formerly value 440. ObjectTooLarge.  The %s object was rejected because it exceeded the size limit. Formerly value 442. ObjectTooSmall.  The %s object was rejected because it is smaller than its minimum size requirement. Formerly value 443. ObjectNotFoundError.  The object could not be found in the repository. Formerly value 437. ObjectRejectedError. The repository has rejected the object. See the sub error codes for the specific reason. Example: Restricted content or copyright detected. Formerly value 444. CompressionError.  Endpoint could not compress the object %s as requested. DecompressionError.  Endpoint could not decompress the object %s as requested. TooManyRequests.  The user has sent too many requests in a given amount of time. Formerly value 429. ServiceTemporarilyUnavailableError.  This is for a short term outage. ServiceUnavailableError.  Endpoint is not available for requests at this time.  This is due to an extended system outage. ServiceFailureError.  Endpoint failed while processing the request. General Error.  Review subCode for more information. Formerly value 400 or 499. NoMatchingRecordsWarning. No matching records were found. Formerly value 302. RecordNotFoundWarning.  The request contained the following references to entities that could not be found: %s. Formerly value 422. A general warning occurred. Review subCode for more information. </value>
        [TypeConverter(typeof(CustomEnumConverter<StatusCodeEnum>))]
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum StatusCodeEnum
        {
            
            /// <summary>
            /// Enum ValueOutOfRangeErrorEnum for ValueOutOfRangeError
            /// </summary>
            [EnumMember(Value = "ValueOutOfRangeError")]
            ValueOutOfRangeErrorEnum = 1,
            
            /// <summary>
            /// Enum UnsupportedValueErrorEnum for UnsupportedValueError
            /// </summary>
            [EnumMember(Value = "UnsupportedValueError")]
            UnsupportedValueErrorEnum = 2,
            
            /// <summary>
            /// Enum DatesOutOfOrderErrorEnum for DatesOutOfOrderError
            /// </summary>
            [EnumMember(Value = "DatesOutOfOrderError")]
            DatesOutOfOrderErrorEnum = 3,
            
            /// <summary>
            /// Enum DateRangeTooWideErrorEnum for DateRangeTooWideError
            /// </summary>
            [EnumMember(Value = "DateRangeTooWideError")]
            DateRangeTooWideErrorEnum = 4,
            
            /// <summary>
            /// Enum InvalidFieldFormatEnum for InvalidFieldFormat
            /// </summary>
            [EnumMember(Value = "InvalidFieldFormat")]
            InvalidFieldFormatEnum = 5,
            
            /// <summary>
            /// Enum OtherValidationErrorEnum for OtherValidationError
            /// </summary>
            [EnumMember(Value = "OtherValidationError")]
            OtherValidationErrorEnum = 6,
            
            /// <summary>
            /// Enum NoDataInRequestEnum for NoDataInRequest
            /// </summary>
            [EnumMember(Value = "NoDataInRequest")]
            NoDataInRequestEnum = 7,
            
            /// <summary>
            /// Enum IncompleteRequestEnum for IncompleteRequest
            /// </summary>
            [EnumMember(Value = "IncompleteRequest")]
            IncompleteRequestEnum = 8,
            
            /// <summary>
            /// Enum RecordHasBeenArchivedErrorEnum for RecordHasBeenArchivedError
            /// </summary>
            [EnumMember(Value = "RecordHasBeenArchivedError")]
            RecordHasBeenArchivedErrorEnum = 9,
            
            /// <summary>
            /// Enum LoginInvalidErrorEnum for LoginInvalidError
            /// </summary>
            [EnumMember(Value = "LoginInvalidError")]
            LoginInvalidErrorEnum = 10,
            
            /// <summary>
            /// Enum UserPermissionErrorEnum for UserPermissionError
            /// </summary>
            [EnumMember(Value = "UserPermissionError")]
            UserPermissionErrorEnum = 11,
            
            /// <summary>
            /// Enum AppPermissionErrorEnum for AppPermissionError
            /// </summary>
            [EnumMember(Value = "AppPermissionError")]
            AppPermissionErrorEnum = 12,
            
            /// <summary>
            /// Enum UserSessionTokenExpiredErrorEnum for UserSessionTokenExpiredError
            /// </summary>
            [EnumMember(Value = "UserSessionTokenExpiredError")]
            UserSessionTokenExpiredErrorEnum = 13,
            
            /// <summary>
            /// Enum AppSessionTokenExpiredErrorEnum for AppSessionTokenExpiredError
            /// </summary>
            [EnumMember(Value = "AppSessionTokenExpiredError")]
            AppSessionTokenExpiredErrorEnum = 14,
            
            /// <summary>
            /// Enum UserCredentialsLockedOutEnum for UserCredentialsLockedOut
            /// </summary>
            [EnumMember(Value = "UserCredentialsLockedOut")]
            UserCredentialsLockedOutEnum = 15,
            
            /// <summary>
            /// Enum AppCredentialsLockedOutEnum for AppCredentialsLockedOut
            /// </summary>
            [EnumMember(Value = "AppCredentialsLockedOut")]
            AppCredentialsLockedOutEnum = 16,
            
            /// <summary>
            /// Enum ConflictAlreadyExistsEnum for ConflictAlreadyExists
            /// </summary>
            [EnumMember(Value = "ConflictAlreadyExists")]
            ConflictAlreadyExistsEnum = 17,
            
            /// <summary>
            /// Enum UpdateToFieldNotAllowedEnum for UpdateToFieldNotAllowed
            /// </summary>
            [EnumMember(Value = "UpdateToFieldNotAllowed")]
            UpdateToFieldNotAllowedEnum = 18,
            
            /// <summary>
            /// Enum InvalidMACAddressErrorEnum for InvalidMACAddressError
            /// </summary>
            [EnumMember(Value = "InvalidMACAddressError")]
            InvalidMACAddressErrorEnum = 19,
            
            /// <summary>
            /// Enum InvalidIPAddressErrorEnum for InvalidIPAddressError
            /// </summary>
            [EnumMember(Value = "InvalidIPAddressError")]
            InvalidIPAddressErrorEnum = 20,
            
            /// <summary>
            /// Enum InvalidLanguageErrorEnum for InvalidLanguageError
            /// </summary>
            [EnumMember(Value = "InvalidLanguageError")]
            InvalidLanguageErrorEnum = 21,
            
            /// <summary>
            /// Enum InvalidDataSourceIdErrorEnum for InvalidDataSourceIdError
            /// </summary>
            [EnumMember(Value = "InvalidDataSourceIdError")]
            InvalidDataSourceIdErrorEnum = 22,
            
            /// <summary>
            /// Enum InvalidFiIdErrorEnum for InvalidFiIdError
            /// </summary>
            [EnumMember(Value = "InvalidFiIdError")]
            InvalidFiIdErrorEnum = 23,
            
            /// <summary>
            /// Enum InvalidEnvironmentErrorEnum for InvalidEnvironmentError
            /// </summary>
            [EnumMember(Value = "InvalidEnvironmentError")]
            InvalidEnvironmentErrorEnum = 24,
            
            /// <summary>
            /// Enum PreviousRequestRequiredEnum for PreviousRequestRequired
            /// </summary>
            [EnumMember(Value = "PreviousRequestRequired")]
            PreviousRequestRequiredEnum = 25,
            
            /// <summary>
            /// Enum MalformedRequestErrorEnum for MalformedRequestError
            /// </summary>
            [EnumMember(Value = "MalformedRequestError")]
            MalformedRequestErrorEnum = 26,
            
            /// <summary>
            /// Enum UnsupportedMethodErrorEnum for UnsupportedMethodError
            /// </summary>
            [EnumMember(Value = "UnsupportedMethodError")]
            UnsupportedMethodErrorEnum = 27,
            
            /// <summary>
            /// Enum UnsupportedServiceErrorEnum for UnsupportedServiceError
            /// </summary>
            [EnumMember(Value = "UnsupportedServiceError")]
            UnsupportedServiceErrorEnum = 28,
            
            /// <summary>
            /// Enum RequestedServiceNotFoundEnum for RequestedServiceNotFound
            /// </summary>
            [EnumMember(Value = "RequestedServiceNotFound")]
            RequestedServiceNotFoundEnum = 29,
            
            /// <summary>
            /// Enum EncryptionErrorEnum for EncryptionError
            /// </summary>
            [EnumMember(Value = "EncryptionError")]
            EncryptionErrorEnum = 30,
            
            /// <summary>
            /// Enum MIMETypeNotSupportedErrorEnum for MIMETypeNotSupportedError
            /// </summary>
            [EnumMember(Value = "MIMETypeNotSupportedError")]
            MIMETypeNotSupportedErrorEnum = 31,
            
            /// <summary>
            /// Enum ObjectTooLargeErrorEnum for ObjectTooLargeError
            /// </summary>
            [EnumMember(Value = "ObjectTooLargeError")]
            ObjectTooLargeErrorEnum = 32,
            
            /// <summary>
            /// Enum ObjectTooSmallErrorEnum for ObjectTooSmallError
            /// </summary>
            [EnumMember(Value = "ObjectTooSmallError")]
            ObjectTooSmallErrorEnum = 33,
            
            /// <summary>
            /// Enum ObjectNotFoundErrorEnum for ObjectNotFoundError
            /// </summary>
            [EnumMember(Value = "ObjectNotFoundError")]
            ObjectNotFoundErrorEnum = 34,
            
            /// <summary>
            /// Enum ObjectRejectedErrorEnum for ObjectRejectedError
            /// </summary>
            [EnumMember(Value = "ObjectRejectedError")]
            ObjectRejectedErrorEnum = 35,
            
            /// <summary>
            /// Enum CompressionErrorEnum for CompressionError
            /// </summary>
            [EnumMember(Value = "CompressionError")]
            CompressionErrorEnum = 36,
            
            /// <summary>
            /// Enum DecompressionErrorEnum for DecompressionError
            /// </summary>
            [EnumMember(Value = "DecompressionError")]
            DecompressionErrorEnum = 37,
            
            /// <summary>
            /// Enum TooManyRequestsErrorEnum for TooManyRequestsError
            /// </summary>
            [EnumMember(Value = "TooManyRequestsError")]
            TooManyRequestsErrorEnum = 38,
            
            /// <summary>
            /// Enum ServiceTemporarilyUnavailableErrorEnum for ServiceTemporarilyUnavailableError
            /// </summary>
            [EnumMember(Value = "ServiceTemporarilyUnavailableError")]
            ServiceTemporarilyUnavailableErrorEnum = 39,
            
            /// <summary>
            /// Enum ServiceUnavailableErrorEnum for ServiceUnavailableError
            /// </summary>
            [EnumMember(Value = "ServiceUnavailableError")]
            ServiceUnavailableErrorEnum = 40,
            
            /// <summary>
            /// Enum ServiceFailureErrorEnum for ServiceFailureError
            /// </summary>
            [EnumMember(Value = "ServiceFailureError")]
            ServiceFailureErrorEnum = 41,
            
            /// <summary>
            /// Enum GeneralErrorEnum for GeneralError
            /// </summary>
            [EnumMember(Value = "GeneralError")]
            GeneralErrorEnum = 42,
            
            /// <summary>
            /// Enum NoMatchingRecordsWarningEnum for NoMatchingRecordsWarning
            /// </summary>
            [EnumMember(Value = "NoMatchingRecordsWarning")]
            NoMatchingRecordsWarningEnum = 43,
            
            /// <summary>
            /// Enum RecordNotFoundWarningEnum for RecordNotFoundWarning
            /// </summary>
            [EnumMember(Value = "RecordNotFoundWarning")]
            RecordNotFoundWarningEnum = 44,
            
            /// <summary>
            /// Enum GeneralWarningEnum for GeneralWarning
            /// </summary>
            [EnumMember(Value = "GeneralWarning")]
            GeneralWarningEnum = 45
        }

        /// <summary>
        /// Standard CUFX code returned by the service point. The documentation contains the standard message to return. When %s is in the message, it should be replaced with additional details relative to the message content. ValueOutOfRangeError.  The value %s is not supported for the field %s by this service. Valid values must be between %s and %s. Formerly value 413. UnsupportedValueError.  The value %s is not supported for the field %s by this service. Valid values include %s. Formerly value 415. DatesOutOfOrderError.  The end date is before the start date. Formerly value 497. DateRangeTooWideError.  Date range is too wide for the data source to handle. Formerly value 498. InvalidFieldFormat.  The format of the field is not supported. The format %s is not supported for the field %s by this service. Valid values include %s Formerly value 475. OtherValidationError. Values were within range but some other business rule failed with the while validating the data in the request.  Use %s to include what record rejected and why. NoDataInRequest. Endpoint expected values in request but there were none. Formerly value 300. IncompleteRequest.  The request omitted the following required fields: %s. Formerly value 411. RecordHasBeenArchivedError.  The record was found, but is not available for viewing as it has been archived in offline storage. Formerly value 441. LoginInvalidError.  The user token or credentials were invalid. Formerly value 401. UserPermissionError. User was able to login but was unable to process request because user did not have proper permissions to either the object type, instance of object or capability on that object. AppPermissionError. Client app lacks necessary security to perform the action. UserSessionTokenExpiredError. Endpoint no longer recognizes a user session token as valid. AppSessionTokenExpiredError. Endpoint no longer recognizes an application session token as valid. UserCredentialsLockedOut. User provided proper credentials, but system indicates that system no longer allows this user to access the requested resources. The resource %s has been locked out. AppCredentialsLockedOut. App provided proper credentials, but system indicates that system no longer allows this app to access the requested resources. The app resource %s has been locked out. ConflictAlreadyExists.  The entity submitted for creation already exists. Formerly value 409. UpdateToFieldNotAllowed. The repository does not allow updates to %s. Formerly value 438. InvalidMACAddressError.  The MAC address was invalid or missing. Formerly value 425. InvalidIPAddressError.  Clientâ€™s IP address is not valid or does not have permissions to access the endpoint. InvalidLanguageError.  The requested language %s is not supported. Formerly value 430. InvalidDataSourceIdError.  The data source ID was not recognized. Formerly value 433. InvalidFiIdError.  The financial institution ID was not recognized. Formerly value 434. InvalidEnvironmentError.  The environment specified in MessageContext is disallowed by the system as configured. Formerly value 476. PreviousRequestRequired.  A %s request must be made before this one, and was not. Formerly value 412. MalformedRequestError.  Malformed request to endpoint based on CUFX standard. UnsupportedMethodError.  End point does not support the method.  For example: GET is supported but not a POST or DELETE. UnsupportedServiceError.  Service exists but endpoint does not support the service for this FiId and/or app combination. RequestedServiceNotFound.  The client application requested a service that does not exist. EncryptionError.  The provided encrypted data could not be decrypted. Formerly value 426. MIMETypeNotSupported.  Repository rejected the MIME type. Formerly value 440. ObjectTooLarge.  The %s object was rejected because it exceeded the size limit. Formerly value 442. ObjectTooSmall.  The %s object was rejected because it is smaller than its minimum size requirement. Formerly value 443. ObjectNotFoundError.  The object could not be found in the repository. Formerly value 437. ObjectRejectedError. The repository has rejected the object. See the sub error codes for the specific reason. Example: Restricted content or copyright detected. Formerly value 444. CompressionError.  Endpoint could not compress the object %s as requested. DecompressionError.  Endpoint could not decompress the object %s as requested. TooManyRequests.  The user has sent too many requests in a given amount of time. Formerly value 429. ServiceTemporarilyUnavailableError.  This is for a short term outage. ServiceUnavailableError.  Endpoint is not available for requests at this time.  This is due to an extended system outage. ServiceFailureError.  Endpoint failed while processing the request. General Error.  Review subCode for more information. Formerly value 400 or 499. NoMatchingRecordsWarning. No matching records were found. Formerly value 302. RecordNotFoundWarning.  The request contained the following references to entities that could not be found: %s. Formerly value 422. A general warning occurred. Review subCode for more information. 
        /// </summary>
        /// <value>Standard CUFX code returned by the service point. The documentation contains the standard message to return. When %s is in the message, it should be replaced with additional details relative to the message content. ValueOutOfRangeError.  The value %s is not supported for the field %s by this service. Valid values must be between %s and %s. Formerly value 413. UnsupportedValueError.  The value %s is not supported for the field %s by this service. Valid values include %s. Formerly value 415. DatesOutOfOrderError.  The end date is before the start date. Formerly value 497. DateRangeTooWideError.  Date range is too wide for the data source to handle. Formerly value 498. InvalidFieldFormat.  The format of the field is not supported. The format %s is not supported for the field %s by this service. Valid values include %s Formerly value 475. OtherValidationError. Values were within range but some other business rule failed with the while validating the data in the request.  Use %s to include what record rejected and why. NoDataInRequest. Endpoint expected values in request but there were none. Formerly value 300. IncompleteRequest.  The request omitted the following required fields: %s. Formerly value 411. RecordHasBeenArchivedError.  The record was found, but is not available for viewing as it has been archived in offline storage. Formerly value 441. LoginInvalidError.  The user token or credentials were invalid. Formerly value 401. UserPermissionError. User was able to login but was unable to process request because user did not have proper permissions to either the object type, instance of object or capability on that object. AppPermissionError. Client app lacks necessary security to perform the action. UserSessionTokenExpiredError. Endpoint no longer recognizes a user session token as valid. AppSessionTokenExpiredError. Endpoint no longer recognizes an application session token as valid. UserCredentialsLockedOut. User provided proper credentials, but system indicates that system no longer allows this user to access the requested resources. The resource %s has been locked out. AppCredentialsLockedOut. App provided proper credentials, but system indicates that system no longer allows this app to access the requested resources. The app resource %s has been locked out. ConflictAlreadyExists.  The entity submitted for creation already exists. Formerly value 409. UpdateToFieldNotAllowed. The repository does not allow updates to %s. Formerly value 438. InvalidMACAddressError.  The MAC address was invalid or missing. Formerly value 425. InvalidIPAddressError.  Clientâ€™s IP address is not valid or does not have permissions to access the endpoint. InvalidLanguageError.  The requested language %s is not supported. Formerly value 430. InvalidDataSourceIdError.  The data source ID was not recognized. Formerly value 433. InvalidFiIdError.  The financial institution ID was not recognized. Formerly value 434. InvalidEnvironmentError.  The environment specified in MessageContext is disallowed by the system as configured. Formerly value 476. PreviousRequestRequired.  A %s request must be made before this one, and was not. Formerly value 412. MalformedRequestError.  Malformed request to endpoint based on CUFX standard. UnsupportedMethodError.  End point does not support the method.  For example: GET is supported but not a POST or DELETE. UnsupportedServiceError.  Service exists but endpoint does not support the service for this FiId and/or app combination. RequestedServiceNotFound.  The client application requested a service that does not exist. EncryptionError.  The provided encrypted data could not be decrypted. Formerly value 426. MIMETypeNotSupported.  Repository rejected the MIME type. Formerly value 440. ObjectTooLarge.  The %s object was rejected because it exceeded the size limit. Formerly value 442. ObjectTooSmall.  The %s object was rejected because it is smaller than its minimum size requirement. Formerly value 443. ObjectNotFoundError.  The object could not be found in the repository. Formerly value 437. ObjectRejectedError. The repository has rejected the object. See the sub error codes for the specific reason. Example: Restricted content or copyright detected. Formerly value 444. CompressionError.  Endpoint could not compress the object %s as requested. DecompressionError.  Endpoint could not decompress the object %s as requested. TooManyRequests.  The user has sent too many requests in a given amount of time. Formerly value 429. ServiceTemporarilyUnavailableError.  This is for a short term outage. ServiceUnavailableError.  Endpoint is not available for requests at this time.  This is due to an extended system outage. ServiceFailureError.  Endpoint failed while processing the request. General Error.  Review subCode for more information. Formerly value 400 or 499. NoMatchingRecordsWarning. No matching records were found. Formerly value 302. RecordNotFoundWarning.  The request contained the following references to entities that could not be found: %s. Formerly value 422. A general warning occurred. Review subCode for more information. </value>
        [DataMember(Name="statusCode", EmitDefaultValue=true)]
        public StatusCodeEnum StatusCode { get; set; }

        /// <summary>
        /// The message response sub code of the message. Non-standard error code that was in the back end system.  This may be helpful in understanding why a particular error occurred. 
        /// </summary>
        /// <value>The message response sub code of the message. Non-standard error code that was in the back end system.  This may be helpful in understanding why a particular error occurred. </value>
        [DataMember(Name="statusSubCode", EmitDefaultValue=false)]
        public string StatusSubCode { get; set; }

        /// <summary>
        /// The response message text. 
        /// </summary>
        /// <value>The response message text. </value>
        [DataMember(Name="statusMessage", EmitDefaultValue=false)]
        public string StatusMessage { get; set; }

        /// <summary>
        /// Gets or Sets SubstitutionList
        /// </summary>
        [DataMember(Name="substitutionList", EmitDefaultValue=false)]
        public StatusSubstitutionList SubstitutionList { get; set; }

        /// <summary>
        /// The reference identification for the individual message objects contained in a given object message list at the highest parent level. The reference is intended to be the ID of the given object, the temp ID of the given object, or any implementation specific reference to uniquely identify the originating object. Example: In an AccountMessage the AccoundId of the input object is recommended. Use of referenceId and or referenceIndex is to allow for the discrete association of status responses to the originating objects in the message list. 
        /// </summary>
        /// <value>The reference identification for the individual message objects contained in a given object message list at the highest parent level. The reference is intended to be the ID of the given object, the temp ID of the given object, or any implementation specific reference to uniquely identify the originating object. Example: In an AccountMessage the AccoundId of the input object is recommended. Use of referenceId and or referenceIndex is to allow for the discrete association of status responses to the originating objects in the message list. </value>
        [DataMember(Name="referenceId", EmitDefaultValue=false)]
        public string ReferenceId { get; set; }

        /// <summary>
        /// The reference index corresponds to the order of the orginating object message in the list at the highest parent level. Example: if 3 account objects were included in the originating AccountMessage then status responses can be provided for each object by reference (0, 1, 2). Use of referenceId and or referenceIndex is to allow for the discrete association of status responses to the originating objects in the message list. 
        /// </summary>
        /// <value>The reference index corresponds to the order of the orginating object message in the list at the highest parent level. Example: if 3 account objects were included in the originating AccountMessage then status responses can be provided for each object by reference (0, 1, 2). Use of referenceId and or referenceIndex is to allow for the discrete association of status responses to the originating objects in the message list. </value>
        [DataMember(Name="referenceIndex", EmitDefaultValue=true)]
        public int ReferenceIndex { get; set; }

    }
}
