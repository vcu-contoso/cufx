/*
 * Credit Union Financial eXchange
 *
 * Credit Union Industry Standard. The following API examples are producedz using scripting methods to create a swagger representation of the XML/XSDs. In the event of any noted deviations, the published XSDs on www.cufxstandards.com are the basis of intended content and behavior. Please see https://bonifii.com/cufx-terms-of-use for the terms of use applicable for CUFX.
 *
 * The version of the OpenAPI document: 4.5
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using VyStar.ApiStandards.CUFX.Converters;

namespace VyStar.ApiStandards.CUFX.Models
{ 
    /// <summary>
    /// Is a collection of fields that identifies that appropriate access has been demonstrated to receive information electronically for this contact point. 
    /// </summary>
    [DataContract]
    public partial class ContactDemonstratedAccess 
    {
        /// <summary>
        /// The date/time that the party demonstrated having access to use this contact point for electronic delivery. The date/time should be ISO 8601 UTC format. yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. 
        /// </summary>
        /// <value>The date/time that the party demonstrated having access to use this contact point for electronic delivery. The date/time should be ISO 8601 UTC format. yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. </value>
        [DataMember(Name="dateTime", EmitDefaultValue=false)]
        public string DateTime { get; set; }

        /// <summary>
        /// The full name of the party that demonstrated having access to use this preference.  Depending upon the use case, this may or may not be provided but will typically be the name that the user typed in when they agreed to the conditions.  Since a personâ€™s name can change over time, the best practice is to store this at the time that the agreement was made. 
        /// </summary>
        /// <value>The full name of the party that demonstrated having access to use this preference.  Depending upon the use case, this may or may not be provided but will typically be the name that the user typed in when they agreed to the conditions.  Since a personâ€™s name can change over time, the best practice is to store this at the time that the agreement was made. </value>
        [DataMember(Name="fullName", EmitDefaultValue=false)]
        public string FullName { get; set; }

        /// <summary>
        /// The credential username of the party that demonstrated having access. Since the username for a contact may change over time, the best practice is to store this at the time that the agreement was made. 
        /// </summary>
        /// <value>The credential username of the party that demonstrated having access. Since the username for a contact may change over time, the best practice is to store this at the time that the agreement was made. </value>
        [DataMember(Name="userName", EmitDefaultValue=false)]
        public string UserName { get; set; }

    }
}
