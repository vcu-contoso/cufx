/*
 * Credit Union Financial eXchange
 *
 * Credit Union Industry Standard. The following API examples are producedz using scripting methods to create a swagger representation of the XML/XSDs. In the event of any noted deviations, the published XSDs on www.cufxstandards.com are the basis of intended content and behavior. Please see https://bonifii.com/cufx-terms-of-use for the terms of use applicable for CUFX.
 *
 * The version of the OpenAPI document: 4.5
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using VyStar.ApiStandards.CUFX.Converters;

namespace VyStar.ApiStandards.CUFX.Models
{ 
    /// <summary>
    /// Employment/employer details related to an individual. 
    /// </summary>
    [DataContract]
    public partial class Employment 
    {
        /// <summary>
        /// Unique identifier for the employment record used as a way of identifying this record within the system. 
        /// </summary>
        /// <value>Unique identifier for the employment record used as a way of identifying this record within the system. </value>
        [DataMember(Name="employmentId", EmitDefaultValue=false)]
        public string EmploymentId { get; set; }

        /// <summary>
        /// The party ID is a persistent and unique identifier for the party not related to the accounts they own but tied to that person or organization. It should be unique for all parties across the institution and remain the same over the life of the relationship with the financial institution. 
        /// </summary>
        /// <value>The party ID is a persistent and unique identifier for the party not related to the accounts they own but tied to that person or organization. It should be unique for all parties across the institution and remain the same over the life of the relationship with the financial institution. </value>
        [DataMember(Name="employerPartyId", EmitDefaultValue=false)]
        public string EmployerPartyId { get; set; }

        /// <summary>
        /// The employer name. 
        /// </summary>
        /// <value>The employer name. </value>
        [DataMember(Name="employerName", EmitDefaultValue=false)]
        public string EmployerName { get; set; }

        /// <summary>
        /// The employment start date. 
        /// </summary>
        /// <value>The employment start date. </value>
        [DataMember(Name="employmentStartDate", EmitDefaultValue=false)]
        public DateTime EmploymentStartDate { get; set; }

        /// <summary>
        /// The employment end date. 
        /// </summary>
        /// <value>The employment end date. </value>
        [DataMember(Name="employmentEndDate", EmitDefaultValue=false)]
        public DateTime EmploymentEndDate { get; set; }

        /// <summary>
        /// The duration spent at the employer as calculated by the employment start and end dates. The time interval is specified in the following form \&quot;PnYnMnDTnHnMnS\&quot; where: P indicates the period (required) nY indicates the number of years nM indicates the number of months nD indicates the number of days Example: P5Y2M10D would indicate five years, two months and 10 days. 
        /// </summary>
        /// <value>The duration spent at the employer as calculated by the employment start and end dates. The time interval is specified in the following form \&quot;PnYnMnDTnHnMnS\&quot; where: P indicates the period (required) nY indicates the number of years nM indicates the number of months nD indicates the number of days Example: P5Y2M10D would indicate five years, two months and 10 days. </value>
        [DataMember(Name="timeAtEmployer", EmitDefaultValue=false)]
        public string TimeAtEmployer { get; set; }

        /// <summary>
        /// The position that the individual holds in the business. 
        /// </summary>
        /// <value>The position that the individual holds in the business. </value>
        [DataMember(Name="employeeOccupation", EmitDefaultValue=false)]
        public string EmployeeOccupation { get; set; }

        /// <summary>
        /// The employers address. 
        /// </summary>
        /// <value>The employers address. </value>
        [DataMember(Name="employerAddress", EmitDefaultValue=false)]
        public List<Address> EmployerAddress { get; set; }

        /// <summary>
        /// Contains details describing phone-specific employer data elements. 
        /// </summary>
        /// <value>Contains details describing phone-specific employer data elements. </value>
        [DataMember(Name="employerPhone", EmitDefaultValue=false)]
        public List<Phone> EmployerPhone { get; set; }


        /// <summary>
        /// Represents available individual employer status values, as in currently or previously employed by an employer. 
        /// </summary>
        /// <value>Represents available individual employer status values, as in currently or previously employed by an employer. </value>
        [TypeConverter(typeof(CustomEnumConverter<EmployerStatusEnum>))]
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum EmployerStatusEnum
        {
            
            /// <summary>
            /// Enum CurrentEnum for Current
            /// </summary>
            [EnumMember(Value = "Current")]
            CurrentEnum = 1,
            
            /// <summary>
            /// Enum PreviousEnum for Previous
            /// </summary>
            [EnumMember(Value = "Previous")]
            PreviousEnum = 2
        }

        /// <summary>
        /// Represents available individual employer status values, as in currently or previously employed by an employer. 
        /// </summary>
        /// <value>Represents available individual employer status values, as in currently or previously employed by an employer. </value>
        [DataMember(Name="employerStatus", EmitDefaultValue=true)]
        public EmployerStatusEnum EmployerStatus { get; set; }


        /// <summary>
        /// Represents available individual employment type values, as in full or part time. 
        /// </summary>
        /// <value>Represents available individual employment type values, as in full or part time. </value>
        [TypeConverter(typeof(CustomEnumConverter<TypeEnum>))]
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum TypeEnum
        {
            
            /// <summary>
            /// Enum FullTimeEnum for FullTime
            /// </summary>
            [EnumMember(Value = "FullTime")]
            FullTimeEnum = 1,
            
            /// <summary>
            /// Enum PartTimeEnum for PartTime
            /// </summary>
            [EnumMember(Value = "PartTime")]
            PartTimeEnum = 2
        }

        /// <summary>
        /// Represents available individual employment type values, as in full or part time. 
        /// </summary>
        /// <value>Represents available individual employment type values, as in full or part time. </value>
        [DataMember(Name="type", EmitDefaultValue=true)]
        public TypeEnum Type { get; set; }

        /// <summary>
        /// Gets or Sets EmploymentIncome
        /// </summary>
        [DataMember(Name="employmentIncome", EmitDefaultValue=false)]
        public EmploymentEmploymentIncome EmploymentIncome { get; set; }

        /// <summary>
        /// Gets or Sets CustomData
        /// </summary>
        [DataMember(Name="customData", EmitDefaultValue=false)]
        public AccessProfileCustomData CustomData { get; set; }

    }
}
