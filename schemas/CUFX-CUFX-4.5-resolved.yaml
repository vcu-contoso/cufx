---
swagger: "2.0"
info:
  description: "Credit Union Industry Standard. The following API examples are producedz using scripting methods to create a swagger representation of the XML/XSDs. In the event of any noted deviations, the published XSDs on www.cufxstandards.com are the basis of intended content and behavior. Please see https://bonifii.com/cufx-terms-of-use for the terms of use applicable for CUFX."
  version: "4.5"
  title: Credit Union Financial eXchange
host: virtserver.swaggerhub.com
basePath: /CUFX/CUFX/4.5
tags:
- name: AccessProfileMessage
  externalDocs:
    description: CUFX Website
    url: https://bonifii.com/cufx-2/
- name: AccountMessage
  externalDocs:
    description: CUFX Website
    url: https://bonifii.com/cufx-2/
- name: ActivityMessage
  externalDocs:
    description: CUFX Website
    url: https://bonifii.com/cufx-2/
- name: ApplicationMessage
  externalDocs:
    description: CUFX Website
    url: https://bonifii.com/cufx-2/
- name: AppMessage
  externalDocs:
    description: CUFX Website
    url: https://bonifii.com/cufx-2/
- name: ArtifactMessage
  externalDocs:
    description: CUFX Website
    url: https://bonifii.com/cufx-2/
- name: BillMessage
  externalDocs:
    description: CUFX Website
    url: https://bonifii.com/cufx-2/
- name: BillPayeeMessage
  externalDocs:
    description: CUFX Website
    url: https://bonifii.com/cufx-2/
- name: BillPaymentOccurrenceMessage
  externalDocs:
    description: CUFX Website
    url: https://bonifii.com/cufx-2/
- name: BillPaymentRecurringMessage
  externalDocs:
    description: CUFX Website
    url: https://bonifii.com/cufx-2/
- name: CardMessage
  externalDocs:
    description: CUFX Website
    url: https://bonifii.com/cufx-2/
- name: CategoryMessage
  externalDocs:
    description: CUFX Website
    url: https://bonifii.com/cufx-2/
- name: CollateralMessage
  externalDocs:
    description: CUFX Website
    url: https://bonifii.com/cufx-2/
- name: ConfigurationMessage
  externalDocs:
    description: CUFX Website
    url: https://bonifii.com/cufx-2/
- name: ContactMessage
  externalDocs:
    description: CUFX Website
    url: https://bonifii.com/cufx-2/
- name: CredentialGroupMessage
  externalDocs:
    description: CUFX Website
    url: https://bonifii.com/cufx-2/
- name: CreditReportMessage
  externalDocs:
    description: CUFX Website
    url: https://bonifii.com/cufx-2/
- name: DepositFundingMessage
  externalDocs:
    description: CUFX Website
    url: https://bonifii.com/cufx-2/
- name: DepositMessage
  externalDocs:
    description: CUFX Website
    url: https://bonifii.com/cufx-2/
- name: DocumentMessage
  externalDocs:
    description: CUFX Website
    url: https://bonifii.com/cufx-2/
- name: EligibilityRequirementMessage
  externalDocs:
    description: CUFX Website
    url: https://bonifii.com/cufx-2/
- name: FeeScheduleMessage
  externalDocs:
    description: CUFX Website
    url: https://bonifii.com/cufx-2/
- name: FieldMessage
  externalDocs:
    description: CUFX Website
    url: https://bonifii.com/cufx-2/
- name: FinancialInstitutionMessage
  externalDocs:
    description: CUFX Website
    url: https://bonifii.com/cufx-2/
- name: HoldMessage
  externalDocs:
    description: CUFX Website
    url: https://bonifii.com/cufx-2/
- name: InvestmentHoldingMessage
  externalDocs:
    description: CUFX Website
    url: https://bonifii.com/cufx-2/
- name: InvestmentMessage
  externalDocs:
    description: CUFX Website
    url: https://bonifii.com/cufx-2/
- name: LoanDisbursementMessage
  externalDocs:
    description: CUFX Website
    url: https://bonifii.com/cufx-2/
- name: LoanMessage
  externalDocs:
    description: CUFX Website
    url: https://bonifii.com/cufx-2/
- name: LocationMessage
  externalDocs:
    description: CUFX Website
    url: https://bonifii.com/cufx-2/
- name: MicroDepositFundingMessage
  externalDocs:
    description: CUFX Website
    url: https://bonifii.com/cufx-2/
- name: NetworkNodeMessage
  externalDocs:
    description: CUFX Website
    url: https://bonifii.com/cufx-2/
- name: NoteMessage
  externalDocs:
    description: CUFX Website
    url: https://bonifii.com/cufx-2/
- name: OverdraftPriorityMessage
  externalDocs:
    description: CUFX Website
    url: https://bonifii.com/cufx-2/
- name: PartyAssociationMessage
  externalDocs:
    description: CUFX Website
    url: https://bonifii.com/cufx-2/
- name: PartyMessage
  externalDocs:
    description: CUFX Website
    url: https://bonifii.com/cufx-2/
- name: PermissionListMessage
  externalDocs:
    description: CUFX Website
    url: https://bonifii.com/cufx-2/
- name: PreferenceMessage
  externalDocs:
    description: CUFX Website
    url: https://bonifii.com/cufx-2/
- name: ProductOfferingMessage
  externalDocs:
    description: CUFX Website
    url: https://bonifii.com/cufx-2/
- name: ProductServiceEnrollmentMessage
  externalDocs:
    description: CUFX Website
    url: https://bonifii.com/cufx-2/
- name: ProductServiceRequestMessage
  externalDocs:
    description: CUFX Website
    url: https://bonifii.com/cufx-2/
- name: RegisteredDeviceMessage
  externalDocs:
    description: CUFX Website
    url: https://bonifii.com/cufx-2/
- name: RelationshipMessage
  externalDocs:
    description: CUFX Website
    url: https://bonifii.com/cufx-2/
- name: RemoteDepositMessage
  externalDocs:
    description: CUFX Website
    url: https://bonifii.com/cufx-2/
- name: SecureMessageMessage
  externalDocs:
    description: CUFX Website
    url: https://bonifii.com/cufx-2/
- name: SimpleValidationRequestMessage
  externalDocs:
    description: CUFX Website
    url: https://bonifii.com/cufx-2/
- name: SystemStatusMessage
  externalDocs:
    description: CUFX Website
    url: https://bonifii.com/cufx-2/
- name: TransactionMessage
  externalDocs:
    description: CUFX Website
    url: https://bonifii.com/cufx-2/
- name: TransferOccurrenceMessage
  externalDocs:
    description: CUFX Website
    url: https://bonifii.com/cufx-2/
- name: TransferRecurringMessage
  externalDocs:
    description: CUFX Website
    url: https://bonifii.com/cufx-2/
- name: UserMessage
  externalDocs:
    description: CUFX Website
    url: https://bonifii.com/cufx-2/
- name: WireMessage
  externalDocs:
    description: CUFX Website
    url: https://bonifii.com/cufx-2/
schemes:
- https
- http
consumes:
- application/json
produces:
- application/json
security:
- UserSecurity: []
paths:
  /AccessProfileMessage:
    post:
      tags:
      - AccessProfileMessage
      summary: Example of post operation for AccessProfileMessage
      description: "All values that can be sent in an accessProfile message.  Contains message context, accessProfile filter and an accessProfile list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: postAccessProfileMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: AccessProfileMessage
        description: AccessProfileMessage Specification
        required: true
        schema:
          $ref: '#/definitions/AccessProfileMessage_1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200'
    put:
      tags:
      - AccessProfileMessage
      summary: Example of put operation for AccessProfileMessage
      description: "All values that can be sent in an accessProfile message.  Contains message context, accessProfile filter and an accessProfile list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: putAccessProfileMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: AccessProfileMessage
        description: AccessProfileMessage Specification
        required: true
        schema:
          $ref: '#/definitions/AccessProfileMessage'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200'
  /AccessProfileMessage/Delete:
    post:
      tags:
      - AccessProfileMessage
      summary: Example of delete operation for AccessProfileMessage
      description: "All values that can be sent in an accessProfile message.  Contains message context, accessProfile filter and an accessProfile list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: deleteAccessProfileMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: AccessProfileMessage
        description: AccessProfileMessage Specification
        required: true
        schema:
          $ref: '#/definitions/AccessProfileMessage_2'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200'
  /AccessProfileMessage/Get:
    post:
      tags:
      - AccessProfileMessage
      summary: Example of get operation for AccessProfileMessage
      description: "All values that can be sent in an accessProfile message.  Contains message context, accessProfile filter and an accessProfile list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: getAccessProfileMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: AccessProfileMessage
        description: AccessProfileMessage Specification
        required: true
        schema:
          $ref: '#/definitions/AccessProfileMessage_3'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200'
  /AccountMessage:
    post:
      tags:
      - AccountMessage
      summary: Example of post operation for AccountMessage
      description: "All values that can be sent in an account message.  Contains message context, account filter and an account list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: postAccountMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: AccountMessage
        description: AccountMessage Specification
        required: true
        schema:
          $ref: '#/definitions/AccountMessage_1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_1'
    put:
      tags:
      - AccountMessage
      summary: Example of put operation for AccountMessage
      description: "All values that can be sent in an account message.  Contains message context, account filter and an account list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: putAccountMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: AccountMessage
        description: AccountMessage Specification
        required: true
        schema:
          $ref: '#/definitions/AccountMessage'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_1'
  /AccountMessage/Delete:
    post:
      tags:
      - AccountMessage
      summary: Example of delete operation for AccountMessage
      description: "All values that can be sent in an account message.  Contains message context, account filter and an account list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: deleteAccountMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: AccountMessage
        description: AccountMessage Specification
        required: true
        schema:
          $ref: '#/definitions/AccountMessage_2'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_1'
  /AccountMessage/Get:
    post:
      tags:
      - AccountMessage
      summary: Example of get operation for AccountMessage
      description: "All values that can be sent in an account message.  Contains message context, account filter and an account list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: getAccountMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: AccountMessage
        description: AccountMessage Specification
        required: true
        schema:
          $ref: '#/definitions/AccountMessage_3'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_1'
  /ActivityMessage:
    post:
      tags:
      - ActivityMessage
      summary: Example of post operation for ActivityMessage
      description: "All values that can be sent in an activity message.  Contains message context, activity filter and an activity list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: postActivityMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: ActivityMessage
        description: ActivityMessage Specification
        required: true
        schema:
          $ref: '#/definitions/ActivityMessage_1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_2'
    put:
      tags:
      - ActivityMessage
      summary: Example of put operation for ActivityMessage
      description: "All values that can be sent in an activity message.  Contains message context, activity filter and an activity list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: putActivityMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: ActivityMessage
        description: ActivityMessage Specification
        required: true
        schema:
          $ref: '#/definitions/ActivityMessage'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_2'
  /ActivityMessage/Delete:
    post:
      tags:
      - ActivityMessage
      summary: Example of delete operation for ActivityMessage
      description: "All values that can be sent in an activity message.  Contains message context, activity filter and an activity list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: deleteActivityMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: ActivityMessage
        description: ActivityMessage Specification
        required: true
        schema:
          $ref: '#/definitions/ActivityMessage_2'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_2'
  /ActivityMessage/Get:
    post:
      tags:
      - ActivityMessage
      summary: Example of get operation for ActivityMessage
      description: "All values that can be sent in an activity message.  Contains message context, activity filter and an activity list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: getActivityMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: ActivityMessage
        description: ActivityMessage Specification
        required: true
        schema:
          $ref: '#/definitions/ActivityMessage_3'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_2'
  /ApplicationMessage:
    post:
      tags:
      - ApplicationMessage
      summary: Example of post operation for ApplicationMessage
      description: "All values that can be sent in an application message.  Contains message context, application filter and an application list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: postApplicationMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: ApplicationMessage
        description: ApplicationMessage Specification
        required: true
        schema:
          $ref: '#/definitions/ApplicationMessage_1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_3'
    put:
      tags:
      - ApplicationMessage
      summary: Example of put operation for ApplicationMessage
      description: "All values that can be sent in an application message.  Contains message context, application filter and an application list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: putApplicationMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: ApplicationMessage
        description: ApplicationMessage Specification
        required: true
        schema:
          $ref: '#/definitions/ApplicationMessage'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_3'
  /ApplicationMessage/Delete:
    post:
      tags:
      - ApplicationMessage
      summary: Example of delete operation for ApplicationMessage
      description: "All values that can be sent in an application message.  Contains message context, application filter and an application list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: deleteApplicationMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: ApplicationMessage
        description: ApplicationMessage Specification
        required: true
        schema:
          $ref: '#/definitions/ApplicationMessage_2'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_3'
  /ApplicationMessage/Get:
    post:
      tags:
      - ApplicationMessage
      summary: Example of get operation for ApplicationMessage
      description: "All values that can be sent in an application message.  Contains message context, application filter and an application list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: getApplicationMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: ApplicationMessage
        description: ApplicationMessage Specification
        required: true
        schema:
          $ref: '#/definitions/ApplicationMessage_3'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_3'
  /AppMessage:
    post:
      tags:
      - AppMessage
      summary: Example of post operation for AppMessage
      description: "All values that can be sent in an app message.  Contains message context, app filter and an app list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: postAppMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: AppMessage
        description: AppMessage Specification
        required: true
        schema:
          $ref: '#/definitions/AppMessage_1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_4'
    put:
      tags:
      - AppMessage
      summary: Example of put operation for AppMessage
      description: "All values that can be sent in an app message.  Contains message context, app filter and an app list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: putAppMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: AppMessage
        description: AppMessage Specification
        required: true
        schema:
          $ref: '#/definitions/AppMessage'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_4'
  /AppMessage/Delete:
    post:
      tags:
      - AppMessage
      summary: Example of delete operation for AppMessage
      description: "All values that can be sent in an app message.  Contains message context, app filter and an app list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: deleteAppMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: AppMessage
        description: AppMessage Specification
        required: true
        schema:
          $ref: '#/definitions/AppMessage_2'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_4'
  /AppMessage/Get:
    post:
      tags:
      - AppMessage
      summary: Example of get operation for AppMessage
      description: "All values that can be sent in an app message.  Contains message context, app filter and an app list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: getAppMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: AppMessage
        description: AppMessage Specification
        required: true
        schema:
          $ref: '#/definitions/AppMessage_3'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_4'
  /ArtifactMessage:
    post:
      tags:
      - ArtifactMessage
      summary: Example of post operation for ArtifactMessage
      description: "All values that can be sent in an artifact message.  Contains message context, artifact filter and an artifact list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: postArtifactMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: ArtifactMessage
        description: ArtifactMessage Specification
        required: true
        schema:
          $ref: '#/definitions/ArtifactMessage_1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_5'
    put:
      tags:
      - ArtifactMessage
      summary: Example of put operation for ArtifactMessage
      description: "All values that can be sent in an artifact message.  Contains message context, artifact filter and an artifact list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: putArtifactMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: ArtifactMessage
        description: ArtifactMessage Specification
        required: true
        schema:
          $ref: '#/definitions/ArtifactMessage'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_5'
  /ArtifactMessage/Delete:
    post:
      tags:
      - ArtifactMessage
      summary: Example of delete operation for ArtifactMessage
      description: "All values that can be sent in an artifact message.  Contains message context, artifact filter and an artifact list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: deleteArtifactMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: ArtifactMessage
        description: ArtifactMessage Specification
        required: true
        schema:
          $ref: '#/definitions/ArtifactMessage_2'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_5'
  /ArtifactMessage/Get:
    post:
      tags:
      - ArtifactMessage
      summary: Example of get operation for ArtifactMessage
      description: "All values that can be sent in an artifact message.  Contains message context, artifact filter and an artifact list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: getArtifactMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: ArtifactMessage
        description: ArtifactMessage Specification
        required: true
        schema:
          $ref: '#/definitions/ArtifactMessage_3'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_5'
  /BillMessage:
    post:
      tags:
      - BillMessage
      summary: Example of post operation for BillMessage
      description: "All values that can be sent in a Bill message.  Contains message context, Bill filter and a Bill list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: postBillMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: BillMessage
        description: BillMessage Specification
        required: true
        schema:
          $ref: '#/definitions/BillMessage_1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_6'
    put:
      tags:
      - BillMessage
      summary: Example of put operation for BillMessage
      description: "All values that can be sent in a Bill message.  Contains message context, Bill filter and a Bill list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: putBillMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: BillMessage
        description: BillMessage Specification
        required: true
        schema:
          $ref: '#/definitions/BillMessage'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_6'
  /BillMessage/Delete:
    post:
      tags:
      - BillMessage
      summary: Example of delete operation for BillMessage
      description: "All values that can be sent in a Bill message.  Contains message context, Bill filter and a Bill list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: deleteBillMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: BillMessage
        description: BillMessage Specification
        required: true
        schema:
          $ref: '#/definitions/BillMessage_2'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_6'
  /BillMessage/Get:
    post:
      tags:
      - BillMessage
      summary: Example of get operation for BillMessage
      description: "All values that can be sent in a Bill message.  Contains message context, Bill filter and a Bill list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: getBillMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: BillMessage
        description: BillMessage Specification
        required: true
        schema:
          $ref: '#/definitions/BillMessage_3'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_6'
  /BillPayeeMessage:
    post:
      tags:
      - BillPayeeMessage
      summary: Example of post operation for BillPayeeMessage
      description: "All values that can be sent in a billPayee message.  Contains message context, billPayee filter and a billPayee list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: postBillPayeeMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: BillPayeeMessage
        description: BillPayeeMessage Specification
        required: true
        schema:
          $ref: '#/definitions/BillPayeeMessage_1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_7'
    put:
      tags:
      - BillPayeeMessage
      summary: Example of put operation for BillPayeeMessage
      description: "All values that can be sent in a billPayee message.  Contains message context, billPayee filter and a billPayee list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: putBillPayeeMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: BillPayeeMessage
        description: BillPayeeMessage Specification
        required: true
        schema:
          $ref: '#/definitions/BillPayeeMessage'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_7'
  /BillPayeeMessage/Delete:
    post:
      tags:
      - BillPayeeMessage
      summary: Example of delete operation for BillPayeeMessage
      description: "All values that can be sent in a billPayee message.  Contains message context, billPayee filter and a billPayee list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: deleteBillPayeeMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: BillPayeeMessage
        description: BillPayeeMessage Specification
        required: true
        schema:
          $ref: '#/definitions/BillPayeeMessage_2'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_7'
  /BillPayeeMessage/Get:
    post:
      tags:
      - BillPayeeMessage
      summary: Example of get operation for BillPayeeMessage
      description: "All values that can be sent in a billPayee message.  Contains message context, billPayee filter and a billPayee list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: getBillPayeeMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: BillPayeeMessage
        description: BillPayeeMessage Specification
        required: true
        schema:
          $ref: '#/definitions/BillPayeeMessage_3'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_7'
  /BillPaymentOccurrenceMessage:
    post:
      tags:
      - BillPaymentOccurrenceMessage
      summary: Example of post operation for BillPaymentOccurrenceMessage
      description: "All values that can be sent in a bill payment occurrenc emessage.  Contains message context, bill payment occurrence filter and a bill payment occurrence list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: postBillPaymentOccurrenceMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: BillPaymentOccurrenceMessage
        description: BillPaymentOccurrenceMessage Specification
        required: true
        schema:
          $ref: '#/definitions/BillPaymentOccurrenceMessage_1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_8'
    put:
      tags:
      - BillPaymentOccurrenceMessage
      summary: Example of put operation for BillPaymentOccurrenceMessage
      description: "All values that can be sent in a bill payment occurrenc emessage.  Contains message context, bill payment occurrence filter and a bill payment occurrence list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: putBillPaymentOccurrenceMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: BillPaymentOccurrenceMessage
        description: BillPaymentOccurrenceMessage Specification
        required: true
        schema:
          $ref: '#/definitions/BillPaymentOccurrenceMessage'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_8'
  /BillPaymentOccurrenceMessage/Delete:
    post:
      tags:
      - BillPaymentOccurrenceMessage
      summary: Example of delete operation for BillPaymentOccurrenceMessage
      description: "All values that can be sent in a bill payment occurrenc emessage.  Contains message context, bill payment occurrence filter and a bill payment occurrence list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: deleteBillPaymentOccurrenceMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: BillPaymentOccurrenceMessage
        description: BillPaymentOccurrenceMessage Specification
        required: true
        schema:
          $ref: '#/definitions/BillPaymentOccurrenceMessage_2'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_8'
  /BillPaymentOccurrenceMessage/Get:
    post:
      tags:
      - BillPaymentOccurrenceMessage
      summary: Example of get operation for BillPaymentOccurrenceMessage
      description: "All values that can be sent in a bill payment occurrenc emessage.  Contains message context, bill payment occurrence filter and a bill payment occurrence list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: getBillPaymentOccurrenceMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: BillPaymentOccurrenceMessage
        description: BillPaymentOccurrenceMessage Specification
        required: true
        schema:
          $ref: '#/definitions/BillPaymentOccurrenceMessage_3'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_8'
  /BillPaymentRecurringMessage:
    post:
      tags:
      - BillPaymentRecurringMessage
      summary: Example of post operation for BillPaymentRecurringMessage
      description: "All values that can be sent in a bill payment message.  Contains message context, bill payment filter and a bill payment list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: postBillPaymentRecurringMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: BillPaymentRecurringMessage
        description: BillPaymentRecurringMessage Specification
        required: true
        schema:
          $ref: '#/definitions/BillPaymentRecurringMessage_1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_9'
    put:
      tags:
      - BillPaymentRecurringMessage
      summary: Example of put operation for BillPaymentRecurringMessage
      description: "All values that can be sent in a bill payment message.  Contains message context, bill payment filter and a bill payment list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: putBillPaymentRecurringMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: BillPaymentRecurringMessage
        description: BillPaymentRecurringMessage Specification
        required: true
        schema:
          $ref: '#/definitions/BillPaymentRecurringMessage'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_9'
  /BillPaymentRecurringMessage/Delete:
    post:
      tags:
      - BillPaymentRecurringMessage
      summary: Example of delete operation for BillPaymentRecurringMessage
      description: "All values that can be sent in a bill payment message.  Contains message context, bill payment filter and a bill payment list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: deleteBillPaymentRecurringMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: BillPaymentRecurringMessage
        description: BillPaymentRecurringMessage Specification
        required: true
        schema:
          $ref: '#/definitions/BillPaymentRecurringMessage_2'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_9'
  /BillPaymentRecurringMessage/Get:
    post:
      tags:
      - BillPaymentRecurringMessage
      summary: Example of get operation for BillPaymentRecurringMessage
      description: "All values that can be sent in a bill payment message.  Contains message context, bill payment filter and a bill payment list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: getBillPaymentRecurringMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: BillPaymentRecurringMessage
        description: BillPaymentRecurringMessage Specification
        required: true
        schema:
          $ref: '#/definitions/BillPaymentRecurringMessage_3'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_9'
  /CardMessage:
    post:
      tags:
      - CardMessage
      summary: Example of post operation for CardMessage
      description: "All values that can be sent in a card message.  Contains message context, card filter and a card list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: postCardMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: CardMessage
        description: CardMessage Specification
        required: true
        schema:
          $ref: '#/definitions/CardMessage_1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_10'
    put:
      tags:
      - CardMessage
      summary: Example of put operation for CardMessage
      description: "All values that can be sent in a card message.  Contains message context, card filter and a card list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: putCardMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: CardMessage
        description: CardMessage Specification
        required: true
        schema:
          $ref: '#/definitions/CardMessage'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_10'
  /CardMessage/Delete:
    post:
      tags:
      - CardMessage
      summary: Example of delete operation for CardMessage
      description: "All values that can be sent in a card message.  Contains message context, card filter and a card list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: deleteCardMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: CardMessage
        description: CardMessage Specification
        required: true
        schema:
          $ref: '#/definitions/CardMessage_2'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_10'
  /CardMessage/Get:
    post:
      tags:
      - CardMessage
      summary: Example of get operation for CardMessage
      description: "All values that can be sent in a card message.  Contains message context, card filter and a card list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: getCardMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: CardMessage
        description: CardMessage Specification
        required: true
        schema:
          $ref: '#/definitions/CardMessage_3'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_10'
  /CategoryMessage:
    post:
      tags:
      - CategoryMessage
      summary: Example of post operation for CategoryMessage
      description: "All values that can be sent in a category message.  Contains message context, category filter and a category list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: postCategoryMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: CategoryMessage
        description: CategoryMessage Specification
        required: true
        schema:
          $ref: '#/definitions/CategoryMessage_1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_11'
    put:
      tags:
      - CategoryMessage
      summary: Example of put operation for CategoryMessage
      description: "All values that can be sent in a category message.  Contains message context, category filter and a category list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: putCategoryMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: CategoryMessage
        description: CategoryMessage Specification
        required: true
        schema:
          $ref: '#/definitions/CategoryMessage'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_11'
  /CategoryMessage/Delete:
    post:
      tags:
      - CategoryMessage
      summary: Example of delete operation for CategoryMessage
      description: "All values that can be sent in a category message.  Contains message context, category filter and a category list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: deleteCategoryMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: CategoryMessage
        description: CategoryMessage Specification
        required: true
        schema:
          $ref: '#/definitions/CategoryMessage_2'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_11'
  /CategoryMessage/Get:
    post:
      tags:
      - CategoryMessage
      summary: Example of get operation for CategoryMessage
      description: "All values that can be sent in a category message.  Contains message context, category filter and a category list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: getCategoryMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: CategoryMessage
        description: CategoryMessage Specification
        required: true
        schema:
          $ref: '#/definitions/CategoryMessage_3'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_11'
  /CollateralMessage:
    post:
      tags:
      - CollateralMessage
      summary: Example of post operation for CollateralMessage
      description: "All values that can be sent in a collateral message.  Contains message context, collateral filter and a collateral list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: postCollateralMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: CollateralMessage
        description: CollateralMessage Specification
        required: true
        schema:
          $ref: '#/definitions/CollateralMessage_1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_12'
    put:
      tags:
      - CollateralMessage
      summary: Example of put operation for CollateralMessage
      description: "All values that can be sent in a collateral message.  Contains message context, collateral filter and a collateral list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: putCollateralMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: CollateralMessage
        description: CollateralMessage Specification
        required: true
        schema:
          $ref: '#/definitions/CollateralMessage'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_12'
  /CollateralMessage/Delete:
    post:
      tags:
      - CollateralMessage
      summary: Example of delete operation for CollateralMessage
      description: "All values that can be sent in a collateral message.  Contains message context, collateral filter and a collateral list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: deleteCollateralMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: CollateralMessage
        description: CollateralMessage Specification
        required: true
        schema:
          $ref: '#/definitions/CollateralMessage_2'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_12'
  /CollateralMessage/Get:
    post:
      tags:
      - CollateralMessage
      summary: Example of get operation for CollateralMessage
      description: "All values that can be sent in a collateral message.  Contains message context, collateral filter and a collateral list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: getCollateralMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: CollateralMessage
        description: CollateralMessage Specification
        required: true
        schema:
          $ref: '#/definitions/CollateralMessage_3'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_12'
  /ConfigurationMessage:
    post:
      tags:
      - ConfigurationMessage
      summary: Example of post operation for ConfigurationMessage
      description: "All values that can be sent in a configuration message.  Contains message context, configuration filter and a configuration list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: postConfigurationMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: ConfigurationMessage
        description: ConfigurationMessage Specification
        required: true
        schema:
          $ref: '#/definitions/ConfigurationMessage_1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_13'
    put:
      tags:
      - ConfigurationMessage
      summary: Example of put operation for ConfigurationMessage
      description: "All values that can be sent in a configuration message.  Contains message context, configuration filter and a configuration list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: putConfigurationMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: ConfigurationMessage
        description: ConfigurationMessage Specification
        required: true
        schema:
          $ref: '#/definitions/ConfigurationMessage'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_13'
  /ConfigurationMessage/Delete:
    post:
      tags:
      - ConfigurationMessage
      summary: Example of delete operation for ConfigurationMessage
      description: "All values that can be sent in a configuration message.  Contains message context, configuration filter and a configuration list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: deleteConfigurationMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: ConfigurationMessage
        description: ConfigurationMessage Specification
        required: true
        schema:
          $ref: '#/definitions/ConfigurationMessage_2'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_13'
  /ConfigurationMessage/Get:
    post:
      tags:
      - ConfigurationMessage
      summary: Example of get operation for ConfigurationMessage
      description: "All values that can be sent in a configuration message.  Contains message context, configuration filter and a configuration list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: getConfigurationMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: ConfigurationMessage
        description: ConfigurationMessage Specification
        required: true
        schema:
          $ref: '#/definitions/ConfigurationMessage_3'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_13'
  /ContactMessage:
    post:
      tags:
      - ContactMessage
      summary: Example of post operation for ContactMessage
      description: "All values that can be sent in a contact message.  Contains message context, contact filter and a contact list. This is a wrapper used to more easily serialize the complete message. All values are optional.  See example specifications for usage. "
      operationId: postContactMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: ContactMessage
        description: ContactMessage Specification
        required: true
        schema:
          $ref: '#/definitions/ContactMessage_1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_14'
    put:
      tags:
      - ContactMessage
      summary: Example of put operation for ContactMessage
      description: "All values that can be sent in a contact message.  Contains message context, contact filter and a contact list. This is a wrapper used to more easily serialize the complete message. All values are optional.  See example specifications for usage. "
      operationId: putContactMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: ContactMessage
        description: ContactMessage Specification
        required: true
        schema:
          $ref: '#/definitions/ContactMessage'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_14'
  /ContactMessage/Delete:
    post:
      tags:
      - ContactMessage
      summary: Example of delete operation for ContactMessage
      description: "All values that can be sent in a contact message.  Contains message context, contact filter and a contact list. This is a wrapper used to more easily serialize the complete message. All values are optional.  See example specifications for usage. "
      operationId: deleteContactMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: ContactMessage
        description: ContactMessage Specification
        required: true
        schema:
          $ref: '#/definitions/ContactMessage_2'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_14'
  /ContactMessage/Get:
    post:
      tags:
      - ContactMessage
      summary: Example of get operation for ContactMessage
      description: "All values that can be sent in a contact message.  Contains message context, contact filter and a contact list. This is a wrapper used to more easily serialize the complete message. All values are optional.  See example specifications for usage. "
      operationId: getContactMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: ContactMessage
        description: ContactMessage Specification
        required: true
        schema:
          $ref: '#/definitions/ContactMessage_3'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_14'
  /CredentialGroupMessage:
    post:
      tags:
      - CredentialGroupMessage
      summary: Example of post operation for CredentialGroupMessage
      description: "All values that can be sent in a credential group message.  Contains message context, credential group filter and a credential group list. This is a wrapper used to more easily serialize the complete message. All values are optional.  See example specifications for usage. "
      operationId: postCredentialGroupMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: CredentialGroupMessage
        description: CredentialGroupMessage Specification
        required: true
        schema:
          $ref: '#/definitions/CredentialGroupMessage_1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_15'
    put:
      tags:
      - CredentialGroupMessage
      summary: Example of put operation for CredentialGroupMessage
      description: "All values that can be sent in a credential group message.  Contains message context, credential group filter and a credential group list. This is a wrapper used to more easily serialize the complete message. All values are optional.  See example specifications for usage. "
      operationId: putCredentialGroupMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: CredentialGroupMessage
        description: CredentialGroupMessage Specification
        required: true
        schema:
          $ref: '#/definitions/CredentialGroupMessage'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_15'
  /CredentialGroupMessage/Delete:
    post:
      tags:
      - CredentialGroupMessage
      summary: Example of delete operation for CredentialGroupMessage
      description: "All values that can be sent in a credential group message.  Contains message context, credential group filter and a credential group list. This is a wrapper used to more easily serialize the complete message. All values are optional.  See example specifications for usage. "
      operationId: deleteCredentialGroupMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: CredentialGroupMessage
        description: CredentialGroupMessage Specification
        required: true
        schema:
          $ref: '#/definitions/CredentialGroupMessage_2'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_15'
  /CredentialGroupMessage/Get:
    post:
      tags:
      - CredentialGroupMessage
      summary: Example of get operation for CredentialGroupMessage
      description: "All values that can be sent in a credential group message.  Contains message context, credential group filter and a credential group list. This is a wrapper used to more easily serialize the complete message. All values are optional.  See example specifications for usage. "
      operationId: getCredentialGroupMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: CredentialGroupMessage
        description: CredentialGroupMessage Specification
        required: true
        schema:
          $ref: '#/definitions/CredentialGroupMessage_3'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_15'
  /CreditReportMessage:
    post:
      tags:
      - CreditReportMessage
      summary: Example of post operation for CreditReportMessage
      description: "All values that can be sent in a credit report message.  Contains message context, credit report request, credit report filter and a credit report list.  This is a wrapper used to more easily serialize the complete message. All values are optional.  See example specifications for usage. "
      operationId: postCreditReportMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: CreditReportMessage
        description: CreditReportMessage Specification
        required: true
        schema:
          $ref: '#/definitions/CreditReportMessage_1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_16'
    put:
      tags:
      - CreditReportMessage
      summary: Example of put operation for CreditReportMessage
      description: "All values that can be sent in a credit report message.  Contains message context, credit report request, credit report filter and a credit report list.  This is a wrapper used to more easily serialize the complete message. All values are optional.  See example specifications for usage. "
      operationId: putCreditReportMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: CreditReportMessage
        description: CreditReportMessage Specification
        required: true
        schema:
          $ref: '#/definitions/CreditReportMessage'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_16'
  /CreditReportMessage/Delete:
    post:
      tags:
      - CreditReportMessage
      summary: Example of delete operation for CreditReportMessage
      description: "All values that can be sent in a credit report message.  Contains message context, credit report request, credit report filter and a credit report list.  This is a wrapper used to more easily serialize the complete message. All values are optional.  See example specifications for usage. "
      operationId: deleteCreditReportMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: CreditReportMessage
        description: CreditReportMessage Specification
        required: true
        schema:
          $ref: '#/definitions/CreditReportMessage_2'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_16'
  /CreditReportMessage/Get:
    post:
      tags:
      - CreditReportMessage
      summary: Example of get operation for CreditReportMessage
      description: "All values that can be sent in a credit report message.  Contains message context, credit report request, credit report filter and a credit report list.  This is a wrapper used to more easily serialize the complete message. All values are optional.  See example specifications for usage. "
      operationId: getCreditReportMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: CreditReportMessage
        description: CreditReportMessage Specification
        required: true
        schema:
          $ref: '#/definitions/CreditReportMessage_3'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_16'
  /DepositFundingMessage:
    post:
      tags:
      - DepositFundingMessage
      summary: Example of post operation for DepositFundingMessage
      description: "All values that can be sent in a deposit funding message.  Contains message context, deposit filter and a deposit funding list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: postDepositFundingMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: DepositFundingMessage
        description: DepositFundingMessage Specification
        required: true
        schema:
          $ref: '#/definitions/DepositFundingMessage_1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_17'
    put:
      tags:
      - DepositFundingMessage
      summary: Example of put operation for DepositFundingMessage
      description: "All values that can be sent in a deposit funding message.  Contains message context, deposit filter and a deposit funding list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: putDepositFundingMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: DepositFundingMessage
        description: DepositFundingMessage Specification
        required: true
        schema:
          $ref: '#/definitions/DepositFundingMessage'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_17'
  /DepositFundingMessage/Delete:
    post:
      tags:
      - DepositFundingMessage
      summary: Example of delete operation for DepositFundingMessage
      description: "All values that can be sent in a deposit funding message.  Contains message context, deposit filter and a deposit funding list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: deleteDepositFundingMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: DepositFundingMessage
        description: DepositFundingMessage Specification
        required: true
        schema:
          $ref: '#/definitions/DepositFundingMessage_2'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_17'
  /DepositFundingMessage/Get:
    post:
      tags:
      - DepositFundingMessage
      summary: Example of get operation for DepositFundingMessage
      description: "All values that can be sent in a deposit funding message.  Contains message context, deposit filter and a deposit funding list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: getDepositFundingMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: DepositFundingMessage
        description: DepositFundingMessage Specification
        required: true
        schema:
          $ref: '#/definitions/DepositFundingMessage_3'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_17'
  /DepositMessage:
    post:
      tags:
      - DepositMessage
      summary: Example of post operation for DepositMessage
      description: "All values that can be sent in a deposit message.  Contains message context, deposit filter and a deposit list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: postDepositMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: DepositMessage
        description: DepositMessage Specification
        required: true
        schema:
          $ref: '#/definitions/DepositMessage_1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_18'
    put:
      tags:
      - DepositMessage
      summary: Example of put operation for DepositMessage
      description: "All values that can be sent in a deposit message.  Contains message context, deposit filter and a deposit list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: putDepositMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: DepositMessage
        description: DepositMessage Specification
        required: true
        schema:
          $ref: '#/definitions/DepositMessage'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_18'
  /DepositMessage/Delete:
    post:
      tags:
      - DepositMessage
      summary: Example of delete operation for DepositMessage
      description: "All values that can be sent in a deposit message.  Contains message context, deposit filter and a deposit list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: deleteDepositMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: DepositMessage
        description: DepositMessage Specification
        required: true
        schema:
          $ref: '#/definitions/DepositMessage_2'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_18'
  /DepositMessage/Get:
    post:
      tags:
      - DepositMessage
      summary: Example of get operation for DepositMessage
      description: "All values that can be sent in a deposit message.  Contains message context, deposit filter and a deposit list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: getDepositMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: DepositMessage
        description: DepositMessage Specification
        required: true
        schema:
          $ref: '#/definitions/DepositMessage_3'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_18'
  /DocumentMessage:
    post:
      tags:
      - DocumentMessage
      summary: Example of post operation for DocumentMessage
      description: "All values that can be sent in a document message.  Contains message context, document filter and a document list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: postDocumentMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: DocumentMessage
        description: DocumentMessage Specification
        required: true
        schema:
          $ref: '#/definitions/DocumentMessage_1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_19'
    put:
      tags:
      - DocumentMessage
      summary: Example of put operation for DocumentMessage
      description: "All values that can be sent in a document message.  Contains message context, document filter and a document list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: putDocumentMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: DocumentMessage
        description: DocumentMessage Specification
        required: true
        schema:
          $ref: '#/definitions/DocumentMessage'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_19'
  /DocumentMessage/Delete:
    post:
      tags:
      - DocumentMessage
      summary: Example of delete operation for DocumentMessage
      description: "All values that can be sent in a document message.  Contains message context, document filter and a document list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: deleteDocumentMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: DocumentMessage
        description: DocumentMessage Specification
        required: true
        schema:
          $ref: '#/definitions/DocumentMessage_2'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_19'
  /DocumentMessage/Get:
    post:
      tags:
      - DocumentMessage
      summary: Example of get operation for DocumentMessage
      description: "All values that can be sent in a document message.  Contains message context, document filter and a document list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: getDocumentMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: DocumentMessage
        description: DocumentMessage Specification
        required: true
        schema:
          $ref: '#/definitions/DocumentMessage_3'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_19'
  /EligibilityRequirementMessage:
    post:
      tags:
      - EligibilityRequirementMessage
      summary: Example of post operation for EligibilityRequirementMessage
      description: "All values that can be sent in an eligibility requirement message.  Contains message context, eligibility requirement filter and an eligibility requirement list.  This is a wrapper used to more easily serialize the complete message. All values are optional.  See example specifications for usage. "
      operationId: postEligibilityRequirementMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: EligibilityRequirementMessage
        description: EligibilityRequirementMessage Specification
        required: true
        schema:
          $ref: '#/definitions/EligibilityRequirementMessage_1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_20'
    put:
      tags:
      - EligibilityRequirementMessage
      summary: Example of put operation for EligibilityRequirementMessage
      description: "All values that can be sent in an eligibility requirement message.  Contains message context, eligibility requirement filter and an eligibility requirement list.  This is a wrapper used to more easily serialize the complete message. All values are optional.  See example specifications for usage. "
      operationId: putEligibilityRequirementMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: EligibilityRequirementMessage
        description: EligibilityRequirementMessage Specification
        required: true
        schema:
          $ref: '#/definitions/EligibilityRequirementMessage'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_20'
  /EligibilityRequirementMessage/Delete:
    post:
      tags:
      - EligibilityRequirementMessage
      summary: Example of delete operation for EligibilityRequirementMessage
      description: "All values that can be sent in an eligibility requirement message.  Contains message context, eligibility requirement filter and an eligibility requirement list.  This is a wrapper used to more easily serialize the complete message. All values are optional.  See example specifications for usage. "
      operationId: deleteEligibilityRequirementMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: EligibilityRequirementMessage
        description: EligibilityRequirementMessage Specification
        required: true
        schema:
          $ref: '#/definitions/EligibilityRequirementMessage_2'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_20'
  /EligibilityRequirementMessage/Get:
    post:
      tags:
      - EligibilityRequirementMessage
      summary: Example of get operation for EligibilityRequirementMessage
      description: "All values that can be sent in an eligibility requirement message.  Contains message context, eligibility requirement filter and an eligibility requirement list.  This is a wrapper used to more easily serialize the complete message. All values are optional.  See example specifications for usage. "
      operationId: getEligibilityRequirementMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: EligibilityRequirementMessage
        description: EligibilityRequirementMessage Specification
        required: true
        schema:
          $ref: '#/definitions/EligibilityRequirementMessage_3'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_20'
  /FeeScheduleMessage:
    post:
      tags:
      - FeeScheduleMessage
      summary: Example of post operation for FeeScheduleMessage
      description: "All values that can be sent in a fee schedule message.  Contains message context, fee schedule filter and a fee list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: postFeeScheduleMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: FeeScheduleMessage
        description: FeeScheduleMessage Specification
        required: true
        schema:
          $ref: '#/definitions/FeeScheduleMessage_1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_21'
    put:
      tags:
      - FeeScheduleMessage
      summary: Example of put operation for FeeScheduleMessage
      description: "All values that can be sent in a fee schedule message.  Contains message context, fee schedule filter and a fee list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: putFeeScheduleMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: FeeScheduleMessage
        description: FeeScheduleMessage Specification
        required: true
        schema:
          $ref: '#/definitions/FeeScheduleMessage'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_21'
  /FeeScheduleMessage/Delete:
    post:
      tags:
      - FeeScheduleMessage
      summary: Example of delete operation for FeeScheduleMessage
      description: "All values that can be sent in a fee schedule message.  Contains message context, fee schedule filter and a fee list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: deleteFeeScheduleMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: FeeScheduleMessage
        description: FeeScheduleMessage Specification
        required: true
        schema:
          $ref: '#/definitions/FeeScheduleMessage_2'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_21'
  /FeeScheduleMessage/Get:
    post:
      tags:
      - FeeScheduleMessage
      summary: Example of get operation for FeeScheduleMessage
      description: "All values that can be sent in a fee schedule message.  Contains message context, fee schedule filter and a fee list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: getFeeScheduleMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: FeeScheduleMessage
        description: FeeScheduleMessage Specification
        required: true
        schema:
          $ref: '#/definitions/FeeScheduleMessage_3'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_21'
  /FieldMessage:
    post:
      tags:
      - FieldMessage
      summary: Example of post operation for FieldMessage
      description: "All values that can be sent in an field message.  Contains message context, field filter and field list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: postFieldMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: FieldMessage
        description: FieldMessage Specification
        required: true
        schema:
          $ref: '#/definitions/FieldMessage_1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_22'
    put:
      tags:
      - FieldMessage
      summary: Example of put operation for FieldMessage
      description: "All values that can be sent in an field message.  Contains message context, field filter and field list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: putFieldMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: FieldMessage
        description: FieldMessage Specification
        required: true
        schema:
          $ref: '#/definitions/FieldMessage'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_22'
  /FieldMessage/Delete:
    post:
      tags:
      - FieldMessage
      summary: Example of delete operation for FieldMessage
      description: "All values that can be sent in an field message.  Contains message context, field filter and field list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: deleteFieldMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: FieldMessage
        description: FieldMessage Specification
        required: true
        schema:
          $ref: '#/definitions/FieldMessage_2'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_22'
  /FieldMessage/Get:
    post:
      tags:
      - FieldMessage
      summary: Example of get operation for FieldMessage
      description: "All values that can be sent in an field message.  Contains message context, field filter and field list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: getFieldMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: FieldMessage
        description: FieldMessage Specification
        required: true
        schema:
          $ref: '#/definitions/FieldMessage_3'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_22'
  /FinancialInstitutionMessage:
    post:
      tags:
      - FinancialInstitutionMessage
      summary: Example of post operation for FinancialInstitutionMessage
      description: "All values that can be sent in a financial institution message.  Contains message context, financial institution filter and a financial institution list.   This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: postFinancialInstitutionMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: FinancialInstitutionMessage
        description: FinancialInstitutionMessage Specification
        required: true
        schema:
          $ref: '#/definitions/FinancialInstitutionMessage_1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_23'
    put:
      tags:
      - FinancialInstitutionMessage
      summary: Example of put operation for FinancialInstitutionMessage
      description: "All values that can be sent in a financial institution message.  Contains message context, financial institution filter and a financial institution list.   This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: putFinancialInstitutionMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: FinancialInstitutionMessage
        description: FinancialInstitutionMessage Specification
        required: true
        schema:
          $ref: '#/definitions/FinancialInstitutionMessage'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_23'
  /FinancialInstitutionMessage/Delete:
    post:
      tags:
      - FinancialInstitutionMessage
      summary: Example of delete operation for FinancialInstitutionMessage
      description: "All values that can be sent in a financial institution message.  Contains message context, financial institution filter and a financial institution list.   This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: deleteFinancialInstitutionMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: FinancialInstitutionMessage
        description: FinancialInstitutionMessage Specification
        required: true
        schema:
          $ref: '#/definitions/FinancialInstitutionMessage_2'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_23'
  /FinancialInstitutionMessage/Get:
    post:
      tags:
      - FinancialInstitutionMessage
      summary: Example of get operation for FinancialInstitutionMessage
      description: "All values that can be sent in a financial institution message.  Contains message context, financial institution filter and a financial institution list.   This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: getFinancialInstitutionMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: FinancialInstitutionMessage
        description: FinancialInstitutionMessage Specification
        required: true
        schema:
          $ref: '#/definitions/FinancialInstitutionMessage_3'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_23'
  /HoldMessage:
    post:
      tags:
      - HoldMessage
      summary: Example of post operation for HoldMessage
      description: "All values that can be sent in a Hold message.  Contains message context, hold filter and a hold list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: postHoldMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: HoldMessage
        description: HoldMessage Specification
        required: true
        schema:
          $ref: '#/definitions/HoldMessage_1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_24'
    put:
      tags:
      - HoldMessage
      summary: Example of put operation for HoldMessage
      description: "All values that can be sent in a Hold message.  Contains message context, hold filter and a hold list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: putHoldMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: HoldMessage
        description: HoldMessage Specification
        required: true
        schema:
          $ref: '#/definitions/HoldMessage'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_24'
  /HoldMessage/Delete:
    post:
      tags:
      - HoldMessage
      summary: Example of delete operation for HoldMessage
      description: "All values that can be sent in a Hold message.  Contains message context, hold filter and a hold list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: deleteHoldMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: HoldMessage
        description: HoldMessage Specification
        required: true
        schema:
          $ref: '#/definitions/HoldMessage_2'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_24'
  /HoldMessage/Get:
    post:
      tags:
      - HoldMessage
      summary: Example of get operation for HoldMessage
      description: "All values that can be sent in a Hold message.  Contains message context, hold filter and a hold list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: getHoldMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: HoldMessage
        description: HoldMessage Specification
        required: true
        schema:
          $ref: '#/definitions/HoldMessage_3'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_24'
  /InvestmentHoldingMessage:
    post:
      tags:
      - InvestmentHoldingMessage
      summary: Example of post operation for InvestmentHoldingMessage
      description: "All values that can be sent in a investment holding message.  Contains message context, investmentHolding filter and a investment holding list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: postInvestmentHoldingMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: InvestmentHoldingMessage
        description: InvestmentHoldingMessage Specification
        required: true
        schema:
          $ref: '#/definitions/InvestmentHoldingMessage_1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_25'
    put:
      tags:
      - InvestmentHoldingMessage
      summary: Example of put operation for InvestmentHoldingMessage
      description: "All values that can be sent in a investment holding message.  Contains message context, investmentHolding filter and a investment holding list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: putInvestmentHoldingMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: InvestmentHoldingMessage
        description: InvestmentHoldingMessage Specification
        required: true
        schema:
          $ref: '#/definitions/InvestmentHoldingMessage'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_25'
  /InvestmentHoldingMessage/Delete:
    post:
      tags:
      - InvestmentHoldingMessage
      summary: Example of delete operation for InvestmentHoldingMessage
      description: "All values that can be sent in a investment holding message.  Contains message context, investmentHolding filter and a investment holding list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: deleteInvestmentHoldingMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: InvestmentHoldingMessage
        description: InvestmentHoldingMessage Specification
        required: true
        schema:
          $ref: '#/definitions/InvestmentHoldingMessage_2'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_25'
  /InvestmentHoldingMessage/Get:
    post:
      tags:
      - InvestmentHoldingMessage
      summary: Example of get operation for InvestmentHoldingMessage
      description: "All values that can be sent in a investment holding message.  Contains message context, investmentHolding filter and a investment holding list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: getInvestmentHoldingMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: InvestmentHoldingMessage
        description: InvestmentHoldingMessage Specification
        required: true
        schema:
          $ref: '#/definitions/InvestmentHoldingMessage_3'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_25'
  /InvestmentMessage:
    post:
      tags:
      - InvestmentMessage
      summary: Example of post operation for InvestmentMessage
      description: "All values that can be sent in a investment message.  Contains message context, investment filter and a investment list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: postInvestmentMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: InvestmentMessage
        description: InvestmentMessage Specification
        required: true
        schema:
          $ref: '#/definitions/InvestmentMessage_1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_26'
    put:
      tags:
      - InvestmentMessage
      summary: Example of put operation for InvestmentMessage
      description: "All values that can be sent in a investment message.  Contains message context, investment filter and a investment list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: putInvestmentMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: InvestmentMessage
        description: InvestmentMessage Specification
        required: true
        schema:
          $ref: '#/definitions/InvestmentMessage'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_26'
  /InvestmentMessage/Delete:
    post:
      tags:
      - InvestmentMessage
      summary: Example of delete operation for InvestmentMessage
      description: "All values that can be sent in a investment message.  Contains message context, investment filter and a investment list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: deleteInvestmentMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: InvestmentMessage
        description: InvestmentMessage Specification
        required: true
        schema:
          $ref: '#/definitions/InvestmentMessage_2'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_26'
  /InvestmentMessage/Get:
    post:
      tags:
      - InvestmentMessage
      summary: Example of get operation for InvestmentMessage
      description: "All values that can be sent in a investment message.  Contains message context, investment filter and a investment list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: getInvestmentMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: InvestmentMessage
        description: InvestmentMessage Specification
        required: true
        schema:
          $ref: '#/definitions/InvestmentMessage_3'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_26'
  /LoanDisbursementMessage:
    post:
      tags:
      - LoanDisbursementMessage
      summary: Example of post operation for LoanDisbursementMessage
      description: 'All values that can be sent in a loan disbursement message.  Contains message context and a loan disbursement list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. '
      operationId: postLoanDisbursementMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: LoanDisbursementMessage
        description: LoanDisbursementMessage Specification
        required: true
        schema:
          $ref: '#/definitions/LoanDisbursementMessage_1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_27'
    put:
      tags:
      - LoanDisbursementMessage
      summary: Example of put operation for LoanDisbursementMessage
      description: 'All values that can be sent in a loan disbursement message.  Contains message context and a loan disbursement list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. '
      operationId: putLoanDisbursementMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: LoanDisbursementMessage
        description: LoanDisbursementMessage Specification
        required: true
        schema:
          $ref: '#/definitions/LoanDisbursementMessage'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_27'
  /LoanDisbursementMessage/Delete:
    post:
      tags:
      - LoanDisbursementMessage
      summary: Example of delete operation for LoanDisbursementMessage
      description: 'All values that can be sent in a loan disbursement message.  Contains message context and a loan disbursement list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. '
      operationId: deleteLoanDisbursementMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: LoanDisbursementMessage
        description: LoanDisbursementMessage Specification
        required: true
        schema:
          $ref: '#/definitions/LoanDisbursementMessage_2'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_27'
  /LoanDisbursementMessage/Get:
    post:
      tags:
      - LoanDisbursementMessage
      summary: Example of get operation for LoanDisbursementMessage
      description: 'All values that can be sent in a loan disbursement message.  Contains message context and a loan disbursement list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. '
      operationId: getLoanDisbursementMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: LoanDisbursementMessage
        description: LoanDisbursementMessage Specification
        required: true
        schema:
          $ref: '#/definitions/LoanDisbursementMessage_3'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_27'
  /LoanMessage:
    post:
      tags:
      - LoanMessage
      summary: Example of post operation for LoanMessage
      description: "All values that can be sent in a loan message.  Contains message context, loan filter and a loan list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: postLoanMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: LoanMessage
        description: LoanMessage Specification
        required: true
        schema:
          $ref: '#/definitions/LoanMessage_1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_28'
    put:
      tags:
      - LoanMessage
      summary: Example of put operation for LoanMessage
      description: "All values that can be sent in a loan message.  Contains message context, loan filter and a loan list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: putLoanMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: LoanMessage
        description: LoanMessage Specification
        required: true
        schema:
          $ref: '#/definitions/LoanMessage'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_28'
  /LoanMessage/Delete:
    post:
      tags:
      - LoanMessage
      summary: Example of delete operation for LoanMessage
      description: "All values that can be sent in a loan message.  Contains message context, loan filter and a loan list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: deleteLoanMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: LoanMessage
        description: LoanMessage Specification
        required: true
        schema:
          $ref: '#/definitions/LoanMessage_2'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_28'
  /LoanMessage/Get:
    post:
      tags:
      - LoanMessage
      summary: Example of get operation for LoanMessage
      description: "All values that can be sent in a loan message.  Contains message context, loan filter and a loan list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: getLoanMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: LoanMessage
        description: LoanMessage Specification
        required: true
        schema:
          $ref: '#/definitions/LoanMessage_3'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_28'
  /LocationMessage:
    post:
      tags:
      - LocationMessage
      summary: Example of post operation for LocationMessage
      description: "All values that can be sent in a location message.  Contains message context, location filter and a location list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: postLocationMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: LocationMessage
        description: LocationMessage Specification
        required: true
        schema:
          $ref: '#/definitions/LocationMessage_1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_29'
    put:
      tags:
      - LocationMessage
      summary: Example of put operation for LocationMessage
      description: "All values that can be sent in a location message.  Contains message context, location filter and a location list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: putLocationMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: LocationMessage
        description: LocationMessage Specification
        required: true
        schema:
          $ref: '#/definitions/LocationMessage'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_29'
  /LocationMessage/Delete:
    post:
      tags:
      - LocationMessage
      summary: Example of delete operation for LocationMessage
      description: "All values that can be sent in a location message.  Contains message context, location filter and a location list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: deleteLocationMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: LocationMessage
        description: LocationMessage Specification
        required: true
        schema:
          $ref: '#/definitions/LocationMessage_2'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_29'
  /LocationMessage/Get:
    post:
      tags:
      - LocationMessage
      summary: Example of get operation for LocationMessage
      description: "All values that can be sent in a location message.  Contains message context, location filter and a location list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: getLocationMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: LocationMessage
        description: LocationMessage Specification
        required: true
        schema:
          $ref: '#/definitions/LocationMessage_3'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_29'
  /MicroDepositFundingMessage:
    post:
      tags:
      - MicroDepositFundingMessage
      summary: Example of post operation for MicroDepositFundingMessage
      description: "All values that can be sent in a microdeposit funding message.  Contains message context, microdeposit funding filter and a microdeposit funding list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: postMicroDepositFundingMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: MicroDepositFundingMessage
        description: MicroDepositFundingMessage Specification
        required: true
        schema:
          $ref: '#/definitions/MicroDepositFundingMessage_1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_30'
    put:
      tags:
      - MicroDepositFundingMessage
      summary: Example of put operation for MicroDepositFundingMessage
      description: "All values that can be sent in a microdeposit funding message.  Contains message context, microdeposit funding filter and a microdeposit funding list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: putMicroDepositFundingMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: MicroDepositFundingMessage
        description: MicroDepositFundingMessage Specification
        required: true
        schema:
          $ref: '#/definitions/MicroDepositFundingMessage'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_30'
  /MicroDepositFundingMessage/Delete:
    post:
      tags:
      - MicroDepositFundingMessage
      summary: Example of delete operation for MicroDepositFundingMessage
      description: "All values that can be sent in a microdeposit funding message.  Contains message context, microdeposit funding filter and a microdeposit funding list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: deleteMicroDepositFundingMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: MicroDepositFundingMessage
        description: MicroDepositFundingMessage Specification
        required: true
        schema:
          $ref: '#/definitions/MicroDepositFundingMessage_2'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_30'
  /MicroDepositFundingMessage/Get:
    post:
      tags:
      - MicroDepositFundingMessage
      summary: Example of get operation for MicroDepositFundingMessage
      description: "All values that can be sent in a microdeposit funding message.  Contains message context, microdeposit funding filter and a microdeposit funding list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: getMicroDepositFundingMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: MicroDepositFundingMessage
        description: MicroDepositFundingMessage Specification
        required: true
        schema:
          $ref: '#/definitions/MicroDepositFundingMessage_3'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_30'
  /NetworkNodeMessage:
    post:
      tags:
      - NetworkNodeMessage
      summary: Example of post operation for NetworkNodeMessage
      description: "All values that can be sent in an NetworkNode message.  Contains message context, NetworkNode filter and an NetworkNode list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: postNetworkNodeMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: NetworkNodeMessage
        description: NetworkNodeMessage Specification
        required: true
        schema:
          $ref: '#/definitions/NetworkNodeMessage_1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_31'
    put:
      tags:
      - NetworkNodeMessage
      summary: Example of put operation for NetworkNodeMessage
      description: "All values that can be sent in an NetworkNode message.  Contains message context, NetworkNode filter and an NetworkNode list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: putNetworkNodeMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: NetworkNodeMessage
        description: NetworkNodeMessage Specification
        required: true
        schema:
          $ref: '#/definitions/NetworkNodeMessage'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_31'
  /NetworkNodeMessage/Delete:
    post:
      tags:
      - NetworkNodeMessage
      summary: Example of delete operation for NetworkNodeMessage
      description: "All values that can be sent in an NetworkNode message.  Contains message context, NetworkNode filter and an NetworkNode list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: deleteNetworkNodeMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: NetworkNodeMessage
        description: NetworkNodeMessage Specification
        required: true
        schema:
          $ref: '#/definitions/NetworkNodeMessage_2'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_31'
  /NetworkNodeMessage/Get:
    post:
      tags:
      - NetworkNodeMessage
      summary: Example of get operation for NetworkNodeMessage
      description: "All values that can be sent in an NetworkNode message.  Contains message context, NetworkNode filter and an NetworkNode list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: getNetworkNodeMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: NetworkNodeMessage
        description: NetworkNodeMessage Specification
        required: true
        schema:
          $ref: '#/definitions/NetworkNodeMessage_3'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_31'
  /NoteMessage:
    post:
      tags:
      - NoteMessage
      summary: Example of post operation for NoteMessage
      description: "All values that can be sent in a note message.  Contains message context, note filter and a note list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: postNoteMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: NoteMessage
        description: NoteMessage Specification
        required: true
        schema:
          $ref: '#/definitions/NoteMessage_1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_32'
    put:
      tags:
      - NoteMessage
      summary: Example of put operation for NoteMessage
      description: "All values that can be sent in a note message.  Contains message context, note filter and a note list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: putNoteMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: NoteMessage
        description: NoteMessage Specification
        required: true
        schema:
          $ref: '#/definitions/NoteMessage'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_32'
  /NoteMessage/Delete:
    post:
      tags:
      - NoteMessage
      summary: Example of delete operation for NoteMessage
      description: "All values that can be sent in a note message.  Contains message context, note filter and a note list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: deleteNoteMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: NoteMessage
        description: NoteMessage Specification
        required: true
        schema:
          $ref: '#/definitions/NoteMessage_2'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_32'
  /NoteMessage/Get:
    post:
      tags:
      - NoteMessage
      summary: Example of get operation for NoteMessage
      description: "All values that can be sent in a note message.  Contains message context, note filter and a note list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: getNoteMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: NoteMessage
        description: NoteMessage Specification
        required: true
        schema:
          $ref: '#/definitions/NoteMessage_3'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_32'
  /OverdraftPriorityMessage:
    post:
      tags:
      - OverdraftPriorityMessage
      summary: Example of post operation for OverdraftPriorityMessage
      description: "All values that can be sent in an overdraft priority message.  Contains message context, overdraft priority filter and an overdraft priority list.  This is a wrapper used to more easily serialize the complete message.  All values are optional. See example specifications for usage. "
      operationId: postOverdraftPriorityMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: OverdraftPriorityMessage
        description: OverdraftPriorityMessage Specification
        required: true
        schema:
          $ref: '#/definitions/OverdraftPriorityMessage_1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_33'
    put:
      tags:
      - OverdraftPriorityMessage
      summary: Example of put operation for OverdraftPriorityMessage
      description: "All values that can be sent in an overdraft priority message.  Contains message context, overdraft priority filter and an overdraft priority list.  This is a wrapper used to more easily serialize the complete message.  All values are optional. See example specifications for usage. "
      operationId: putOverdraftPriorityMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: OverdraftPriorityMessage
        description: OverdraftPriorityMessage Specification
        required: true
        schema:
          $ref: '#/definitions/OverdraftPriorityMessage'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_33'
  /OverdraftPriorityMessage/Delete:
    post:
      tags:
      - OverdraftPriorityMessage
      summary: Example of delete operation for OverdraftPriorityMessage
      description: "All values that can be sent in an overdraft priority message.  Contains message context, overdraft priority filter and an overdraft priority list.  This is a wrapper used to more easily serialize the complete message.  All values are optional. See example specifications for usage. "
      operationId: deleteOverdraftPriorityMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: OverdraftPriorityMessage
        description: OverdraftPriorityMessage Specification
        required: true
        schema:
          $ref: '#/definitions/OverdraftPriorityMessage_2'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_33'
  /OverdraftPriorityMessage/Get:
    post:
      tags:
      - OverdraftPriorityMessage
      summary: Example of get operation for OverdraftPriorityMessage
      description: "All values that can be sent in an overdraft priority message.  Contains message context, overdraft priority filter and an overdraft priority list.  This is a wrapper used to more easily serialize the complete message.  All values are optional. See example specifications for usage. "
      operationId: getOverdraftPriorityMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: OverdraftPriorityMessage
        description: OverdraftPriorityMessage Specification
        required: true
        schema:
          $ref: '#/definitions/OverdraftPriorityMessage_3'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_33'
  /PartyAssociationMessage:
    post:
      tags:
      - PartyAssociationMessage
      summary: Example of post operation for PartyAssociationMessage
      description: "All values that can be sent in a party association message.  Contains message context, party association filter and a party association list. This is a wrapper used to more easily serialize the complete message. All values are optional.  See example specifications for usage. "
      operationId: postPartyAssociationMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: PartyAssociationMessage
        description: PartyAssociationMessage Specification
        required: true
        schema:
          $ref: '#/definitions/PartyAssociationMessage_1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_34'
    put:
      tags:
      - PartyAssociationMessage
      summary: Example of put operation for PartyAssociationMessage
      description: "All values that can be sent in a party association message.  Contains message context, party association filter and a party association list. This is a wrapper used to more easily serialize the complete message. All values are optional.  See example specifications for usage. "
      operationId: putPartyAssociationMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: PartyAssociationMessage
        description: PartyAssociationMessage Specification
        required: true
        schema:
          $ref: '#/definitions/PartyAssociationMessage'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_34'
  /PartyAssociationMessage/Delete:
    post:
      tags:
      - PartyAssociationMessage
      summary: Example of delete operation for PartyAssociationMessage
      description: "All values that can be sent in a party association message.  Contains message context, party association filter and a party association list. This is a wrapper used to more easily serialize the complete message. All values are optional.  See example specifications for usage. "
      operationId: deletePartyAssociationMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: PartyAssociationMessage
        description: PartyAssociationMessage Specification
        required: true
        schema:
          $ref: '#/definitions/PartyAssociationMessage_2'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_34'
  /PartyAssociationMessage/Get:
    post:
      tags:
      - PartyAssociationMessage
      summary: Example of get operation for PartyAssociationMessage
      description: "All values that can be sent in a party association message.  Contains message context, party association filter and a party association list. This is a wrapper used to more easily serialize the complete message. All values are optional.  See example specifications for usage. "
      operationId: getPartyAssociationMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: PartyAssociationMessage
        description: PartyAssociationMessage Specification
        required: true
        schema:
          $ref: '#/definitions/PartyAssociationMessage_3'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_34'
  /PartyMessage:
    post:
      tags:
      - PartyMessage
      summary: Example of post operation for PartyMessage
      description: "All values that can be sent in a party message.  Contains message context, party filter and a party list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: postPartyMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: PartyMessage
        description: PartyMessage Specification
        required: true
        schema:
          $ref: '#/definitions/PartyMessage_1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_35'
    put:
      tags:
      - PartyMessage
      summary: Example of put operation for PartyMessage
      description: "All values that can be sent in a party message.  Contains message context, party filter and a party list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: putPartyMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: PartyMessage
        description: PartyMessage Specification
        required: true
        schema:
          $ref: '#/definitions/PartyMessage'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_35'
  /PartyMessage/Delete:
    post:
      tags:
      - PartyMessage
      summary: Example of delete operation for PartyMessage
      description: "All values that can be sent in a party message.  Contains message context, party filter and a party list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: deletePartyMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: PartyMessage
        description: PartyMessage Specification
        required: true
        schema:
          $ref: '#/definitions/PartyMessage_2'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_35'
  /PartyMessage/Get:
    post:
      tags:
      - PartyMessage
      summary: Example of get operation for PartyMessage
      description: "All values that can be sent in a party message.  Contains message context, party filter and a party list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: getPartyMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: PartyMessage
        description: PartyMessage Specification
        required: true
        schema:
          $ref: '#/definitions/PartyMessage_3'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_35'
  /PermissionListMessage:
    post:
      tags:
      - PermissionListMessage
      summary: Example of post operation for PermissionListMessage
      description: "All values that can be sent in a permission list message.  Contains message context, permission list filter and a permission list.  This is a wrapper used to more easily serialize the complete message.  All values are optional. See example specifications for usage. "
      operationId: postPermissionListMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: PermissionListMessage
        description: PermissionListMessage Specification
        required: true
        schema:
          $ref: '#/definitions/PermissionListMessage_1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_36'
    put:
      tags:
      - PermissionListMessage
      summary: Example of put operation for PermissionListMessage
      description: "All values that can be sent in a permission list message.  Contains message context, permission list filter and a permission list.  This is a wrapper used to more easily serialize the complete message.  All values are optional. See example specifications for usage. "
      operationId: putPermissionListMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: PermissionListMessage
        description: PermissionListMessage Specification
        required: true
        schema:
          $ref: '#/definitions/PermissionListMessage'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_36'
  /PermissionListMessage/Delete:
    post:
      tags:
      - PermissionListMessage
      summary: Example of delete operation for PermissionListMessage
      description: "All values that can be sent in a permission list message.  Contains message context, permission list filter and a permission list.  This is a wrapper used to more easily serialize the complete message.  All values are optional. See example specifications for usage. "
      operationId: deletePermissionListMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: PermissionListMessage
        description: PermissionListMessage Specification
        required: true
        schema:
          $ref: '#/definitions/PermissionListMessage_2'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_36'
  /PermissionListMessage/Get:
    post:
      tags:
      - PermissionListMessage
      summary: Example of get operation for PermissionListMessage
      description: "All values that can be sent in a permission list message.  Contains message context, permission list filter and a permission list.  This is a wrapper used to more easily serialize the complete message.  All values are optional. See example specifications for usage. "
      operationId: getPermissionListMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: PermissionListMessage
        description: PermissionListMessage Specification
        required: true
        schema:
          $ref: '#/definitions/PermissionListMessage_3'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_36'
  /PreferenceMessage:
    post:
      tags:
      - PreferenceMessage
      summary: Example of post operation for PreferenceMessage
      description: "All values that can be sent in a preference message.  Contains message context, preference filter and a preference list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: postPreferenceMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: PreferenceMessage
        description: PreferenceMessage Specification
        required: true
        schema:
          $ref: '#/definitions/PreferenceMessage_1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_37'
    put:
      tags:
      - PreferenceMessage
      summary: Example of put operation for PreferenceMessage
      description: "All values that can be sent in a preference message.  Contains message context, preference filter and a preference list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: putPreferenceMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: PreferenceMessage
        description: PreferenceMessage Specification
        required: true
        schema:
          $ref: '#/definitions/PreferenceMessage'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_37'
  /PreferenceMessage/Delete:
    post:
      tags:
      - PreferenceMessage
      summary: Example of delete operation for PreferenceMessage
      description: "All values that can be sent in a preference message.  Contains message context, preference filter and a preference list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: deletePreferenceMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: PreferenceMessage
        description: PreferenceMessage Specification
        required: true
        schema:
          $ref: '#/definitions/PreferenceMessage_2'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_37'
  /PreferenceMessage/Get:
    post:
      tags:
      - PreferenceMessage
      summary: Example of get operation for PreferenceMessage
      description: "All values that can be sent in a preference message.  Contains message context, preference filter and a preference list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: getPreferenceMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: PreferenceMessage
        description: PreferenceMessage Specification
        required: true
        schema:
          $ref: '#/definitions/PreferenceMessage_3'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_37'
  /ProductOfferingMessage:
    post:
      tags:
      - ProductOfferingMessage
      summary: Example of post operation for ProductOfferingMessage
      description: "All values that can be sent in a product offering message.  Contains message context, product offering filter and a product offering list.  This is a wrapper used to more easily serialize the complete message.  All values are optional. See example specifications for usage. "
      operationId: postProductOfferingMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: ProductOfferingMessage
        description: ProductOfferingMessage Specification
        required: true
        schema:
          $ref: '#/definitions/ProductOfferingMessage_1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_38'
    put:
      tags:
      - ProductOfferingMessage
      summary: Example of put operation for ProductOfferingMessage
      description: "All values that can be sent in a product offering message.  Contains message context, product offering filter and a product offering list.  This is a wrapper used to more easily serialize the complete message.  All values are optional. See example specifications for usage. "
      operationId: putProductOfferingMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: ProductOfferingMessage
        description: ProductOfferingMessage Specification
        required: true
        schema:
          $ref: '#/definitions/ProductOfferingMessage'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_38'
  /ProductOfferingMessage/Delete:
    post:
      tags:
      - ProductOfferingMessage
      summary: Example of delete operation for ProductOfferingMessage
      description: "All values that can be sent in a product offering message.  Contains message context, product offering filter and a product offering list.  This is a wrapper used to more easily serialize the complete message.  All values are optional. See example specifications for usage. "
      operationId: deleteProductOfferingMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: ProductOfferingMessage
        description: ProductOfferingMessage Specification
        required: true
        schema:
          $ref: '#/definitions/ProductOfferingMessage_2'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_38'
  /ProductOfferingMessage/Get:
    post:
      tags:
      - ProductOfferingMessage
      summary: Example of get operation for ProductOfferingMessage
      description: "All values that can be sent in a product offering message.  Contains message context, product offering filter and a product offering list.  This is a wrapper used to more easily serialize the complete message.  All values are optional. See example specifications for usage. "
      operationId: getProductOfferingMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: ProductOfferingMessage
        description: ProductOfferingMessage Specification
        required: true
        schema:
          $ref: '#/definitions/ProductOfferingMessage_3'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_38'
  /ProductServiceEnrollmentMessage:
    post:
      tags:
      - ProductServiceEnrollmentMessage
      summary: Example of post operation for ProductServiceEnrollmentMessage
      description: "All values that can be sent in a product offering message.  Contains message context, product offering filter and a product offering list.  This is a wrapper used to more easily serialize the complete message.  All values are optional. See example specifications for usage. "
      operationId: postProductServiceEnrollmentMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: ProductServiceEnrollmentMessage
        description: ProductServiceEnrollmentMessage Specification
        required: true
        schema:
          $ref: '#/definitions/ProductServiceEnrollmentMessage_1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_39'
    put:
      tags:
      - ProductServiceEnrollmentMessage
      summary: Example of put operation for ProductServiceEnrollmentMessage
      description: "All values that can be sent in a product offering message.  Contains message context, product offering filter and a product offering list.  This is a wrapper used to more easily serialize the complete message.  All values are optional. See example specifications for usage. "
      operationId: putProductServiceEnrollmentMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: ProductServiceEnrollmentMessage
        description: ProductServiceEnrollmentMessage Specification
        required: true
        schema:
          $ref: '#/definitions/ProductServiceEnrollmentMessage'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_39'
  /ProductServiceEnrollmentMessage/Delete:
    post:
      tags:
      - ProductServiceEnrollmentMessage
      summary: Example of delete operation for ProductServiceEnrollmentMessage
      description: "All values that can be sent in a product offering message.  Contains message context, product offering filter and a product offering list.  This is a wrapper used to more easily serialize the complete message.  All values are optional. See example specifications for usage. "
      operationId: deleteProductServiceEnrollmentMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: ProductServiceEnrollmentMessage
        description: ProductServiceEnrollmentMessage Specification
        required: true
        schema:
          $ref: '#/definitions/ProductServiceEnrollmentMessage_2'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_39'
  /ProductServiceEnrollmentMessage/Get:
    post:
      tags:
      - ProductServiceEnrollmentMessage
      summary: Example of get operation for ProductServiceEnrollmentMessage
      description: "All values that can be sent in a product offering message.  Contains message context, product offering filter and a product offering list.  This is a wrapper used to more easily serialize the complete message.  All values are optional. See example specifications for usage. "
      operationId: getProductServiceEnrollmentMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: ProductServiceEnrollmentMessage
        description: ProductServiceEnrollmentMessage Specification
        required: true
        schema:
          $ref: '#/definitions/ProductServiceEnrollmentMessage_3'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_39'
  /ProductServiceRequestMessage:
    post:
      tags:
      - ProductServiceRequestMessage
      summary: Example of post operation for ProductServiceRequestMessage
      description: "All values that can be sent in a product service request message.  Contains message context, product service request filter and a product service request list.  This is a wrapper used to more easily serialize the complete message. All values are optional.  See example specifications for usage. "
      operationId: postProductServiceRequestMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: ProductServiceRequestMessage
        description: ProductServiceRequestMessage Specification
        required: true
        schema:
          $ref: '#/definitions/ProductServiceRequestMessage_1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_40'
    put:
      tags:
      - ProductServiceRequestMessage
      summary: Example of put operation for ProductServiceRequestMessage
      description: "All values that can be sent in a product service request message.  Contains message context, product service request filter and a product service request list.  This is a wrapper used to more easily serialize the complete message. All values are optional.  See example specifications for usage. "
      operationId: putProductServiceRequestMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: ProductServiceRequestMessage
        description: ProductServiceRequestMessage Specification
        required: true
        schema:
          $ref: '#/definitions/ProductServiceRequestMessage'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_40'
  /ProductServiceRequestMessage/Delete:
    post:
      tags:
      - ProductServiceRequestMessage
      summary: Example of delete operation for ProductServiceRequestMessage
      description: "All values that can be sent in a product service request message.  Contains message context, product service request filter and a product service request list.  This is a wrapper used to more easily serialize the complete message. All values are optional.  See example specifications for usage. "
      operationId: deleteProductServiceRequestMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: ProductServiceRequestMessage
        description: ProductServiceRequestMessage Specification
        required: true
        schema:
          $ref: '#/definitions/ProductServiceRequestMessage_2'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_40'
  /ProductServiceRequestMessage/Get:
    post:
      tags:
      - ProductServiceRequestMessage
      summary: Example of get operation for ProductServiceRequestMessage
      description: "All values that can be sent in a product service request message.  Contains message context, product service request filter and a product service request list.  This is a wrapper used to more easily serialize the complete message. All values are optional.  See example specifications for usage. "
      operationId: getProductServiceRequestMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: ProductServiceRequestMessage
        description: ProductServiceRequestMessage Specification
        required: true
        schema:
          $ref: '#/definitions/ProductServiceRequestMessage_3'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_40'
  /RegisteredDeviceMessage:
    post:
      tags:
      - RegisteredDeviceMessage
      summary: Example of post operation for RegisteredDeviceMessage
      description: 'All values that can be sent in a registered device message.  Contains message context and registered device filter. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. '
      operationId: postRegisteredDeviceMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: RegisteredDeviceMessage
        description: RegisteredDeviceMessage Specification
        required: true
        schema:
          $ref: '#/definitions/RegisteredDeviceMessage_1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_41'
    put:
      tags:
      - RegisteredDeviceMessage
      summary: Example of put operation for RegisteredDeviceMessage
      description: 'All values that can be sent in a registered device message.  Contains message context and registered device filter. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. '
      operationId: putRegisteredDeviceMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: RegisteredDeviceMessage
        description: RegisteredDeviceMessage Specification
        required: true
        schema:
          $ref: '#/definitions/RegisteredDeviceMessage'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_41'
  /RegisteredDeviceMessage/Delete:
    post:
      tags:
      - RegisteredDeviceMessage
      summary: Example of delete operation for RegisteredDeviceMessage
      description: 'All values that can be sent in a registered device message.  Contains message context and registered device filter. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. '
      operationId: deleteRegisteredDeviceMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: RegisteredDeviceMessage
        description: RegisteredDeviceMessage Specification
        required: true
        schema:
          $ref: '#/definitions/RegisteredDeviceMessage_2'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_41'
  /RegisteredDeviceMessage/Get:
    post:
      tags:
      - RegisteredDeviceMessage
      summary: Example of get operation for RegisteredDeviceMessage
      description: 'All values that can be sent in a registered device message.  Contains message context and registered device filter. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. '
      operationId: getRegisteredDeviceMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: RegisteredDeviceMessage
        description: RegisteredDeviceMessage Specification
        required: true
        schema:
          $ref: '#/definitions/RegisteredDeviceMessage_3'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_41'
  /RelationshipMessage:
    post:
      tags:
      - RelationshipMessage
      summary: Example of post operation for RelationshipMessage
      description: "All values that can be sent in an relationship message.  Contains message context, relationship filter and an relationship list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: postRelationshipMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: RelationshipMessage
        description: RelationshipMessage Specification
        required: true
        schema:
          $ref: '#/definitions/RelationshipMessage_1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_42'
    put:
      tags:
      - RelationshipMessage
      summary: Example of put operation for RelationshipMessage
      description: "All values that can be sent in an relationship message.  Contains message context, relationship filter and an relationship list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: putRelationshipMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: RelationshipMessage
        description: RelationshipMessage Specification
        required: true
        schema:
          $ref: '#/definitions/RelationshipMessage'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_42'
  /RelationshipMessage/Delete:
    post:
      tags:
      - RelationshipMessage
      summary: Example of delete operation for RelationshipMessage
      description: "All values that can be sent in an relationship message.  Contains message context, relationship filter and an relationship list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: deleteRelationshipMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: RelationshipMessage
        description: RelationshipMessage Specification
        required: true
        schema:
          $ref: '#/definitions/RelationshipMessage_2'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_42'
  /RelationshipMessage/Get:
    post:
      tags:
      - RelationshipMessage
      summary: Example of get operation for RelationshipMessage
      description: "All values that can be sent in an relationship message.  Contains message context, relationship filter and an relationship list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: getRelationshipMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: RelationshipMessage
        description: RelationshipMessage Specification
        required: true
        schema:
          $ref: '#/definitions/RelationshipMessage_3'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_42'
  /RemoteDepositMessage:
    post:
      tags:
      - RemoteDepositMessage
      summary: Example of post operation for RemoteDepositMessage
      description: 'All values that can be sent in a remote deposit message.  Contains message context and a remote deposit list.  This is a wrapper used to more easily serialize the complete message.  All values are optional. See example specifications for usage. '
      operationId: postRemoteDepositMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: RemoteDepositMessage
        description: RemoteDepositMessage Specification
        required: true
        schema:
          $ref: '#/definitions/RemoteDepositMessage_1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_43'
    put:
      tags:
      - RemoteDepositMessage
      summary: Example of put operation for RemoteDepositMessage
      description: 'All values that can be sent in a remote deposit message.  Contains message context and a remote deposit list.  This is a wrapper used to more easily serialize the complete message.  All values are optional. See example specifications for usage. '
      operationId: putRemoteDepositMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: RemoteDepositMessage
        description: RemoteDepositMessage Specification
        required: true
        schema:
          $ref: '#/definitions/RemoteDepositMessage'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_43'
  /RemoteDepositMessage/Delete:
    post:
      tags:
      - RemoteDepositMessage
      summary: Example of delete operation for RemoteDepositMessage
      description: 'All values that can be sent in a remote deposit message.  Contains message context and a remote deposit list.  This is a wrapper used to more easily serialize the complete message.  All values are optional. See example specifications for usage. '
      operationId: deleteRemoteDepositMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: RemoteDepositMessage
        description: RemoteDepositMessage Specification
        required: true
        schema:
          $ref: '#/definitions/RemoteDepositMessage_2'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_43'
  /RemoteDepositMessage/Get:
    post:
      tags:
      - RemoteDepositMessage
      summary: Example of get operation for RemoteDepositMessage
      description: 'All values that can be sent in a remote deposit message.  Contains message context and a remote deposit list.  This is a wrapper used to more easily serialize the complete message.  All values are optional. See example specifications for usage. '
      operationId: getRemoteDepositMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: RemoteDepositMessage
        description: RemoteDepositMessage Specification
        required: true
        schema:
          $ref: '#/definitions/RemoteDepositMessage_3'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_43'
  /SecureMessageMessage:
    post:
      tags:
      - SecureMessageMessage
      summary: Example of post operation for SecureMessageMessage
      description: "All values that can be sent in a secure message message.  Contains message context, secure message filter and a secure message list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: postSecureMessageMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: SecureMessageMessage
        description: SecureMessageMessage Specification
        required: true
        schema:
          $ref: '#/definitions/SecureMessageMessage_1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_44'
    put:
      tags:
      - SecureMessageMessage
      summary: Example of put operation for SecureMessageMessage
      description: "All values that can be sent in a secure message message.  Contains message context, secure message filter and a secure message list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: putSecureMessageMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: SecureMessageMessage
        description: SecureMessageMessage Specification
        required: true
        schema:
          $ref: '#/definitions/SecureMessageMessage'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_44'
  /SecureMessageMessage/Delete:
    post:
      tags:
      - SecureMessageMessage
      summary: Example of delete operation for SecureMessageMessage
      description: "All values that can be sent in a secure message message.  Contains message context, secure message filter and a secure message list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: deleteSecureMessageMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: SecureMessageMessage
        description: SecureMessageMessage Specification
        required: true
        schema:
          $ref: '#/definitions/SecureMessageMessage_2'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_44'
  /SecureMessageMessage/Get:
    post:
      tags:
      - SecureMessageMessage
      summary: Example of get operation for SecureMessageMessage
      description: "All values that can be sent in a secure message message.  Contains message context, secure message filter and a secure message list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: getSecureMessageMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: SecureMessageMessage
        description: SecureMessageMessage Specification
        required: true
        schema:
          $ref: '#/definitions/SecureMessageMessage_3'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_44'
  /SimpleValidationRequestMessage:
    post:
      tags:
      - SimpleValidationRequestMessage
      summary: Example of post operation for SimpleValidationRequestMessage
      description: 'All values that can be sent in a simple validation request message.  Contains message context and a simple validation request list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. '
      operationId: postSimpleValidationRequestMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: SimpleValidationRequestMessage
        description: SimpleValidationRequestMessage Specification
        required: true
        schema:
          $ref: '#/definitions/SimpleValidationRequestMessage_1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_45'
    put:
      tags:
      - SimpleValidationRequestMessage
      summary: Example of put operation for SimpleValidationRequestMessage
      description: 'All values that can be sent in a simple validation request message.  Contains message context and a simple validation request list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. '
      operationId: putSimpleValidationRequestMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: SimpleValidationRequestMessage
        description: SimpleValidationRequestMessage Specification
        required: true
        schema:
          $ref: '#/definitions/SimpleValidationRequestMessage'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_45'
  /SimpleValidationRequestMessage/Delete:
    post:
      tags:
      - SimpleValidationRequestMessage
      summary: Example of delete operation for SimpleValidationRequestMessage
      description: 'All values that can be sent in a simple validation request message.  Contains message context and a simple validation request list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. '
      operationId: deleteSimpleValidationRequestMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: SimpleValidationRequestMessage
        description: SimpleValidationRequestMessage Specification
        required: true
        schema:
          $ref: '#/definitions/SimpleValidationRequestMessage_2'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_45'
  /SimpleValidationRequestMessage/Get:
    post:
      tags:
      - SimpleValidationRequestMessage
      summary: Example of get operation for SimpleValidationRequestMessage
      description: 'All values that can be sent in a simple validation request message.  Contains message context and a simple validation request list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. '
      operationId: getSimpleValidationRequestMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: SimpleValidationRequestMessage
        description: SimpleValidationRequestMessage Specification
        required: true
        schema:
          $ref: '#/definitions/SimpleValidationRequestMessage_3'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_45'
  /SystemStatusMessage:
    post:
      tags:
      - SystemStatusMessage
      summary: Example of post operation for SystemStatusMessage
      description: "All values that can be sent in an system status message.  Contains message context, system status filter and an system Status list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: postSystemStatusMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: SystemStatusMessage
        description: SystemStatusMessage Specification
        required: true
        schema:
          $ref: '#/definitions/SystemStatusMessage_1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_46'
    put:
      tags:
      - SystemStatusMessage
      summary: Example of put operation for SystemStatusMessage
      description: "All values that can be sent in an system status message.  Contains message context, system status filter and an system Status list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: putSystemStatusMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: SystemStatusMessage
        description: SystemStatusMessage Specification
        required: true
        schema:
          $ref: '#/definitions/SystemStatusMessage'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_46'
  /SystemStatusMessage/Delete:
    post:
      tags:
      - SystemStatusMessage
      summary: Example of delete operation for SystemStatusMessage
      description: "All values that can be sent in an system status message.  Contains message context, system status filter and an system Status list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: deleteSystemStatusMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: SystemStatusMessage
        description: SystemStatusMessage Specification
        required: true
        schema:
          $ref: '#/definitions/SystemStatusMessage_2'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_46'
  /SystemStatusMessage/Get:
    post:
      tags:
      - SystemStatusMessage
      summary: Example of get operation for SystemStatusMessage
      description: "All values that can be sent in an system status message.  Contains message context, system status filter and an system Status list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: getSystemStatusMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: SystemStatusMessage
        description: SystemStatusMessage Specification
        required: true
        schema:
          $ref: '#/definitions/SystemStatusMessage_3'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_46'
  /TransactionMessage:
    post:
      tags:
      - TransactionMessage
      summary: Example of post operation for TransactionMessage
      description: "All values that can be sent in an transaction message.  Contains message context, transaction filter and an transaction list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: postTransactionMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: TransactionMessage
        description: TransactionMessage Specification
        required: true
        schema:
          $ref: '#/definitions/TransactionMessage_1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_47'
    put:
      tags:
      - TransactionMessage
      summary: Example of put operation for TransactionMessage
      description: "All values that can be sent in an transaction message.  Contains message context, transaction filter and an transaction list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: putTransactionMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: TransactionMessage
        description: TransactionMessage Specification
        required: true
        schema:
          $ref: '#/definitions/TransactionMessage'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_47'
  /TransactionMessage/Delete:
    post:
      tags:
      - TransactionMessage
      summary: Example of delete operation for TransactionMessage
      description: "All values that can be sent in an transaction message.  Contains message context, transaction filter and an transaction list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: deleteTransactionMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: TransactionMessage
        description: TransactionMessage Specification
        required: true
        schema:
          $ref: '#/definitions/TransactionMessage_2'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_47'
  /TransactionMessage/Get:
    post:
      tags:
      - TransactionMessage
      summary: Example of get operation for TransactionMessage
      description: "All values that can be sent in an transaction message.  Contains message context, transaction filter and an transaction list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: getTransactionMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: TransactionMessage
        description: TransactionMessage Specification
        required: true
        schema:
          $ref: '#/definitions/TransactionMessage_3'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_47'
  /TransferOccurrenceMessage:
    post:
      tags:
      - TransferOccurrenceMessage
      summary: Example of post operation for TransferOccurrenceMessage
      description: 'All values that can be sent in a transfer occurrence message.  Contains message context and transfer filter. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. '
      operationId: postTransferOccurrenceMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: TransferOccurrenceMessage
        description: TransferOccurrenceMessage Specification
        required: true
        schema:
          $ref: '#/definitions/TransferOccurrenceMessage_1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_48'
    put:
      tags:
      - TransferOccurrenceMessage
      summary: Example of put operation for TransferOccurrenceMessage
      description: 'All values that can be sent in a transfer occurrence message.  Contains message context and transfer filter. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. '
      operationId: putTransferOccurrenceMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: TransferOccurrenceMessage
        description: TransferOccurrenceMessage Specification
        required: true
        schema:
          $ref: '#/definitions/TransferOccurrenceMessage'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_48'
  /TransferOccurrenceMessage/Delete:
    post:
      tags:
      - TransferOccurrenceMessage
      summary: Example of delete operation for TransferOccurrenceMessage
      description: 'All values that can be sent in a transfer occurrence message.  Contains message context and transfer filter. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. '
      operationId: deleteTransferOccurrenceMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: TransferOccurrenceMessage
        description: TransferOccurrenceMessage Specification
        required: true
        schema:
          $ref: '#/definitions/TransferOccurrenceMessage_2'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_48'
  /TransferOccurrenceMessage/Get:
    post:
      tags:
      - TransferOccurrenceMessage
      summary: Example of get operation for TransferOccurrenceMessage
      description: 'All values that can be sent in a transfer occurrence message.  Contains message context and transfer filter. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. '
      operationId: getTransferOccurrenceMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: TransferOccurrenceMessage
        description: TransferOccurrenceMessage Specification
        required: true
        schema:
          $ref: '#/definitions/TransferOccurrenceMessage_3'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_48'
  /TransferRecurringMessage:
    post:
      tags:
      - TransferRecurringMessage
      summary: Example of post operation for TransferRecurringMessage
      description: 'All values that can be sent in a transfer recurring message.  Contains message context and transfer filter. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. '
      operationId: postTransferRecurringMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: TransferRecurringMessage
        description: TransferRecurringMessage Specification
        required: true
        schema:
          $ref: '#/definitions/TransferRecurringMessage_1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_49'
    put:
      tags:
      - TransferRecurringMessage
      summary: Example of put operation for TransferRecurringMessage
      description: 'All values that can be sent in a transfer recurring message.  Contains message context and transfer filter. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. '
      operationId: putTransferRecurringMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: TransferRecurringMessage
        description: TransferRecurringMessage Specification
        required: true
        schema:
          $ref: '#/definitions/TransferRecurringMessage'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_49'
  /TransferRecurringMessage/Delete:
    post:
      tags:
      - TransferRecurringMessage
      summary: Example of delete operation for TransferRecurringMessage
      description: 'All values that can be sent in a transfer recurring message.  Contains message context and transfer filter. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. '
      operationId: deleteTransferRecurringMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: TransferRecurringMessage
        description: TransferRecurringMessage Specification
        required: true
        schema:
          $ref: '#/definitions/TransferRecurringMessage_2'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_49'
  /TransferRecurringMessage/Get:
    post:
      tags:
      - TransferRecurringMessage
      summary: Example of get operation for TransferRecurringMessage
      description: 'All values that can be sent in a transfer recurring message.  Contains message context and transfer filter. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. '
      operationId: getTransferRecurringMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: TransferRecurringMessage
        description: TransferRecurringMessage Specification
        required: true
        schema:
          $ref: '#/definitions/TransferRecurringMessage_3'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_49'
  /UserMessage:
    post:
      tags:
      - UserMessage
      summary: Example of post operation for UserMessage
      description: "All values that can be sent in a user message.  Contains message context, user filter and user list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: postUserMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: UserMessage
        description: UserMessage Specification
        required: true
        schema:
          $ref: '#/definitions/UserMessage_1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_50'
    put:
      tags:
      - UserMessage
      summary: Example of put operation for UserMessage
      description: "All values that can be sent in a user message.  Contains message context, user filter and user list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: putUserMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: UserMessage
        description: UserMessage Specification
        required: true
        schema:
          $ref: '#/definitions/UserMessage'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_50'
  /UserMessage/Delete:
    post:
      tags:
      - UserMessage
      summary: Example of delete operation for UserMessage
      description: "All values that can be sent in a user message.  Contains message context, user filter and user list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: deleteUserMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: UserMessage
        description: UserMessage Specification
        required: true
        schema:
          $ref: '#/definitions/UserMessage_2'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_50'
  /UserMessage/Get:
    post:
      tags:
      - UserMessage
      summary: Example of get operation for UserMessage
      description: "All values that can be sent in a user message.  Contains message context, user filter and user list.  This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: getUserMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: UserMessage
        description: UserMessage Specification
        required: true
        schema:
          $ref: '#/definitions/UserMessage_3'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_50'
  /WireMessage:
    post:
      tags:
      - WireMessage
      summary: Example of post operation for WireMessage
      description: "All values that can be sent in a wire message.  Contains message context, wire filter and a wire list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: postWireMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: WireMessage
        description: WireMessage Specification
        required: true
        schema:
          $ref: '#/definitions/WireMessage_1'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_51'
    put:
      tags:
      - WireMessage
      summary: Example of put operation for WireMessage
      description: "All values that can be sent in a wire message.  Contains message context, wire filter and a wire list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: putWireMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: WireMessage
        description: WireMessage Specification
        required: true
        schema:
          $ref: '#/definitions/WireMessage'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_51'
  /WireMessage/Delete:
    post:
      tags:
      - WireMessage
      summary: Example of delete operation for WireMessage
      description: "All values that can be sent in a wire message.  Contains message context, wire filter and a wire list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: deleteWireMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: WireMessage
        description: WireMessage Specification
        required: true
        schema:
          $ref: '#/definitions/WireMessage_2'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_51'
  /WireMessage/Get:
    post:
      tags:
      - WireMessage
      summary: Example of get operation for WireMessage
      description: "All values that can be sent in a wire message.  Contains message context, wire filter and a wire list. This is a wrapper used to more easily serialize the complete message.  All values are optional.  See example specifications for usage. "
      operationId: getWireMessage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: WireMessage
        description: WireMessage Specification
        required: true
        schema:
          $ref: '#/definitions/WireMessage_3'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inline_response_200_51'
securityDefinitions:
  UserSecurity:
    type: basic
definitions:
  AccessProfile:
    type: object
    properties:
      accessProfileId:
        type: string
        description: 'The unique ID associated with a message or group of messages. '
      actor:
        $ref: '#/definitions/AccessProfile_actor'
      language:
        type: string
        description: 'The language that the client application is presenting. Dont restrict to ISO language standard collected from remote system. '
      locale:
        type: string
        description: 'The country where the client application originates. Dont restrict to ISO country code standard collected from remote system. '
      characterEncoding:
        type: string
        description: "The browsers character encoding.  Some examples are UTF-8, UTF-16, and Unicode. "
      createAccessDateTime:
        type: string
        format: datetime
        description: 'The date and time this profile was created. The date/time should be ISO 8601 UTC format. yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      savedAccessProfile:
        type: boolean
        description: 'This attribute indicates a profile that the user wants to remember as safe. '
      softwareClient:
        $ref: '#/definitions/AccessProfile_softwareClient'
      device:
        $ref: '#/definitions/AccessProfile_device'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
  AccessProfileId:
    type: string
    description: 'The unique ID associated with a message or group of messages. '
  AccessProfileList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      accessProfile:
        type: array
        description: "The access profile is a collection of attributes that describe the device used to access an application. This profile may describe a mobile phone, laptop, personal computer, IVR system, or other. "
        items:
          $ref: '#/definitions/AccessProfile'
    description: "The access profile collection/array contains all the access profiles, for instance, that the credential set is authorized to access at the Institution based on applied filters. "
  Actor:
    type: object
    properties:
      fiUserId:
        type: string
        description: "FiUserId is a unique identifier for the credential group and is readable by the person. The person types this into systems to gain access, also using their password, PIN or whatever else is required to gain access. "
      userId:
        type: string
        description: 'The unique identifier created by the system and or the user for identification. '
      partyId:
        type: string
        description: 'The party ID is a persistent and unique identifier for the party not related to the accounts they own but tied to that person or organization. It should be unique for all parties across the institution and remain the same over the life of the relationship with the financial institution. '
      relationshipId:
        type: string
        description: 'The relationship ID is a persistent and unique identifier for the relationship. It should be unique for all relationships across the institution and remain the same over the life of the relationship with the financial institution. '
    description: "Intended choice- Due to cross language serialization issues the choice construct has been removed. It is the responsibility of the implementer to add programmatic logic for this complex type to detect, handle and or error when population of more than one element is present. "
  AccessProfileFilter:
    type: object
    properties:
      accessProfileIdList:
        $ref: '#/definitions/AccessProfileFilter_accessProfileIdList'
      createAccessDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
      actorList:
        $ref: '#/definitions/AccessProfileFilter_actorList'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
    description: "The list of access profile IDs that should have their associated access profiles either returned or affected by a read, update or delete account request. "
  AccessProfileMessageDelete:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      accessProfileFilter:
        $ref: '#/definitions/AccessProfileFilter'
      accessProfileList:
        $ref: '#/definitions/AccessProfileList'
    description: Delete definition for AccessProfileMessage
  AccessProfileMessageGet:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      accessProfileFilter:
        $ref: '#/definitions/AccessProfileFilter'
    description: Get definition for AccessProfileMessage
  AccessProfileMessagePost:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      accessProfileList:
        $ref: '#/definitions/AccessProfileList'
    description: Post definition for AccessProfileMessage
  AccessProfileMessagePut:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      accessProfileFilter:
        $ref: '#/definitions/AccessProfileFilter'
      accessProfileList:
        $ref: '#/definitions/AccessProfileList'
    description: Put definition for AccessProfileMessage
  AccessProfileMessageResponse:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      accessProfileList:
        $ref: '#/definitions/AccessProfileList'
    description: Response definition for AccessProfileMessage
  Account:
    type: object
    properties:
      accountId:
        type: string
        description: 'The account ID is a persistent and unique identifier for the account. It must be unique for all users across the institution and remain the same over the life of the account. '
      type:
        type: string
        description: "Checking account, i.e., checks can be written against the account. Money market accounts can be included here or in money markets.  Its up to the institution. Savings and club accounts.  This can optionally include CDs, but its up to the institution. Auto loans, etc. Loans that are NOT lines of credit or credit cards. Loan behind the credit card.  Note the actual card information in the card object. Loan that is a line of credit but NOT a credit card. Loan that is made in exchange for taking title of property. Investment accounts such as brokerage and this can optionally include CDs and/or money markets, but its up to the institution. This account is a special type of checking account connected to a pre-paid card. Other account type. Loan that is made in installments. Loan is typically unsecured. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Installment. Loan that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Commercial. Line of Credit that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of CommercialLineOfCredit. A general ledger account of the financial institution. A loan account type that has not been prevously defined. This enumeration is considered deprecated. Recommend using account type loan and subAccount of OtherLoan. "
        enum:
        - Checking
        - Savings
        - Loan
        - CreditCard
        - LineOfCredit
        - Mortgage
        - Investment
        - PrePaidCard
        - Other
        - Installment
        - CommercialLoan
        - CommercialLineOfCredit
        - GeneralLedger
        - OtherLoan
      accountSubType:
        type: string
        description: 'The account subtype identifies the specific account type that the back end system will recognize. '
      openDate:
        type: string
        format: date
        description: 'The date that the account was opened. '
      closeDate:
        type: string
        format: date
        description: 'The date that the account was closed. '
      accountStatus:
        $ref: '#/definitions/Account_accountStatus'
      accountSubStatus:
        type: string
        description: 'For use to support additional acount sub statuses not present in enumerations. '
      micrAccountNumber:
        type: string
        description: 'The account number portion of a draft or line of credit MICR line. '
      routingNumber:
        type: string
        description: 'Routing number for the account. '
      displayAccountId:
        type: string
        description: "The account ID as a masked or obfuscated representation of the Account ID (accountId). This can be used for display or document generation purposes as a security precaution, or in cases where the accountId element has been encrypted or tokenized. "
      idType:
        type: string
        description: "Whether the ID is actual, or simply reserved. "
        enum:
        - Reserved
        - Actual
      description:
        type: string
        description: 'The account description is the textual representation of the account. This value is visible to the user and must be human-readable. '
      subType:
        type: string
        description: 'The account subtype identifies the specific account type that the back end system will recognize. Deprecated - See accountSubType in AccountBase. - Planned removal in v5.0. '
      accountEscheatDate:
        type: string
        format: date
        description: 'The date that Escheatment was applied to the account. '
      accountEscheatAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      chargeOffDate:
        type: string
        format: date
        description: 'The date that the account was charged off. '
      chargeOffAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      accountNickName:
        type: string
        description: 'Description by the party or user that overrides the default description. '
      branch:
        type: string
        description: 'Name or number identifying which branch owns the account. '
      actualBalance:
        $ref: '#/definitions/Account_accountEscheatAmount'
      availableBalance:
        $ref: '#/definitions/Account_accountEscheatAmount'
      cashAdvanceAvailableBalance:
        $ref: '#/definitions/Account_accountEscheatAmount'
      cashAdvanceBalance:
        $ref: '#/definitions/Account_accountEscheatAmount'
      cashAdvanceLimit:
        $ref: '#/definitions/Account_accountEscheatAmount'
      minimumBalance:
        $ref: '#/definitions/Account_accountEscheatAmount'
      externalAccountBankAddress:
        $ref: '#/definitions/Account_externalAccountBankAddress'
      externalAccountSWIFTCode:
        type: string
        description: 'SWIFTCode for wire transfer. '
      externalAccountIBANCode:
        type: string
        description: "IBAN of external institution, used for wire transfers.  This replaces the micrAccountNumber for certain financial institutions in foreign nations, and no routing or SWIFT code is necessary when an IBAN (and potentially bank code, below) is provided to identify the account. "
      externalAccountBankCode:
        type: string
        description: "Bank code, required (in addition to other identifiers) for institutions in certain foreign nations, used for wire transfers. "
      externalAccountFlag:
        type: boolean
        description: "True for an external account, false for an internal account. "
      externalAccountVerified:
        type: boolean
        description: "Default is false.  When user confirms microdeposit, this becomes true. "
      externalTransferFrom:
        type: boolean
        description: 'True when transfers are allowed from external account. '
      externalTransferTo:
        type: boolean
        description: 'True when transfers are allowed to external account. '
      transferFrom:
        type: boolean
        description: 'True when transfers are allowed from this account. '
      transferTo:
        type: boolean
        description: 'True when transfers are allowed to this account. '
      rateType:
        type: string
        description: 'Whether the rate type is fixed or variable based on some index. '
        enum:
        - Fixed
        - Variable
      sourceCode:
        type: string
        description: "FI defined code that identifies the source of the application that created the account such as customer request, cross sale, counter offer, promo, etc. "
      partyIdList:
        $ref: '#/definitions/Account_partyIdList'
      relationshipId:
        type: string
        description: 'The relationship ID is a persistent and unique identifier for the relationship. It should be unique for all relationships across the institution and remain the same over the life of the relationship with the financial institution. '
      accountNoteList:
        $ref: '#/definitions/Account_accountNoteList'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
      meta:
        $ref: '#/definitions/Account_meta'
      transactionList:
        $ref: '#/definitions/Account_transactionList'
      interestPostingFrequency:
        type: string
        description: 'The time interval for posting interest to the account. '
        enum:
        - AmortizedSchedule
        - Annual
        - AtMaturity
        - Bimonthly
        - Biweekly
        - BiweeklySkipFirst
        - BiweeklySkipLast
        - Daily
        - EventTrigger
        - Hourly
        - Immediate
        - Monthly
        - None
        - OneTime
        - Other
        - PerUse
        - Quarterly
        - SemiAnnual
        - SemiMonthly
        - Triannual
        - Weekly
        - WeeklySkipFirst
        - WeeklySkipLast
        - XDays
        - XMonths
        - XYears
      withholdingsInfoList:
        $ref: '#/definitions/Account_withholdingsInfoList'
      overDraftProtectionAccountId:
        type: string
        description: 'The account ID is a persistent and unique identifier for the account. It must be unique for all users across the institution and remain the same over the life of the account. '
      overDraftProtectionAccountType:
        type: string
        description: "Checking account, i.e., checks can be written against the account. Money market accounts can be included here or in money markets.  Its up to the institution. Savings and club accounts.  This can optionally include CDs, but its up to the institution. Auto loans, etc. Loans that are NOT lines of credit or credit cards. Loan behind the credit card.  Note the actual card information in the card object. Loan that is a line of credit but NOT a credit card. Loan that is made in exchange for taking title of property. Investment accounts such as brokerage and this can optionally include CDs and/or money markets, but its up to the institution. This account is a special type of checking account connected to a pre-paid card. Other account type. Loan that is made in installments. Loan is typically unsecured. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Installment. Loan that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Commercial. Line of Credit that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of CommercialLineOfCredit. A general ledger account of the financial institution. A loan account type that has not been prevously defined. This enumeration is considered deprecated. Recommend using account type loan and subAccount of OtherLoan. "
        enum:
        - Checking
        - Savings
        - Loan
        - CreditCard
        - LineOfCredit
        - Mortgage
        - Investment
        - PrePaidCard
        - Other
        - Installment
        - CommercialLoan
        - CommercialLineOfCredit
        - GeneralLedger
        - OtherLoan
      overDraftProtectionAccountSubType:
        type: string
        description: 'The account subtype identifies the specific account type that the back end system will recognize. '
  AccountAccountTypePair:
    type: object
    properties:
      accountId:
        type: string
        description: 'The account ID is a persistent and unique identifier for the account. It must be unique for all users across the institution and remain the same over the life of the account. '
      accountType:
        type: string
        description: "Checking account, i.e., checks can be written against the account. Money market accounts can be included here or in money markets.  Its up to the institution. Savings and club accounts.  This can optionally include CDs, but its up to the institution. Auto loans, etc. Loans that are NOT lines of credit or credit cards. Loan behind the credit card.  Note the actual card information in the card object. Loan that is a line of credit but NOT a credit card. Loan that is made in exchange for taking title of property. Investment accounts such as brokerage and this can optionally include CDs and/or money markets, but its up to the institution. This account is a special type of checking account connected to a pre-paid card. Other account type. Loan that is made in installments. Loan is typically unsecured. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Installment. Loan that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Commercial. Line of Credit that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of CommercialLineOfCredit. A general ledger account of the financial institution. A loan account type that has not been prevously defined. This enumeration is considered deprecated. Recommend using account type loan and subAccount of OtherLoan. "
        enum:
        - Checking
        - Savings
        - Loan
        - CreditCard
        - LineOfCredit
        - Mortgage
        - Investment
        - PrePaidCard
        - Other
        - Installment
        - CommercialLoan
        - CommercialLineOfCredit
        - GeneralLedger
        - OtherLoan
    description: 'Deprecated - the type AccountAccountTypePair will be removed in v5.0. Use AccountIdentification '
  AccountBase:
    type: object
    properties:
      accountId:
        type: string
        description: 'The account ID is a persistent and unique identifier for the account. It must be unique for all users across the institution and remain the same over the life of the account. '
      type:
        type: string
        description: "Checking account, i.e., checks can be written against the account. Money market accounts can be included here or in money markets.  Its up to the institution. Savings and club accounts.  This can optionally include CDs, but its up to the institution. Auto loans, etc. Loans that are NOT lines of credit or credit cards. Loan behind the credit card.  Note the actual card information in the card object. Loan that is a line of credit but NOT a credit card. Loan that is made in exchange for taking title of property. Investment accounts such as brokerage and this can optionally include CDs and/or money markets, but its up to the institution. This account is a special type of checking account connected to a pre-paid card. Other account type. Loan that is made in installments. Loan is typically unsecured. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Installment. Loan that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Commercial. Line of Credit that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of CommercialLineOfCredit. A general ledger account of the financial institution. A loan account type that has not been prevously defined. This enumeration is considered deprecated. Recommend using account type loan and subAccount of OtherLoan. "
        enum:
        - Checking
        - Savings
        - Loan
        - CreditCard
        - LineOfCredit
        - Mortgage
        - Investment
        - PrePaidCard
        - Other
        - Installment
        - CommercialLoan
        - CommercialLineOfCredit
        - GeneralLedger
        - OtherLoan
      accountSubType:
        type: string
        description: 'The account subtype identifies the specific account type that the back end system will recognize. '
      openDate:
        type: string
        format: date
        description: 'The date that the account was opened. '
      closeDate:
        type: string
        format: date
        description: 'The date that the account was closed. '
      accountStatus:
        $ref: '#/definitions/Account_accountStatus'
      accountSubStatus:
        type: string
        description: 'For use to support additional acount sub statuses not present in enumerations. '
      micrAccountNumber:
        type: string
        description: 'The account number portion of a draft or line of credit MICR line. '
      routingNumber:
        type: string
        description: 'Routing number for the account. '
      displayAccountId:
        type: string
        description: "The account ID as a masked or obfuscated representation of the Account ID (accountId). This can be used for display or document generation purposes as a security precaution, or in cases where the accountId element has been encrypted or tokenized. "
  AccountId:
    type: string
    description: 'The account ID is a persistent and unique identifier for the account. It must be unique for all users across the institution and remain the same over the life of the account. '
  AccountIdentification:
    type: object
    properties:
      accountId:
        type: string
        description: 'The account ID is a persistent and unique identifier for the account. It must be unique for all users across the institution and remain the same over the life of the account. '
      accountType:
        type: string
        description: "Checking account, i.e., checks can be written against the account. Money market accounts can be included here or in money markets.  Its up to the institution. Savings and club accounts.  This can optionally include CDs, but its up to the institution. Auto loans, etc. Loans that are NOT lines of credit or credit cards. Loan behind the credit card.  Note the actual card information in the card object. Loan that is a line of credit but NOT a credit card. Loan that is made in exchange for taking title of property. Investment accounts such as brokerage and this can optionally include CDs and/or money markets, but its up to the institution. This account is a special type of checking account connected to a pre-paid card. Other account type. Loan that is made in installments. Loan is typically unsecured. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Installment. Loan that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Commercial. Line of Credit that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of CommercialLineOfCredit. A general ledger account of the financial institution. A loan account type that has not been prevously defined. This enumeration is considered deprecated. Recommend using account type loan and subAccount of OtherLoan. "
        enum:
        - Checking
        - Savings
        - Loan
        - CreditCard
        - LineOfCredit
        - Mortgage
        - Investment
        - PrePaidCard
        - Other
        - Installment
        - CommercialLoan
        - CommercialLineOfCredit
        - GeneralLedger
        - OtherLoan
      accountSubType:
        type: string
        description: 'The account subtype identifies the specific account type that the back end system will recognize. '
      accountToFromIndicator:
        type: string
        description: "AccountToFromIndicator is used to filter for account identifications in messages that have TO and FROM account structure. If a value is not present then the search criteria should evaluate both To and From account structures if applicable. Return or affect accounts identified as the To account, or destination account. Return or affect accounts identified as the From account, or source account. "
        enum:
        - To
        - From
    description: "The set of account identification elements to specify accounts for a read, update or delete request. "
  AccountList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      account:
        type: array
        items:
          $ref: '#/definitions/Account'
    description: "The accounts collection/array contains all the accounts, for instance, that the credential set is authorized to access at the Institution based on applied filters. "
  AccountStatusPair:
    type: object
    properties:
      accountStatus:
        $ref: '#/definitions/Account_accountStatus'
      accountSubStatus:
        type: string
        description: 'For use to support additional acount sub statuses not present in enumerations. '
  AccountType:
    type: string
    description: "Checking account, i.e., checks can be written against the account. Money market accounts can be included here or in money markets.  Its up to the institution. Savings and club accounts.  This can optionally include CDs, but its up to the institution. Auto loans, etc. Loans that are NOT lines of credit or credit cards. Loan behind the credit card.  Note the actual card information in the card object. Loan that is a line of credit but NOT a credit card. Loan that is made in exchange for taking title of property. Investment accounts such as brokerage and this can optionally include CDs and/or money markets, but its up to the institution. This account is a special type of checking account connected to a pre-paid card. Other account type. Loan that is made in installments. Loan is typically unsecured. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Installment. Loan that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Commercial. Line of Credit that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of CommercialLineOfCredit. A general ledger account of the financial institution. A loan account type that has not been prevously defined. This enumeration is considered deprecated. Recommend using account type loan and subAccount of OtherLoan. "
    enum:
    - Checking
    - Savings
    - Loan
    - CreditCard
    - LineOfCredit
    - Mortgage
    - Investment
    - PrePaidCard
    - Other
    - Installment
    - CommercialLoan
    - CommercialLineOfCredit
    - GeneralLedger
    - OtherLoan
  MicrAccountNumber:
    type: string
    description: 'The account number portion of a draft or line of credit MICR line. '
  AccountFilter:
    type: object
    properties:
      accountIdList:
        $ref: '#/definitions/AccountFilter_accountIdList'
      accountStatusList:
        $ref: '#/definitions/AccountFilter_accountStatusList'
      partyIdList:
        $ref: '#/definitions/Account_partyIdList'
      relationshipIdList:
        $ref: '#/definitions/AccountFilter_relationshipIdList'
      accountTypeList:
        $ref: '#/definitions/AccountFilter_accountTypeList'
      externalAccountFlag:
        type: boolean
        description: "If this is not provided, it returns all accounts regardless of whether they are internal or external. If it is provided and its true, it returns only external accounts; if its false, it returns only internal accounts. "
      includeNotesFlag:
        type: boolean
        description: "If this is not provided, it will not return notes. If it is provided and its true, it will return all active non-expired notes. "
      transactionDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
      accountMicrList:
        $ref: '#/definitions/AccountFilter_accountMicrList'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
      accountIdentificationList:
        $ref: '#/definitions/AccountFilter_accountIdentificationList'
    description: 'The list of filter options for services requesting account or account detail data. The options can be used in combination or by themselves.  It is up to the data source to either return or affect the data requested or return a standard error identifying why the request was rejected. '
  AccountMessageDelete:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      accountFilter:
        $ref: '#/definitions/AccountFilter'
      accountList:
        $ref: '#/definitions/AccountList'
    description: Delete definition for AccountMessage
  AccountMessageGet:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      accountFilter:
        $ref: '#/definitions/AccountFilter'
    description: Get definition for AccountMessage
  AccountMessagePost:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      accountList:
        $ref: '#/definitions/AccountList'
    description: Post definition for AccountMessage
  AccountMessagePut:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      accountFilter:
        $ref: '#/definitions/AccountFilter'
      accountList:
        $ref: '#/definitions/AccountList'
    description: Put definition for AccountMessage
  AccountMessageResponse:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      accountList:
        $ref: '#/definitions/AccountList'
    description: Response definition for AccountMessage
  Activity:
    type: object
    properties:
      activityId:
        $ref: '#/definitions/Activity_activityId'
      previousActivityId:
        type: string
        description: 'Previous activities that indicate what order the activities should be performed in. These activities should be completed prior to executing this activity. '
      externalActivityId:
        type: string
        description: 'An external identifier or reference value used by a 3rd party repository. '
      activityRelatedTo:
        $ref: '#/definitions/Activity_activityRelatedTo'
      activityStatus:
        type: string
        description: 'Status of the activity within request to indicate how the activity is progressing from a workflow standpoint. The activity is new and has not been handled by internal teams. The activity  has been allocated to a resource but no time has been spent on the activity. The activity is being actively being worked on. The activity is in progress but has stalled due to some issue. The details of why its being held up will be in the notes related to the request/activity. The activity has been completed. The activity has been cancelled. The activity is intentionally on hold. The details of why it is on hold will be in the notes related to the request/activity. '
        enum:
        - New
        - Assigned
        - InProgressActive
        - InProgressInactive
        - Completed
        - Cancelled
        - OnHold
      activityType:
        type: string
        description: 'The MIME type of the activity.  See RFC 2046 for valid MIME type. '
      activityName:
        type: string
        description: "A human-readable name of the activity, for example Order checks, Ship checks, etc. "
      activityShortDescription:
        type: string
        description: 'A human-readable short text describing the activity. '
      activityDescription:
        type: string
        description: 'A human-readable long text describing the activity. '
      activityFieldImpactedList:
        $ref: '#/definitions/Activity_activityFieldImpactedList'
      creator:
        type: string
        description: "A human-readable string describing the owner of the activity. Name or ID of person, system, etc. that created the activity. "
      activityNoteList:
        $ref: '#/definitions/Account_accountNoteList'
      credentialTypesRequiredList:
        $ref: '#/definitions/Activity_credentialTypesRequiredList'
      credentialsProvidedList:
        $ref: '#/definitions/Activity_credentialsProvidedList'
      activityDateTime:
        type: string
        format: datetime
        description: "UTC date and time when activity occurred. The date/time should be ISO 8601 UTC format: yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. "
      activityAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      activityCreationDateTime:
        type: string
        format: datetime
        description: "UTC date and time when activity was created. The date/time should be ISO 8601 UTC format: yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. "
      activityModifiedDateTime:
        type: string
        format: datetime
        description: "UTC date and time when the activity was modified. The date/time should be ISO 8601 UTC format: yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. "
      activityRequestedDateTime:
        type: string
        format: datetime
        description: "UTC date and time when activity was requested.  In most cases this will be the same as the create date unless this activity was subsequently added. The date/time should be ISO 8601 UTC format: yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. "
      activityDueDateTime:
        type: string
        format: datetime
        description: "UTC date and time when activity is due. The date/time should be ISO 8601 UTC format: yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. "
      activityStartDateTime:
        type: string
        format: datetime
        description: "UTC date and time when activity was started. The date/time should be ISO 8601 UTC format: yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. "
      activityCompletedDateTime:
        type: string
        format: datetime
        description: "UTC date and time when activity completed. The date/time should be ISO 8601 UTC format: yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. "
      activityArchivedDatetime:
        type: string
        format: datetime
        description: "UTC date and time when the activity was archived. The date/time should be ISO 8601 UTC format: yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. "
      activityDeletedDateTime:
        type: string
        format: datetime
        description: "UTC date and time when the activity was deleted. The date/time should be ISO 8601 UTC format: yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. "
      activityIpAddress:
        type: string
        description: 'IP Address string '
      activityScheduled:
        type: boolean
        description: 'A flag used to determine if the activity is scheduled or not. May be used as part of the filter request. '
      activityCustomData:
        $ref: '#/definitions/AccessProfile_customData'
    description: 'General purpose definition describing physical or electronic activity. '
  ActivityFieldImpacted:
    type: object
    properties:
      activityFieldId:
        type: string
        description: 'Field identifier for the field being changed. '
      activityFieldName:
        type: string
        description: 'System field name being modified '
      activityFieldDataType:
        type: string
        description: 'Data type of the field being modified '
      activityFieldPreviousValue:
        type: string
        description: 'Previous value of the field being modified '
      activityFieldNewValue:
        type: string
        description: 'New value of the field being modified. '
    description: 'Elements detailing the nature of change to a given field. '
  ActivityId:
    type: object
    properties:
      activityUniqueId:
        type: string
        description: 'A unique value (or values) used to identify one and only one activity within the repository. '
      activityIdKeyValueList:
        $ref: '#/definitions/AccessProfile_customData'
    description: "A unique value (or values) used to identify one and only one activity within the repository. Some activity systems do not have a concept of a unique key but a concept of a combined key to access values in the back end system  Intended choice  - Due to cross language serialization issues the choice construct has been removed. It is the responsibility of the implementer to add programmatic logic for this complex type to detect, handle and or error when population of more than one element is present. "
  ActivityList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      activity:
        type: array
        items:
          $ref: '#/definitions/Activity'
    description: 'The activities collection/array contains all the activity for a specified request. '
  ActivityStatus:
    type: string
    description: 'Status of the activity within request to indicate how the activity is progressing from a workflow standpoint. The activity is new and has not been handled by internal teams. The activity  has been allocated to a resource but no time has been spent on the activity. The activity is being actively being worked on. The activity is in progress but has stalled due to some issue. The details of why its being held up will be in the notes related to the request/activity. The activity has been completed. The activity has been cancelled. The activity is intentionally on hold. The details of why it is on hold will be in the notes related to the request/activity. '
    enum:
    - New
    - Assigned
    - InProgressActive
    - InProgressInactive
    - Completed
    - Cancelled
    - OnHold
  ActivityType:
    type: string
    description: 'The MIME type of the activity.  See RFC 2046 for valid MIME type. '
  ActivityFilter:
    type: object
    properties:
      activityIdList:
        $ref: '#/definitions/ActivityFilter_activityIdList'
      activityStatusList:
        $ref: '#/definitions/ActivityFilter_activityStatusList'
      activityTypeList:
        $ref: '#/definitions/ActivityFilter_activityTypeList'
      creatorList:
        $ref: '#/definitions/ActivityFilter_creatorList'
      activityRelatedTo:
        $ref: '#/definitions/Activity_activityRelatedTo'
      activityScheduled:
        type: boolean
        description: 'A flag used to determine if the activity is scheduled or not. May be used as part of the filter request. '
      activityDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
      activityStartDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
      activityCreationDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
      activityModifiedDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
      activityRequestedDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
      activityDueDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
      activityArchivedDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
      activityDeletedDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
      activityMinAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      activityMaxAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
    description: 'The list of filter options for services requesting activity data.  The options can be used in combination or by themselves. It is up to the data source to either return the data requested or return a standard error identifying why the request was rejected. '
  ActivityMessageDelete:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      activityFilter:
        $ref: '#/definitions/ActivityFilter'
      activityList:
        $ref: '#/definitions/ActivityList'
    description: Delete definition for ActivityMessage
  ActivityMessageGet:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      activityFilter:
        $ref: '#/definitions/ActivityFilter'
    description: Get definition for ActivityMessage
  ActivityMessagePost:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      activityList:
        $ref: '#/definitions/ActivityList'
    description: Post definition for ActivityMessage
  ActivityMessagePut:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      activityFilter:
        $ref: '#/definitions/ActivityFilter'
      activityList:
        $ref: '#/definitions/ActivityList'
    description: Put definition for ActivityMessage
  ActivityMessageResponse:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      activityList:
        $ref: '#/definitions/ActivityList'
    description: Response definition for ActivityMessage
  App:
    type: object
    properties:
      appId:
        type: string
        description: 'The app id is the unique identifier that identifies the application. '
      appType:
        type: string
        description: 'Application Software. Mobile Application. Web internet based application. '
        enum:
        - Software
        - Mobile
        - Web
      vendorId:
        type: string
        description: 'The vendor ID is a unique identifier which identifies the vendor that is creating a message. The vendor ID is assigned by the FI or established in concert by the vendor and FI. The client application sends this along with the messages so that logging or other business may take place based on the vendor utilizing the service. This ID is not generated per data or security request but is generated "out-of-band" (i.e. prior generation by some external mechanism) of this process and stored in the Financial Institutions and Vendorâ€™s systems. A standard error will be returned if the vendor ID is not provided when it is required. '
      appDescription:
        type: string
        description: 'The description of the application. '
      appHash:
        type: string
        description: 'Program hash to validate against the store.. '
      appParameterList:
        $ref: '#/definitions/App_appParameterList'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
  AppHash:
    type: string
    description: 'Program hash to validate against the store.. '
  AppId:
    type: string
    description: 'The app id is the unique identifier that identifies the application. '
  AppList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      app:
        type: array
        description: 'Collection of app data. '
        items:
          $ref: '#/definitions/App'
  AppParameter:
    type: object
    properties:
      appParameterId:
        type: string
        description: 'The app Parameter id is the unique identifier that identifies the application parameter. '
      parameterName:
        type: string
        description: 'The name of the parameter as it wil appear when published to the applications. '
      parameterScope:
        type: string
        description: "The parameter is set for each individual user logged into a computer. For example: A Windows HKEY_CURRENT_USER registry entry or a Machine.config file. The parameter applies to the entire machine. For example: A Windows HKEY_LOCAL_MACHINE setting for security. The parameter applies to the specific application. For example: An IIS entry in the web.config file. For example: The parameter applies to all financial institutions within a configuration. To find the current value for the parameter within the configuration see configuration->configurationAppList->configurationApp-> configurationAppParameterList->configurationAppParameter->currentValue The parameter applies to a specific financial institution that owns the license. For example: An IIS entry in the web.config file. To find the current value for the parameter for the financial institution see configuration->configurationFiList->financialInstitution->configurationFiApp-> configurationFiAppParameterList->configurationFiAppParameter->currentValue The parameter applies to the current session only. For example: An session specific parameter. Some other parameter scope that has yet to be defined. Please request addition to specification if you believe others will benefit by the addition. "
        enum:
        - User
        - Machine
        - Application
        - Configuration
        - FinancialInstitution
        - Session
        - Other
      parameterType:
        type: string
        description: "The parameter is being managed in the registry. For example: THe Windows Registry.  See Scope for where it applies. The parameter is being set at the OS level. For example: Using a set command on Windows command line. The parameter is in an XML file.  See For example: An IIS entry in the web.config file. See Path and XPath for specific location and path in the XML file. The parameter is in flat text file.  See For example: An entry in a configuration  text file. Some other parameter type that has yet to be defined. Please request addition to specification if you believe others will benefit by the addition. "
        enum:
        - Registry
        - OS
        - XML
        - KeyValuePairs
        - Other
      parameterDescription:
        type: string
        description: 'A meaningful description of what the parameter represents. '
      parameterDefaultValue:
        type: string
        description: 'The default value upon initial installation. This value can be used to reset back to default installation values. '
      currentValue:
        type: string
        description: 'The current value of the parameter. '
      customData:
        $ref: '#/definitions/AccessProfile_customData'
  AppParameterId:
    type: string
    description: 'The app Parameter id is the unique identifier that identifies the application parameter. '
  AppType:
    type: string
    description: 'Application Software. Mobile Application. Web internet based application. '
    enum:
    - Software
    - Mobile
    - Web
  ParameterName:
    type: string
    description: 'The name of the parameter as it wil appear when published to the applications. '
  ParameterScope:
    type: string
    description: "The parameter is set for each individual user logged into a computer. For example: A Windows HKEY_CURRENT_USER registry entry or a Machine.config file. The parameter applies to the entire machine. For example: A Windows HKEY_LOCAL_MACHINE setting for security. The parameter applies to the specific application. For example: An IIS entry in the web.config file. For example: The parameter applies to all financial institutions within a configuration. To find the current value for the parameter within the configuration see configuration->configurationAppList->configurationApp-> configurationAppParameterList->configurationAppParameter->currentValue The parameter applies to a specific financial institution that owns the license. For example: An IIS entry in the web.config file. To find the current value for the parameter for the financial institution see configuration->configurationFiList->financialInstitution->configurationFiApp-> configurationFiAppParameterList->configurationFiAppParameter->currentValue The parameter applies to the current session only. For example: An session specific parameter. Some other parameter scope that has yet to be defined. Please request addition to specification if you believe others will benefit by the addition. "
    enum:
    - User
    - Machine
    - Application
    - Configuration
    - FinancialInstitution
    - Session
    - Other
  ParameterType:
    type: string
    description: "The parameter is being managed in the registry. For example: THe Windows Registry.  See Scope for where it applies. The parameter is being set at the OS level. For example: Using a set command on Windows command line. The parameter is in an XML file.  See For example: An IIS entry in the web.config file. See Path and XPath for specific location and path in the XML file. The parameter is in flat text file.  See For example: An entry in a configuration  text file. Some other parameter type that has yet to be defined. Please request addition to specification if you believe others will benefit by the addition. "
    enum:
    - Registry
    - OS
    - XML
    - KeyValuePairs
    - Other
  AppFilter:
    type: object
    properties:
      appIdList:
        $ref: '#/definitions/AppFilter_appIdList'
      appTypeList:
        $ref: '#/definitions/AppFilter_appTypeList'
      vendorIdList:
        $ref: '#/definitions/AppFilter_vendorIdList'
      appHashList:
        $ref: '#/definitions/AppFilter_appHashList'
      isAppHashValidated:
        type: boolean
        description: "Add this flag if you wish to query on apps that have or have NOT had their hash values validated.  Otherwise, leave this filter out. "
      appParameterIdList:
        $ref: '#/definitions/AppFilter_appParameterIdList'
      parameterNameList:
        $ref: '#/definitions/AppFilter_parameterNameList'
      parameterScopeList:
        $ref: '#/definitions/AppFilter_parameterScopeList'
      parameterTypeList:
        $ref: '#/definitions/AppFilter_parameterTypeList'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
    description: 'The list of filter options for services requesting app data.  The options can be used in combination or by themselves.  It is up to the data source to either return the data requested or return a standard error identifying why the request was rejected. '
  Applicant:
    type: object
    properties:
      applicantId:
        type: string
        description: 'Unique identifier for the applicant. '
      role:
        type: string
        description: 'Role of the  applicant. '
        enum:
        - Primary
        - Secondary
        - AuthorizedUser
      creditReportList:
        $ref: '#/definitions/Applicant_creditReportList'
      relationshipId:
        type: string
        description: 'The relationship ID is a persistent and unique identifier for the relationship. It should be unique for all relationships across the institution and remain the same over the life of the relationship with the financial institution. '
      partyId:
        type: string
        description: 'The party ID is a persistent and unique identifier for the party not related to the accounts they own but tied to that person or organization. It should be unique for all parties across the institution and remain the same over the life of the relationship with the financial institution. '
      party:
        $ref: '#/definitions/Party'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
    description: 'Collection of fields to describe an applicant for the product. '
  ApplicantId:
    type: string
    description: 'Unique identifier for the applicant. '
  Application:
    type: object
    properties:
      applicationId:
        type: string
        description: 'Unique identifier for the application in the back end system. '
      applicationDate:
        type: string
        format: date
        description: 'The creation date of the application. '
      applicationStatus:
        type: string
        description: "Status of the application to indicate how the application is progressing from a workflow standpoint. The application is new and has not been handled by internal teams or systems. Similar to New, but the financial institution has proactively pre-approved the products for potential applicants; the applicants have not yet responded to the offer. The application has been allocated to a resource to get back to the applicants. The internal resource has contacted the applicants and is pending negotiating with the party. The financial institution has approved the application and is pending the commitment from the applicants. The financial institution has declined the application.  If the changes are not made to the to the application, this application workflow is complete. The applicants have accepted the conditions of the application and committed to the offer. The associated products are being booked into the back end systems. The associated products are booked in the back end systems. The process is complete for the application. The applicants have rejected the conditions of the application and are not interested in further proposals and the process is complete for the application. The application is in suspended status. Process is hold waiting for additional action. The application has been cancelled. The application is in other status. "
        enum:
        - New
        - PreApproved
        - Assigned
        - InDiscussion
        - Approved
        - Declined
        - Converting
        - Booked
        - Lost
        - Suspended
        - Cancelled
        - Other
      applicationStatusDateTime:
        type: string
        format: datetime
        description: 'The date time of the most current application status. '
      applicationModifiedDateTime:
        type: string
        format: datetime
        description: 'The date time of a change to the application content. '
      productAppliedForList:
        $ref: '#/definitions/Application_productAppliedForList'
      applicantList:
        $ref: '#/definitions/Application_applicantList'
      finalCreditBureauScore:
        type: string
        description: "Credit score that was used to approve the application.  This is typically calculated using a variety of methods at each financial institution based on the credit report data for the primary, the joint or a combination of both for primary and joint credit statistics. "
      applicationNoteList:
        $ref: '#/definitions/Account_accountNoteList'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
    description: 'An application contains the details of a consumer who is becoming a customer of a financial institution (if they are not already). It also includes the details of the products requested. '
  ApplicationId:
    type: string
    description: 'Unique identifier for the application in the back end system. '
  ApplicationList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      application:
        type: array
        description: 'An application contains the details of a consumer who is becoming a customer of a financial institution (if they are not already). It also includes the details of the products requested. '
        items:
          $ref: '#/definitions/Application'
    description: 'Collection of applications data definition. '
  ApplicationStatus:
    type: string
    description: "Status of the application to indicate how the application is progressing from a workflow standpoint. The application is new and has not been handled by internal teams or systems. Similar to New, but the financial institution has proactively pre-approved the products for potential applicants; the applicants have not yet responded to the offer. The application has been allocated to a resource to get back to the applicants. The internal resource has contacted the applicants and is pending negotiating with the party. The financial institution has approved the application and is pending the commitment from the applicants. The financial institution has declined the application.  If the changes are not made to the to the application, this application workflow is complete. The applicants have accepted the conditions of the application and committed to the offer. The associated products are being booked into the back end systems. The associated products are booked in the back end systems. The process is complete for the application. The applicants have rejected the conditions of the application and are not interested in further proposals and the process is complete for the application. The application is in suspended status. Process is hold waiting for additional action. The application has been cancelled. The application is in other status. "
    enum:
    - New
    - PreApproved
    - Assigned
    - InDiscussion
    - Approved
    - Declined
    - Converting
    - Booked
    - Lost
    - Suspended
    - Cancelled
    - Other
  ProductAppliedFor:
    type: object
    properties:
      productAppliedForId:
        type: string
        description: 'Unique identifier for the product request. '
      productType:
        type: string
        description: "Checking account, i.e., checks can be written against the account. Money market accounts can be included here or in money markets.  Its up to the institution. Savings and club accounts.  This can optionally include CDs, but its up to the institution. Auto loans, etc. Loans that are NOT lines of credit or credit cards. Loan behind the credit card.  Note the actual card information in the card object. Loan that is a line of credit but NOT a credit card. Loan that is made in exchange for taking title of property. Investment accounts such as brokerage and this can optionally include CDs and/or money markets, but its up to the institution. This account is a special type of checking account connected to a pre-paid card. Other account type. Loan that is made in installments. Loan is typically unsecured. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Installment. Loan that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Commercial. Line of Credit that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of CommercialLineOfCredit. A general ledger account of the financial institution. A loan account type that has not been prevously defined. This enumeration is considered deprecated. Recommend using account type loan and subAccount of OtherLoan. "
        enum:
        - Checking
        - Savings
        - Loan
        - CreditCard
        - LineOfCredit
        - Mortgage
        - Investment
        - PrePaidCard
        - Other
        - Installment
        - CommercialLoan
        - CommercialLineOfCredit
        - GeneralLedger
        - OtherLoan
      productSubType:
        type: string
        description: 'The product sub type identifies the specific product type that the back end system will recognize. '
      productApplicationStatus:
        type: string
        description: "Status of the application to indicate how the application is progressing from a workflow standpoint. The application is new and has not been handled by internal teams or systems. Similar to New, but the financial institution has proactively pre-approved the products for potential applicants; the applicants have not yet responded to the offer. The application has been allocated to a resource to get back to the applicants. The internal resource has contacted the applicants and is pending negotiating with the party. The financial institution has approved the application and is pending the commitment from the applicants. The financial institution has declined the application.  If the changes are not made to the to the application, this application workflow is complete. The applicants have accepted the conditions of the application and committed to the offer. The associated products are being booked into the back end systems. The associated products are booked in the back end systems. The process is complete for the application. The applicants have rejected the conditions of the application and are not interested in further proposals and the process is complete for the application. The application is in suspended status. Process is hold waiting for additional action. The application has been cancelled. The application is in other status. "
        enum:
        - New
        - PreApproved
        - Assigned
        - InDiscussion
        - Approved
        - Declined
        - Converting
        - Booked
        - Lost
        - Suspended
        - Cancelled
        - Other
      productDetail:
        $ref: '#/definitions/ProductAppliedFor_productDetail'
    description: "Product applied for and its requested amount, quoted rate, etc. "
  ApplicationFilter:
    type: object
    properties:
      applicationIdList:
        $ref: '#/definitions/ApplicationFilter_applicationIdList'
      productTypeList:
        $ref: '#/definitions/ApplicationFilter_productTypeList'
      productSubTypeList:
        type: string
        description: 'Product sub type identifies how the product will be identified in the back end system. '
      relationshipIdList:
        $ref: '#/definitions/AccountFilter_relationshipIdList'
      partyIdList:
        $ref: '#/definitions/Account_partyIdList'
      applicationDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
      applicationStatusList:
        $ref: '#/definitions/ApplicationFilter_applicationStatusList'
    description: 'The list of filter options for services requesting application data.  The options can be used in combination or by themselves.  It is up to the data source to either return the data requested or return a standard error identifying why the request was rejected. '
  ApplicationMessageDelete:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      applicationFilter:
        $ref: '#/definitions/ApplicationFilter'
      applicationList:
        $ref: '#/definitions/ApplicationList'
    description: Delete definition for ApplicationMessage
  ApplicationMessageGet:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      applicationFilter:
        $ref: '#/definitions/ApplicationFilter'
    description: Get definition for ApplicationMessage
  ApplicationMessagePost:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      applicationList:
        $ref: '#/definitions/ApplicationList'
    description: Post definition for ApplicationMessage
  ApplicationMessagePut:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      applicationFilter:
        $ref: '#/definitions/ApplicationFilter'
      applicationList:
        $ref: '#/definitions/ApplicationList'
    description: Put definition for ApplicationMessage
  ApplicationMessageResponse:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      applicationList:
        $ref: '#/definitions/ApplicationList'
    description: Response definition for ApplicationMessage
  AppMessageDelete:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      appFilter:
        $ref: '#/definitions/AppFilter'
      appList:
        $ref: '#/definitions/AppList'
    description: Delete definition for AppMessage
  AppMessageGet:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      appFilter:
        $ref: '#/definitions/AppFilter'
    description: Get definition for AppMessage
  AppMessagePost:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      appList:
        $ref: '#/definitions/AppList'
    description: Post definition for AppMessage
  AppMessagePut:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      appFilter:
        $ref: '#/definitions/AppFilter'
      appList:
        $ref: '#/definitions/AppList'
    description: Put definition for AppMessage
  AppMessageResponse:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      appList:
        $ref: '#/definitions/AppList'
    description: Response definition for AppMessage
  Artifact:
    type: object
    properties:
      artifactId:
        $ref: '#/definitions/Artifact_artifactId'
      artifactType:
        type: string
        description: 'The MIME type of the artifact.  See RFC 2046 for valid MIME type. '
      externalId:
        type: string
        description: 'An identifier or reference value typically used by the repository consumer. '
      accountId:
        type: string
        description: 'The account ID is a persistent and unique identifier for the account. It must be unique for all users across the institution and remain the same over the life of the account. '
      accountType:
        type: string
        description: "Checking account, i.e., checks can be written against the account. Money market accounts can be included here or in money markets.  Its up to the institution. Savings and club accounts.  This can optionally include CDs, but its up to the institution. Auto loans, etc. Loans that are NOT lines of credit or credit cards. Loan behind the credit card.  Note the actual card information in the card object. Loan that is a line of credit but NOT a credit card. Loan that is made in exchange for taking title of property. Investment accounts such as brokerage and this can optionally include CDs and/or money markets, but its up to the institution. This account is a special type of checking account connected to a pre-paid card. Other account type. Loan that is made in installments. Loan is typically unsecured. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Installment. Loan that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Commercial. Line of Credit that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of CommercialLineOfCredit. A general ledger account of the financial institution. A loan account type that has not been prevously defined. This enumeration is considered deprecated. Recommend using account type loan and subAccount of OtherLoan. "
        enum:
        - Checking
        - Savings
        - Loan
        - CreditCard
        - LineOfCredit
        - Mortgage
        - Investment
        - PrePaidCard
        - Other
        - Installment
        - CommercialLoan
        - CommercialLineOfCredit
        - GeneralLedger
        - OtherLoan
      accountSubType:
        type: string
        description: 'The account subtype identifies the specific account type that the back end system will recognize. '
      partyId:
        type: string
        description: 'The party ID is a persistent and unique identifier for the party not related to the accounts they own but tied to that person or organization. It should be unique for all parties across the institution and remain the same over the life of the relationship with the financial institution. '
      artifact:
        type: string
        format: base64Binary
        description: 'This is the binary object containing the digital data to be stored in the repository. '
      artifactName:
        type: string
        description: 'A human-readable name of the artifact. '
      artifactDescription:
        type: string
        description: 'A human-readable text describing the contents of the artifact. '
      artifactOwner:
        type: string
        description: 'A human-readable string describing the owner of the artifact. '
      artifactCreationDate:
        type: string
        format: datetime
        description: 'The date and time at which an artifact was created. '
      artifactModifiedDate:
        type: string
        format: datetime
        description: 'The date and time at which an artifact was modified. '
      artifactArchivedDate:
        type: string
        format: datetime
        description: 'The date and time at which an artifact was archived. '
      artifactDeletedDate:
        type: string
        format: datetime
        description: 'The date and time at which an artifact was deleted. '
      artifactCompressionType:
        type: string
        description: "The type of compression used to reduce the size of the artifact for transport over the wire (e.g â€œzipâ€\x9d, â€œtarâ€\x9d, â€œgzipâ€\x9d, â€œrarâ€\x9d, â€œnoneâ€\x9d etc.).  If this field is blank or null, then it is assumed that the artifact is not in a compressed state. "
      artifactUri:
        type: string
        format: anyURI
        description: 'The URI location of the artifact image. '
      artifactArchived:
        type: boolean
        description: 'A flag used to determine if the artifact has been archived or not. '
      customData:
        $ref: '#/definitions/AccessProfile_customData'
    description: "An artifact is a binary representation of an image, document, etc. that needs to be stored in a back end system for later retrieval. "
  ArtifactId:
    type: object
    properties:
      artifactUniqueId:
        type: string
        description: 'A unique value (or values) used to identify one and only one artifact within the repository. '
      artifactIdKeyValueList:
        $ref: '#/definitions/AccessProfile_customData'
    description: "A unique value (or values) used to identify one and only one artifact within the repository. Some artifact systems do not have a concept of a unique key but a concept of a combined key to access values in the back end system.  Intended choice - Due to cross language serialization issues the choice construct has been removed. It is the responsibility of the implementer to add programmatic logic for this complex type to detect, handle and or error when population of more than one element is present. "
  ArtifactList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      artifact:
        type: array
        items:
          $ref: '#/definitions/Artifact'
    description: "The artifacts collection/array contains all the artifacts, for instance, that the credential set is authorized to access at the Institution based on applied filters. "
  ArtifactFilter:
    type: object
    properties:
      artifactIdList:
        $ref: '#/definitions/ArtifactFilter_artifactIdList'
      accountIdList:
        $ref: '#/definitions/AccountFilter_accountIdList'
      partyIdList:
        $ref: '#/definitions/Account_partyIdList'
      artifactName:
        type: string
        description: 'A human-readable name of the artifact. '
      artifactDescription:
        type: string
        description: 'A human-readable text describing the contents of the artifact. '
      artifactArchived:
        type: boolean
        description: 'A flag used to determine if the artifact has been archived or not. '
      artifactCreationDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
      artifactModifiedDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
      artifactArchivedDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
      artifactDeletedDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
      accountIdentificationList:
        $ref: '#/definitions/AccountFilter_accountIdentificationList'
    description: 'The list of filter options for services requesting artifact data.  The options can be used in combination or by themselves. It is up to the data source to either return the data requested or return a standard error identifying why the request was rejected. '
  ArtifactMessageDelete:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      artifactFilter:
        $ref: '#/definitions/ArtifactFilter'
      artifactList:
        $ref: '#/definitions/ArtifactList'
    description: Delete definition for ArtifactMessage
  ArtifactMessageGet:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      artifactFilter:
        $ref: '#/definitions/ArtifactFilter'
    description: Get definition for ArtifactMessage
  ArtifactMessagePost:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      artifactList:
        $ref: '#/definitions/ArtifactList'
    description: Post definition for ArtifactMessage
  ArtifactMessagePut:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      artifactFilter:
        $ref: '#/definitions/ArtifactFilter'
      artifactList:
        $ref: '#/definitions/ArtifactList'
    description: Put definition for ArtifactMessage
  ArtifactMessageResponse:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      artifactList:
        $ref: '#/definitions/ArtifactList'
    description: Response definition for ArtifactMessage
  Bill:
    type: object
    properties:
      billId:
        type: string
        description: 'The bill ID is a persistent and unique identifier for the bill from payee. '
      billImageArtifactId:
        $ref: '#/definitions/Artifact_artifactId'
      eBillUri:
        type: string
        format: anyURI
        description: 'The eBill location of the bill image. If it is stored by a third party location. '
      billFromPayeeId:
        type: string
        description: 'The bill payee ID is a persistent and unique identifier for the bill payee of the consumer. '
      billFromPayeeGlobalId:
        type: string
        description: 'The bill payee global ID is a persistent and unique identifier for the bill payee in the bill pay system. This bill payee global ID does not change from consumer to consumer. '
      partyId:
        type: string
        description: 'The party ID is a persistent and unique identifier for the party not related to the accounts they own but tied to that person or organization. It should be unique for all parties across the institution and remain the same over the life of the relationship with the financial institution. '
      relationshipId:
        type: string
        description: 'The relationship ID is a persistent and unique identifier for the relationship. It should be unique for all relationships across the institution and remain the same over the life of the relationship with the financial institution. '
      accountId:
        type: string
        description: 'The account ID is a persistent and unique identifier for the account. It must be unique for all users across the institution and remain the same over the life of the account. '
      accountType:
        type: string
        description: "Checking account, i.e., checks can be written against the account. Money market accounts can be included here or in money markets.  Its up to the institution. Savings and club accounts.  This can optionally include CDs, but its up to the institution. Auto loans, etc. Loans that are NOT lines of credit or credit cards. Loan behind the credit card.  Note the actual card information in the card object. Loan that is a line of credit but NOT a credit card. Loan that is made in exchange for taking title of property. Investment accounts such as brokerage and this can optionally include CDs and/or money markets, but its up to the institution. This account is a special type of checking account connected to a pre-paid card. Other account type. Loan that is made in installments. Loan is typically unsecured. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Installment. Loan that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Commercial. Line of Credit that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of CommercialLineOfCredit. A general ledger account of the financial institution. A loan account type that has not been prevously defined. This enumeration is considered deprecated. Recommend using account type loan and subAccount of OtherLoan. "
        enum:
        - Checking
        - Savings
        - Loan
        - CreditCard
        - LineOfCredit
        - Mortgage
        - Investment
        - PrePaidCard
        - Other
        - Installment
        - CommercialLoan
        - CommercialLineOfCredit
        - GeneralLedger
        - OtherLoan
      accountSubType:
        type: string
        description: 'The account subtype identifies the specific account type that the back end system will recognize. '
      isEBill:
        type: boolean
        description: 'True if this bill has eBill attached. '
      dueAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      earlyPaymentAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      minimumPaymentAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      sentDateTime:
        type: string
        format: datetime
        description: 'The Date bill was sent by payee. The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported. The time is assumed to be 00:00Z if omitted. '
      dueDateTime:
        type: string
        format: datetime
        description: 'The due date of the bill. The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported. The time is assumed to be 00:00Z if omitted. '
      earlyPaymentDateTime:
        type: string
        format: datetime
        description: 'The early payment date of the bill (if any). The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported. The time is assumed to be 00:00Z if omitted. '
      lateFee:
        $ref: '#/definitions/Account_accountEscheatAmount'
      updatedDateTime:
        type: string
        format: datetime
        description: 'The Date Updated is the date that the Bill Payee was last updated by the member. The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported. The time is assumed to be 00:00Z if omitted. '
      billStatus:
        type: string
        description: 'This is enumeration of statuses for the bill payee. This value indicates that the bill is due and had not been paid. This value indicates that the bill payemnt date has expired and the bill has not been paid. This value indicates that the bill was cancelled. This value indicates that the bill was placed on hold pending a resolution of some type to clear This value indicates that the bill has been paid. This value indicates that the bill has been voided. This value indicates that the bill is being disputed. This value indicates that the attempt to pay the bill failed. This value indicates that the bill has been scheduled to be paid. See otherBillStatus for more detail. '
        enum:
        - Due
        - OverDue
        - Cancelled
        - Suspended
        - Paid
        - Void
        - Dispute
        - PaymentFailed
        - Scheduled
        - Other
      paymentClearedDateTime:
        type: string
        format: datetime
        description: 'The date that the bill payment or check was received and processed. The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported. The time is assumed to be 00:00Z if omitted. '
      customData:
        $ref: '#/definitions/AccessProfile_customData'
      otherBillStatus:
        type: string
        description: 'Description of bill status when billStatus is set to Other. '
  BillId:
    type: string
    description: 'The bill ID is a persistent and unique identifier for the bill from payee. '
  BillList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      bill:
        type: array
        items:
          $ref: '#/definitions/Bill'
    description: 'The bill list is the collection of bills from different payees for a party/relation/member. '
  BillStatus:
    type: string
    description: 'This is enumeration of statuses for the bill payee. This value indicates that the bill is due and had not been paid. This value indicates that the bill payemnt date has expired and the bill has not been paid. This value indicates that the bill was cancelled. This value indicates that the bill was placed on hold pending a resolution of some type to clear This value indicates that the bill has been paid. This value indicates that the bill has been voided. This value indicates that the bill is being disputed. This value indicates that the attempt to pay the bill failed. This value indicates that the bill has been scheduled to be paid. See otherBillStatus for more detail. '
    enum:
    - Due
    - OverDue
    - Cancelled
    - Suspended
    - Paid
    - Void
    - Dispute
    - PaymentFailed
    - Scheduled
    - Other
  BillFilter:
    type: object
    properties:
      billIdList:
        $ref: '#/definitions/BillFilter_billIdList'
      partyIdList:
        $ref: '#/definitions/Account_partyIdList'
      relationshipIdList:
        $ref: '#/definitions/AccountFilter_relationshipIdList'
      accountIdList:
        $ref: '#/definitions/AccountFilter_accountIdList'
      accountStatusList:
        $ref: '#/definitions/AccountFilter_accountStatusList'
      billFromPayeeIdList:
        $ref: '#/definitions/BillFilter_billFromPayeeIdList'
      isEBill:
        type: boolean
        description: 'Filter that is used to search for eBills. '
      billSentDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
      billPaymentClearedDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
      billStatusList:
        $ref: '#/definitions/BillFilter_billStatusList'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
      accountIdentificationList:
        $ref: '#/definitions/AccountFilter_accountIdentificationList'
    description: 'The list of filter options for services requesting Bill data. The options can be used in combination or by themselves. It is up to the data source to either return or affect the data requested or return a standard error identifying why the request was rejected. '
  BillMessageDelete:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      billFilter:
        $ref: '#/definitions/BillFilter'
      billList:
        $ref: '#/definitions/BillList'
    description: Delete definition for BillMessage
  BillMessageGet:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      billFilter:
        $ref: '#/definitions/BillFilter'
    description: Get definition for BillMessage
  BillMessagePost:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      billList:
        $ref: '#/definitions/BillList'
    description: Post definition for BillMessage
  BillMessagePut:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      billFilter:
        $ref: '#/definitions/BillFilter'
      billList:
        $ref: '#/definitions/BillList'
    description: Put definition for BillMessage
  BillMessageResponse:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      billList:
        $ref: '#/definitions/BillList'
    description: Response definition for BillMessage
  BillPayee:
    type: object
    properties:
      billPayeeId:
        type: string
        description: 'The bill payee ID is a persistent and unique identifier for the bill payee of the consumer. '
      billPayeeGlobalId:
        type: string
        description: 'The bill payee global ID is a persistent and unique identifier for the bill payee in the bill pay system. This bill payee global ID does not change from consumer to consumer. '
      payeeName:
        type: string
        description: "If a person, the first and last name of the person. If a business or trust, will include the business or trust name. "
      payeeAddress:
        $ref: '#/definitions/BillPayee_payeeAddress'
      payeePhone:
        $ref: '#/definitions/BillPayee_payeePhone'
      payeeEmail:
        $ref: '#/definitions/BillPayee_payeeEmail'
      processorName:
        type: string
        description: 'A name that uniquely identifies the processor of the bill payee. '
      payeeACHRoutingNumber:
        type: string
        description: 'The ACH routing number for the payee.  Usually used when the funds are transfered electronically. '
      payeeACHAccountNumber:
        type: string
        description: 'The ACH account number for the payee.  Usually used when the funds are transfered electronically. '
      isElectronic:
        type: boolean
        description: 'True for electronic processing of payments. False for sending a paper check. '
      isEBillProvider:
        type: boolean
        description: 'True for payees that are providing ebills. False for payees that send a paper bill. '
      isEBillEnrolled:
        type: boolean
        description: 'True for parties that are signed up for ebills for this payee. False if the party is not enrolled for ebill processing. Element deprecated in favor of eBillEnrollmentStatus. '
      addedDateTime:
        type: string
        format: datetime
        description: 'The Date Added is the date that the Bill Payee was added to the system by the member. The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported. The time is assumed to be 00:00Z if omitted. '
      updatedDateTime:
        type: string
        format: datetime
        description: 'The Date Updated is the date that the Bill Payee was last updated by the member. The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported. The time is assumed to be 00:00Z if omitted. '
      minimumDaysToPay:
        type: integer
        description: 'This is the minimum number of business days a payment must be scheduled in advance for the payee to receive payment in time. '
      partyId:
        type: string
        description: 'The party ID is a persistent and unique identifier for the party not related to the accounts they own but tied to that person or organization. It should be unique for all parties across the institution and remain the same over the life of the relationship with the financial institution. '
      relationshipId:
        type: string
        description: 'The relationship ID is a persistent and unique identifier for the relationship. It should be unique for all relationships across the institution and remain the same over the life of the relationship with the financial institution. '
      accountId:
        type: string
        description: 'The account ID is a persistent and unique identifier for the account. It must be unique for all users across the institution and remain the same over the life of the account. '
      accountType:
        type: string
        description: "Checking account, i.e., checks can be written against the account. Money market accounts can be included here or in money markets.  Its up to the institution. Savings and club accounts.  This can optionally include CDs, but its up to the institution. Auto loans, etc. Loans that are NOT lines of credit or credit cards. Loan behind the credit card.  Note the actual card information in the card object. Loan that is a line of credit but NOT a credit card. Loan that is made in exchange for taking title of property. Investment accounts such as brokerage and this can optionally include CDs and/or money markets, but its up to the institution. This account is a special type of checking account connected to a pre-paid card. Other account type. Loan that is made in installments. Loan is typically unsecured. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Installment. Loan that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Commercial. Line of Credit that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of CommercialLineOfCredit. A general ledger account of the financial institution. A loan account type that has not been prevously defined. This enumeration is considered deprecated. Recommend using account type loan and subAccount of OtherLoan. "
        enum:
        - Checking
        - Savings
        - Loan
        - CreditCard
        - LineOfCredit
        - Mortgage
        - Investment
        - PrePaidCard
        - Other
        - Installment
        - CommercialLoan
        - CommercialLineOfCredit
        - GeneralLedger
        - OtherLoan
      accountSubType:
        type: string
        description: 'The account subtype identifies the specific account type that the back end system will recognize. '
      userDefinedName:
        type: string
        description: 'The user-defined name for payee.  Could be a nickname. '
      payeeAccountNumber:
        type: string
        description: 'The payee assigned account number associated with a member.  The number could be printed on a check or included in a memo. '
      accountHolderName:
        type: string
        description: "The name of the person for which the bill is being paid.  Typically this is the party name, however you may want to specify which party is paying the bill.  Or you may want to pay on behalf of someone else who is not on the account. "
      payeeCategory:
        type: string
        description: 'A member defined category that can be used for reporting purposes. '
      payeeStatus:
        type: string
        description: "This is enumeration of statuses for the bill payee. This value indicates that the payee is active and visible to the member. This value indicates that the payee is inactive and visible to the member. This value indicates that the payee is inactive and invisible to the member; the payee cannot be re-activated. Some type of error has occured in the process of paying this payee and payments are not successfully received, please re-verify this payee. "
        enum:
        - Active
        - Inactive
        - Deleted
        - Invalid
      defaultPaymentFromAccountId:
        type: string
        description: 'The account ID is a persistent and unique identifier for the account. It must be unique for all users across the institution and remain the same over the life of the account. '
      earlyPaymentDateTime:
        type: string
        format: datetime
        description: 'The earliest possible payment date for the Payee (if any). The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported. The time is assumed to be 00:00Z if omitted. '
      nextPaymentDateTime:
        type: string
        format: datetime
        description: 'The next payment date for the Payee in a recurring payment scenario. The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported. The time is assumed to be 00:00Z if omitted. '
      isRecurringPaymentEnabled:
        type: boolean
        description: 'True if Payee is setup for recurring payments. '
      customData:
        $ref: '#/definitions/AccessProfile_customData'
      eBillEnrollmentStatus:
        type: string
        description: 'This is enumeration of statuses for the ebill Enrollment. The user is ineligible to enroll in ebills The user is currently enrolled in ebills The user is currently not enrolled in ebills The user has a pending enrollment in progress for ebills The user has a pending unenrollment in progress for ebills The user has an unspecified error with their ebill enrollment This value can be used when no other statuses relate to the ebill enrollment '
        enum:
        - Ineligible
        - Enrolled
        - NotEnrolled
        - PendingEnrollment
        - PendingUnenrollment
        - Error
        - Other
      otherEBillEnrollmentStatus:
        type: string
        description: 'Free form text that describes the EBillEnrollmentStatus type "Other" when it is set in the eBillEnrollmentStatus element. '
  BillPayeeGlobalId:
    type: string
    description: 'The bill payee global ID is a persistent and unique identifier for the bill payee in the bill pay system. This bill payee global ID does not change from consumer to consumer. '
  BillPayeeId:
    type: string
    description: 'The bill payee ID is a persistent and unique identifier for the bill payee of the consumer. '
  BillPayeeList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      billPayee:
        type: array
        items:
          $ref: '#/definitions/BillPayee'
    description: "The bill payee collection/array contains all the payees, for instance, that the credential set is authorized to access at the Institution based on applied filters. "
  EBillEnrollmentStatus:
    type: string
    description: 'This is enumeration of statuses for the ebill Enrollment. The user is ineligible to enroll in ebills The user is currently enrolled in ebills The user is currently not enrolled in ebills The user has a pending enrollment in progress for ebills The user has a pending unenrollment in progress for ebills The user has an unspecified error with their ebill enrollment This value can be used when no other statuses relate to the ebill enrollment '
    enum:
    - Ineligible
    - Enrolled
    - NotEnrolled
    - PendingEnrollment
    - PendingUnenrollment
    - Error
    - Other
  PayeeStatus:
    type: string
    description: "This is enumeration of statuses for the bill payee. This value indicates that the payee is active and visible to the member. This value indicates that the payee is inactive and visible to the member. This value indicates that the payee is inactive and invisible to the member; the payee cannot be re-activated. Some type of error has occured in the process of paying this payee and payments are not successfully received, please re-verify this payee. "
    enum:
    - Active
    - Inactive
    - Deleted
    - Invalid
  BillPayeeFilter:
    type: object
    properties:
      billPayeeGlobalIdList:
        $ref: '#/definitions/BillPayeeFilter_billPayeeGlobalIdList'
      billPayeeIdList:
        $ref: '#/definitions/BillFilter_billFromPayeeIdList'
      partyIdList:
        $ref: '#/definitions/Account_partyIdList'
      relationshipIdList:
        $ref: '#/definitions/AccountFilter_relationshipIdList'
      accountIdList:
        $ref: '#/definitions/AccountFilter_accountIdList'
      accountStatusList:
        $ref: '#/definitions/AccountFilter_accountStatusList'
      payeeName:
        type: string
        description: "If a person, the first and last name of the person. If a business or trust, will include the business or trust name. "
      isElectronic:
        type: boolean
        description: 'True for electronic processing. False for sending a paper check. '
      userDefinedName:
        type: string
        description: 'The user-defined name for payee.  Could be a nickname. '
      payeeCategory:
        type: string
        description: 'A member defined category that can be used for reporting purposes. '
      payeeStatusList:
        $ref: '#/definitions/BillPayeeFilter_payeeStatusList'
      earlyPaymentDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
      nextPaymenDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
      payeeAddedDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
      payeeUpdatedDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
      eBillEnrollmentStatusList:
        $ref: '#/definitions/BillPayeeFilter_eBillEnrollmentStatusList'
      accountIdentificationList:
        $ref: '#/definitions/AccountFilter_accountIdentificationList'
    description: 'The list of filter options for services requesting billPayee data. The options can be used in combination or by themselves. It is up to the data source to either return or affect the data requested or return a standard error identifying why the request was rejected. '
  BillPayeeMessageDelete:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      billPayeeFilter:
        $ref: '#/definitions/BillPayeeFilter'
      billPayeeList:
        $ref: '#/definitions/BillPayeeList'
    description: Delete definition for BillPayeeMessage
  BillPayeeMessageGet:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      billPayeeFilter:
        $ref: '#/definitions/BillPayeeFilter'
    description: Get definition for BillPayeeMessage
  BillPayeeMessagePost:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      billPayeeList:
        $ref: '#/definitions/BillPayeeList'
    description: Post definition for BillPayeeMessage
  BillPayeeMessagePut:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      billPayeeFilter:
        $ref: '#/definitions/BillPayeeFilter'
      billPayeeList:
        $ref: '#/definitions/BillPayeeList'
    description: Put definition for BillPayeeMessage
  BillPayeeMessageResponse:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      billPayeeList:
        $ref: '#/definitions/BillPayeeList'
    description: Response definition for BillPayeeMessage
  BillPaymentFilter:
    type: object
    properties:
      occurrenceIdList:
        $ref: '#/definitions/BillPaymentFilter_occurrenceIdList'
      recurringIdList:
        $ref: '#/definitions/BillPaymentFilter_recurringIdList'
      transferCompletedDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
      accountIDList:
        $ref: '#/definitions/AccountFilter_accountIdList'
      accountStatusList:
        $ref: '#/definitions/AccountFilter_accountStatusList'
      partyIdList:
        $ref: '#/definitions/Account_partyIdList'
      relationshipIdList:
        $ref: '#/definitions/AccountFilter_relationshipIdList'
      occurrenceStatusList:
        $ref: '#/definitions/BillPaymentFilter_occurrenceStatusList'
      recurringStatusList:
        $ref: '#/definitions/BillPaymentFilter_recurringStatusList'
      minAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      maxAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      batchIdList:
        $ref: '#/definitions/BillPaymentFilter_batchIdList'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
      accountIdentificationList:
        $ref: '#/definitions/AccountFilter_accountIdentificationList'
      includeNotesFlag:
        type: boolean
        description: "If this is not provided, it will not return notes. If it is provided and its true, it will return all active non-expired notes. "
      billPayeeIdList:
        $ref: '#/definitions/BillFilter_billFromPayeeIdList'
      billIdList:
        $ref: '#/definitions/BillFilter_billIdList'
      recurringFromAccountList:
        $ref: '#/definitions/BillPaymentFilter_recurringFromAccountList'
      recurringToAccountList:
        $ref: '#/definitions/BillPaymentFilter_recurringToAccountList'
      createRequestDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
      firstScheduledDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
      lastModifiedDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
      nextScheduledDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
      scheduleEndDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
      completedEndDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
    description: 'The list of filter options for services requesting bill payment data. The options can be used in combination or by themselves. It is up to the data source to either return or affect the data requested or return a standard error identifying why the request was rejected. All fields from fundsTransferFilterBase are included. If this filter is applied to a BillPaymentOccurrence service call then it will return back any and all BillPaymentOccurrence data associated to either the occurrences or recurring filters that were applied. If this filter is applied to a BillPaymentRecurring service call then it will return back any and all BillPaymentRecurring data associated to either the occurrences or recurring filters that were applied. '
  BillPaymentOccurrence:
    type: object
    properties:
      occurrenceId:
        type: string
        description: 'The occurrence ID to uniquely identify the occurrence of a payment or transfer. '
      recurringId:
        type: string
        description: 'ID to uniquely identify a recurring payment or transfer request. '
      occurrenceAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      occurrenceAmountDetailList:
        $ref: '#/definitions/BillPaymentOccurrence_occurrenceAmountDetailList'
      occurrenceFromAccount:
        $ref: '#/definitions/BillPaymentOccurrence_occurrenceFromAccount'
      occurrenceToAccount:
        $ref: '#/definitions/BillPaymentOccurrence_occurrenceFromAccount'
      occurrenceStatus:
        type: string
        description: "This is the enumeration of statuses for payments or transfers. The payment or transfer is in the process for immediate or future payment and is cancellable by the party since its not InProcess yet. The payment or transfer is in process and is no longer cancellable, but it has not been sent. A payment or transfer was requested to be cancelled by the party but has not yet been cancelled. A payment or transfer has been cancelled at the request of the originating partys financial institution. A payment or transfer has been cancelled at the request of the processor. Example is case of bill pay this would be the bill payment processor. A payment or transfer has been cancelled. Payment or transfer has been sent to the payee but has not been received yet. The payment or transfer transaction has been cleared/completed by the financial institution. The payment or transfer was declined (for instance, in the case that a debit or card was used as the funding source). The funds have been transferred to the payment processor but have not yet arrived at the payment processor. The funds for the payment or transfer have been received by the payment processor but the actual payment hasnt cleared at the payee. The payment or transfer has been held by the payment processor and has not been sent to the payee. The payment or transfer has attempted to clear the financial institution account but there was not enough funds available. Payment or transfer was returned by the payee and not cleared. Payment or transfer was scheduled for recurring payment but has been suspended until taken out of suspended status. "
        enum:
        - Scheduled
        - InProcess
        - CancelRequestedByParty
        - CancelRequestedByFinancialInstitution
        - CancelRequestedByProcessor
        - Cancelled
        - Sent
        - Completed
        - Declined
        - FundsOutbound
        - FundsCleared
        - Held
        - InsufficientFunds
        - Returned
        - Suspended
      fundsWithdrawalType:
        type: string
        description: 'This is the enumeration of statuses for a recurring payment or transfer request . The funds will be pulled out of the account at the time that the payment or transfer request is made each time that the occurrence happens.  For example in a good funds model in bill payment. The funds will be pulled out of the account at the time that the payment or transfer clears the account each time that the occurrence happens.  For example a check. '
        enum:
        - WhenRequested
        - WhenCleared
      occurrenceMemo:
        type: string
        description: 'The memo represents a short description that can be applied to the comment of the transaction or printed on a check. '
      estimatedProcessDateTime:
        type: string
        format: datetime
        description: 'The date on which to process the payment or transfer.  This date can be in the future. The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      createdDateTime:
        type: string
        format: datetime
        description: 'The date that the user submitted the payment or transfer. The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      processingStartedDateTime:
        type: string
        format: datetime
        description: 'The date on which the payment or transfer processing started. The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      processedDateTime:
        type: string
        format: datetime
        description: 'The date on which the payment or transfer was actually processed by the system. The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      completedDateTime:
        type: string
        format: datetime
        description: 'Date on which the core completed the payment or transfer. The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      lastUpdatedDateTime:
        type: string
        format: datetime
        description: 'Date of the last known status of the payment or transfer. The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      occurrenceConfirmationCode:
        type: string
        description: 'Unique confirmation code for the requested payment or transfer. '
      queuedForPosting:
        type: boolean
        description: 'Indicates whether the payment or transfer is pending for posting until system is on-line. '
      note:
        type: string
        description: 'A users "note to self." '
      batchId:
        type: string
        description: 'The BatchId is a persistent and unique identifier for a group of payments or transfers processed at the same time. '
      occurrenceType:
        type: string
        description: "This is the enumeration of transfer occurrence types for a payment or transfer request . Transfer funds between accounts generally an intra-instiution transfer. Transfer funds to a check. For example, member requests a check payable to the member to be mailed to the members home address. Transfer funds to an account at another financial institution for purposes of validating the external account. For example, use with account micro deposits via ACH. "
        enum:
        - AccountToAccount
        - CheckWithdrawal
        - AccountValidation
      customData:
        $ref: '#/definitions/AccessProfile_customData'
      achStandardEntryClass:
        type: string
        description: 'Acknowledgment Entry. Financial EDI Acknowledgment. Accounts Receivable Entry. Back Office Conversion Entry. Corporate Credit Debit Entry. Customer-Initiated Entry. Notification of Change or Refused Notification of Change. Corporate Trade Exchange. Death Notification Entry. Automated Enrollment Entry. International ACH Transaction. Machine Transfer Entry. Point of Purchase Entry. Prearranged Payment and Deposit Entry. Re-Presented Check Entry. Telephone Initiated Entry. Truncated Entry. Truncated Entries Exchange. Internet Initiated Entry. Destroyed Check Entry. '
        enum:
        - ACK
        - ATX
        - ARC
        - BOC
        - CCD
        - CIE
        - COR
        - CTX
        - DNE
        - ENR
        - IAT
        - MTE
        - POP
        - PPD
        - RCK
        - TEL
        - TRC
        - TRX
        - WEB
        - XCK
      billPayeeId:
        type: string
        description: 'The bill payee ID is a persistent and unique identifier for the bill payee of the consumer. '
      billId:
        type: string
        description: 'The bill ID is a persistent and unique identifier for the bill from payee. '
      expectedDebitDateTime:
        type: string
        format: datetime
        description: 'The expected debit date of bill payment. The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      paymentClearedDateTime:
        type: string
        format: datetime
        description: 'The date that the bill payment or check was received and processed. The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      isStopRequested:
        type: boolean
        description: 'True if the payment has had a stop payment requested; false if a stop payment has not been requested. '
      checkStoppedDate:
        type: string
        format: datetime
        description: 'The date that the bill payment was stopped. The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      nsfCount:
        type: integer
        description: 'The number of times that the bill payment has failed to process due to insufficient funds. '
      checkNumber:
        type: string
        description: 'The number on the face of the check indicating the id of that check in a series. '
  BillPaymentOccurrenceList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      billPaymentOccurrence:
        type: array
        items:
          $ref: '#/definitions/BillPaymentOccurrence'
    description: "The bill payment collection/array contains all the bills, for instance, that the credential set is authorized to access at the Institution based on applied filters "
  BillPaymentOccurrenceMessageDelete:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      billPaymentFilter:
        $ref: '#/definitions/BillPaymentFilter'
      billPaymentList:
        $ref: '#/definitions/BillPaymentOccurrenceList'
    description: Delete definition for BillPaymentOccurrenceMessage
  BillPaymentOccurrenceMessageGet:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      billPaymentFilter:
        $ref: '#/definitions/BillPaymentFilter'
    description: Get definition for BillPaymentOccurrenceMessage
  BillPaymentOccurrenceMessagePost:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      billPaymentList:
        $ref: '#/definitions/BillPaymentOccurrenceList'
    description: Post definition for BillPaymentOccurrenceMessage
  BillPaymentOccurrenceMessagePut:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      billPaymentFilter:
        $ref: '#/definitions/BillPaymentFilter'
      billPaymentList:
        $ref: '#/definitions/BillPaymentOccurrenceList'
    description: Put definition for BillPaymentOccurrenceMessage
  BillPaymentOccurrenceMessageResponse:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      billPaymentList:
        $ref: '#/definitions/BillPaymentOccurrenceList'
    description: Response definition for BillPaymentOccurrenceMessage
  BillPaymentRecurring:
    type: object
    properties:
      recurringId:
        type: string
        description: 'ID to uniquely identify a recurring payment or transfer request. '
      recurringAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      recurringAmountDetailList:
        $ref: '#/definitions/BillPaymentOccurrence_occurrenceAmountDetailList'
      recurringFromAccount:
        $ref: '#/definitions/BillPaymentOccurrence_occurrenceFromAccount'
      recurringToAccount:
        $ref: '#/definitions/BillPaymentOccurrence_occurrenceFromAccount'
      recurringStatus:
        type: string
        description: "This is the enumeration of statuses for a recurring payment or transfer request . The payment or transfer request is in process for immediate or future payment and is still cancellable by the party since its not InProcess yet. The recurring payment or transfer request has been scheduled. A recurring payment or transfer request was requested to be cancelled by the party, but has not yet been cancelled. A recurring payment or transfer request was requested to be cancelled by the partys financial institution. A recurring payment or transfer request was requested to be cancelled by the partys payment provider. A recurring payment or transfer request has been cancelled. All recurring payments or transfer requests have been completed. Payment or transfer request was scheduled for recurring payment but has been suspended until taken out of suspended status.  This status might be used if a party wants to keep the payment/transfer request in the system but temporarily stop payment or transfers from occurring. "
        enum:
        - Requested
        - Active
        - CancelRequestedByParty
        - CancelRequestedByFinancialInstitution
        - CancelRequestedByPaymentProvider
        - Cancelled
        - Completed
        - Suspended
      recurringMemo:
        type: string
        description: 'The memo represents a short description that can be applied to each comment of the transaction or printed on a check. '
      isElectronic:
        type: boolean
        description: "True for electronic processing, false for sending a paper check. "
      isOpenEnded:
        type: boolean
        description: 'True for payments with no end date; false if there is an end date for payment. '
      isCompleted:
        type: boolean
        description: 'True if the recurring payment or transfer has not been deleted and the end date has passed; false if the recurring payment or transfer has not been deleted and the end date has not been reached. '
      isUserDeleted:
        type: boolean
        description: 'True if the recurring payment or transfer has been deleted; false if not deleted. '
      createdByFiUserId:
        type: string
        description: "FiUserId is a unique identifier for the credential group and is readable by the person. The person types this into systems to gain access, also using their password, PIN or whatever else is required to gain access. "
      frequency:
        type: string
        description: 'Frequency of the recurring transfer or payment. '
        enum:
        - AmortizedSchedule
        - Annual
        - AtMaturity
        - Bimonthly
        - Biweekly
        - BiweeklySkipFirst
        - BiweeklySkipLast
        - Daily
        - EventTrigger
        - Hourly
        - Immediate
        - Monthly
        - None
        - OneTime
        - Other
        - PerUse
        - Quarterly
        - SemiAnnual
        - SemiMonthly
        - Triannual
        - Weekly
        - WeeklySkipFirst
        - WeeklySkipLast
        - XDays
        - XMonths
        - XYears
      totalPaymentCount:
        type: integer
        description: 'The total number of recurring payments to be made. '
      paymentsLeft:
        type: integer
        description: 'The number of remaining recurring payments to be made. '
      fundsWithdrawalType:
        type: string
        description: 'This is the enumeration of statuses for a recurring payment or transfer request . The funds will be pulled out of the account at the time that the payment or transfer request is made each time that the occurrence happens.  For example in a good funds model in bill payment. The funds will be pulled out of the account at the time that the payment or transfer clears the account each time that the occurrence happens.  For example a check. '
        enum:
        - WhenRequested
        - WhenCleared
      createRequestDateTime:
        type: string
        format: datetime
        description: "The date on which the recurring transfer or payment request was created. The date/time should be ISO 8601 UTC format:  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. "
      firstScheduledDateTime:
        type: string
        format: datetime
        description: 'The first date of recurring payment or transfer. The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      lastModifiedDate:
        type: string
        format: datetime
        description: 'The last modified date of the recurring payment or transfer schedule. The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      nextScheduledDateTime:
        type: string
        format: datetime
        description: 'The next date of the recurring payment or transfer schedule. The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      scheduledEndDateTime:
        type: string
        format: datetime
        description: 'The last possible date and time that a scheduled transfer or payment may be executed. The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      completedDateTime:
        type: string
        format: datetime
        description: 'The date that all the scheduled transfers or payments are completed. The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      recurringConfirmationCode:
        type: string
        description: 'Unique confirmation code for the scheduled recurring transfer or payment. '
      recurringOccurrenceIdList:
        $ref: '#/definitions/BillPaymentFilter_occurrenceIdList'
      initialAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      finalAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
      achStandardEntryClass:
        type: string
        description: 'Acknowledgment Entry. Financial EDI Acknowledgment. Accounts Receivable Entry. Back Office Conversion Entry. Corporate Credit Debit Entry. Customer-Initiated Entry. Notification of Change or Refused Notification of Change. Corporate Trade Exchange. Death Notification Entry. Automated Enrollment Entry. International ACH Transaction. Machine Transfer Entry. Point of Purchase Entry. Prearranged Payment and Deposit Entry. Re-Presented Check Entry. Telephone Initiated Entry. Truncated Entry. Truncated Entries Exchange. Internet Initiated Entry. Destroyed Check Entry. '
        enum:
        - ACK
        - ATX
        - ARC
        - BOC
        - CCD
        - CIE
        - COR
        - CTX
        - DNE
        - ENR
        - IAT
        - MTE
        - POP
        - PPD
        - RCK
        - TEL
        - TRC
        - TRX
        - WEB
        - XCK
      billPayeeId:
        type: string
        description: 'The bill payee ID is a persistent and unique identifier for the bill payee of the consumer. '
      nextDebitDateTime:
        type: string
        format: datetime
        description: 'This is the date the funds are withdrawn from the account in order to ensure that the bill payment is valid and has sufficient funds.  Check payments may have different calculated dates than EFT payments due to the different lead times between the preparation of a physical check and an EFT and the effect of business holidays and weekends. The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      billId:
        type: string
        description: 'The bill ID is a persistent and unique identifier for the bill from payee. '
    description: 'Foreign keys to party and relationship are bound through the from account id of the bill payment recurring record. The status of each individual bill payment occurrence can be found through the funds transfer recurring occurrenceIDlist. '
  BillPaymentRecurringList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      billPaymentRecurring:
        type: array
        items:
          $ref: '#/definitions/BillPaymentRecurring'
    description: "The bill payment collection/array contains all the recurring bills, for instance, that the credential set is authorized to access at the Institution based on applied filters "
  BillPaymentRecurringMessageDelete:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      billPaymentFilter:
        $ref: '#/definitions/BillPaymentFilter'
      billPaymentRecurringList:
        $ref: '#/definitions/BillPaymentRecurringList'
    description: Delete definition for BillPaymentRecurringMessage
  BillPaymentRecurringMessageGet:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      billPaymentFilter:
        $ref: '#/definitions/BillPaymentFilter'
    description: Get definition for BillPaymentRecurringMessage
  BillPaymentRecurringMessagePost:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      billPaymentRecurringList:
        $ref: '#/definitions/BillPaymentRecurringList'
    description: Post definition for BillPaymentRecurringMessage
  BillPaymentRecurringMessagePut:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      billPaymentFilter:
        $ref: '#/definitions/BillPaymentFilter'
      billPaymentRecurringList:
        $ref: '#/definitions/BillPaymentRecurringList'
    description: Put definition for BillPaymentRecurringMessage
  BillPaymentRecurringMessageResponse:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      billPaymentRecurringList:
        $ref: '#/definitions/BillPaymentRecurringList'
    description: Response definition for BillPaymentRecurringMessage
  Card:
    type: object
    properties:
      cardId:
        type: string
        description: 'The card ID is a persistent and unique identifier for the card. It must be unique for all users across the institution and remain the same over the life of the card. The card ID should not be the same as the card number embossed on the card. '
      cardNumber:
        type: string
        description: "The card number is the visible sequence of numbers that appear on the card. It is up to the end points to determine if the card number can/should be transmitted. It is up to the end points to determine the encryption methodology, if required. It must be unique for all users across the institution and remain the same over the life of the card. "
      cardType:
        type: string
        description: 'Enumeration of the different types of cards. '
        enum:
        - Atm
        - Credit
        - Debit
        - HomeEquity
        - Prepaid
      cardSubType:
        type: string
        description: "Specifies the \"flavor\" of the card (ie: platinum, sports team branded, etc.). "
      expirationDate:
        type: string
        format: date
        description: 'Expiration date is either the expiration date that is calculated by the card data provider or the expiration date that is provided in the creation of the card. It is up to the end points to determine if the expiration date can/should be transmitted. '
      pin:
        type: string
        description: "PIN is the 4 digit security code that is used to authenticate the user and allow them access to the associated accounts of the card. It is up to the end points to determine if the PIN can/should be transmitted. It is up to the end points to determine the encryption methodology, if required. The PIN is provided as a string in case encryption has been utilized. "
      cvv2:
        type: string
        description: "cvv2 is the 3 or 4 digit security code that is printed on the back of the card. This field is typically read-only because it is generated 2-3 days after the card is requested to be printed. It is up to the end points to determine if the CVV2 date can/should be transmitted. It is up to the end points to determine the encryption methodology, if required. The CVV2 is provided as a string in case encryption has been utilized. "
      linkedAccountList:
        $ref: '#/definitions/Card_linkedAccountList'
      partyId:
        type: string
        description: 'The party ID is a persistent and unique identifier for the party not related to the accounts they own but tied to that person or organization. It should be unique for all parties across the institution and remain the same over the life of the relationship with the financial institution. '
      overrideAddressContactId:
        type: string
        description: 'Unique identifier within system to uniquely identify this contact point. '
      cardAddress:
        $ref: '#/definitions/Account_externalAccountBankAddress'
      nameOnCard:
        type: string
        description: 'Specifies the name on the card if overriding the name from the party. 0 instances - means use the party formatted name. 1st instance - use as line one. 2nd instance - use as line two. '
      activationDateTime:
        type: string
        format: datetime
        description: 'Specifies the date when the card was activated. '
      cardStatus:
        type: string
        description: 'Enumeration of the different types of statuses for a card. The card has been disabled typically controlled by the FI. Card is to be captured and destroyed at next presentation. The card has been disabled typically controlled by the card owner. '
        enum:
        - Active
        - AssignPIN
        - Blocked
        - Closed
        - Expedite
        - Expired
        - HotCarded
        - Inactive
        - Issued
        - Lost
        - ReadOnly
        - Restricted
        - Stolen
        - Suspended
        - Other
      blockedReason:
        type: string
        description: "For a blocked card, specifies the reason for the block. Element deprecated in favor of cardStatusReason. "
      blockedDateTime:
        type: string
        format: datetime
        description: "For a blocked card, specifies the date on which the card was blocked. Element deprecated in favor of cardStatusDateTime. "
      cardStatusDateTime:
        type: string
        format: datetime
        description: 'The date and time the current card status was applied. '
      cardStatusReason:
        type: string
        description: 'Specifies the reason for the current card status. '
      virtualNumber:
        type: string
        description: 'The virtual number associated with the card. '
      merchantCountryCodes:
        $ref: '#/definitions/Card_merchantCountryCodes'
      cardDesignImageArtifactId:
        $ref: '#/definitions/Artifact_artifactId'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
  CardId:
    type: string
    description: 'The card ID is a persistent and unique identifier for the card. It must be unique for all users across the institution and remain the same over the life of the card. The card ID should not be the same as the card number embossed on the card. '
  CardList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      card:
        type: array
        items:
          $ref: '#/definitions/Card'
    description: "The cards collection/array contains all the cards, for instance, that the credential set is authorized to access at the Institution based on applied filters. "
  CardStatus:
    type: string
    description: 'Enumeration of the different types of statuses for a card. The card has been disabled typically controlled by the FI. Card is to be captured and destroyed at next presentation. The card has been disabled typically controlled by the card owner. '
    enum:
    - Active
    - AssignPIN
    - Blocked
    - Closed
    - Expedite
    - Expired
    - HotCarded
    - Inactive
    - Issued
    - Lost
    - ReadOnly
    - Restricted
    - Stolen
    - Suspended
    - Other
  CardType:
    type: string
    description: 'Enumeration of the different types of cards. '
    enum:
    - Atm
    - Credit
    - Debit
    - HomeEquity
    - Prepaid
  LinkedAccount:
    type: object
    properties:
      accountId:
        type: string
        description: 'The account ID is a persistent and unique identifier for the account. It must be unique for all users across the institution and remain the same over the life of the account. '
      priority:
        type: integer
        format: positiveInteger
        description: "Indicates the priority order of the account.  Priority 1 is the first account to hit, priority 2 is the second account to try, etc. "
      accountType:
        type: string
        description: "Checking account, i.e., checks can be written against the account. Money market accounts can be included here or in money markets.  Its up to the institution. Savings and club accounts.  This can optionally include CDs, but its up to the institution. Auto loans, etc. Loans that are NOT lines of credit or credit cards. Loan behind the credit card.  Note the actual card information in the card object. Loan that is a line of credit but NOT a credit card. Loan that is made in exchange for taking title of property. Investment accounts such as brokerage and this can optionally include CDs and/or money markets, but its up to the institution. This account is a special type of checking account connected to a pre-paid card. Other account type. Loan that is made in installments. Loan is typically unsecured. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Installment. Loan that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Commercial. Line of Credit that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of CommercialLineOfCredit. A general ledger account of the financial institution. A loan account type that has not been prevously defined. This enumeration is considered deprecated. Recommend using account type loan and subAccount of OtherLoan. "
        enum:
        - Checking
        - Savings
        - Loan
        - CreditCard
        - LineOfCredit
        - Mortgage
        - Investment
        - PrePaidCard
        - Other
        - Installment
        - CommercialLoan
        - CommercialLineOfCredit
        - GeneralLedger
        - OtherLoan
      accountSubType:
        type: string
        description: 'The account subtype identifies the specific account type that the back end system will recognize. '
    description: 'A deposit or loan account that is accessible by the card. '
  CardFilter:
    type: object
    properties:
      cardIdList:
        $ref: '#/definitions/CardFilter_cardIdList'
      partyIdList:
        $ref: '#/definitions/Account_partyIdList'
      accountIdList:
        $ref: '#/definitions/AccountFilter_accountIdList'
      accountStatusList:
        $ref: '#/definitions/AccountFilter_accountStatusList'
      cardTypeList:
        $ref: '#/definitions/CardFilter_cardTypeList'
      cardStatusList:
        $ref: '#/definitions/CardFilter_cardStatusList'
      activationDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
      expirationDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
      blockedDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
      accountIdentificationList:
        $ref: '#/definitions/AccountFilter_accountIdentificationList'
    description: 'The list of filter options for services requesting card data. The options can be used in combination or by themselves. It is up to the data source to either return or affect the data requested or return a standard error identifying why the request was rejected. '
  CardMessageDelete:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      cardFilter:
        $ref: '#/definitions/CardFilter'
      cardList:
        $ref: '#/definitions/CardList'
    description: Delete definition for CardMessage
  CardMessageGet:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      cardFilter:
        $ref: '#/definitions/CardFilter'
    description: Get definition for CardMessage
  CardMessagePost:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      cardList:
        $ref: '#/definitions/CardList'
    description: Post definition for CardMessage
  CardMessagePut:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      cardFilter:
        $ref: '#/definitions/CardFilter'
      cardList:
        $ref: '#/definitions/CardList'
    description: Put definition for CardMessage
  CardMessageResponse:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      cardList:
        $ref: '#/definitions/CardList'
    description: Response definition for CardMessage
  Category:
    type: object
    properties:
      categoryId:
        type: string
        description: "An identifier for the category. Must be unique within the list of categories. May be a serial number or letter (1, 2, 3 or A, B, C), a GUID, or other identifier. "
      categoryName:
        type: string
        description: 'A human-readable name of the category. '
      categoryDescription:
        type: string
        description: 'Description of the category. '
      categoryType:
        type: string
        description: "The human-readable string describing the type of category. For example: Payee, Transaction, etc. "
      isCategoryActive:
        type: boolean
        description: 'Is category active.  This will allow specific categories to not be shown if they are not active yet or after they have been closed out. '
      parentCategoryId:
        type: string
        description: "An identifier for the category. Must be unique within the list of categories. May be a serial number or letter (1, 2, 3 or A, B, C), a GUID, or other identifier. "
      imageId:
        type: string
        description: 'An identifier for image related to the category '
      customData:
        $ref: '#/definitions/AccessProfile_customData'
    description: 'General purpose definition describing a categorization. '
  CategoryId:
    type: string
    description: "An identifier for the category. Must be unique within the list of categories. May be a serial number or letter (1, 2, 3 or A, B, C), a GUID, or other identifier. "
  CategoryList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      category:
        type: array
        items:
          $ref: '#/definitions/Category'
    description: 'The categories collection/array contains all the categories for a specified request. '
  CategoryType:
    type: string
    description: "The human-readable string describing the type of category. For example: Payee, Transaction, etc. "
  CategoryFilter:
    type: object
    properties:
      categoryIdList:
        $ref: '#/definitions/CategoryFilter_categoryIdList'
      categoryTypeList:
        $ref: '#/definitions/CategoryFilter_categoryTypeList'
      returnChildrenCategories:
        type: boolean
        description: 'When True return all children categories associated to the parent category IDs. '
      customData:
        $ref: '#/definitions/AccessProfile_customData'
    description: 'The list of filter options for services requesting category data.  The options can be used in combination or by themselves. It is up to the data source to either return the data requested or return a standard error identifying why the request was rejected. '
  CategoryMessageDelete:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      categoryFilter:
        $ref: '#/definitions/CategoryFilter'
      categoryList:
        $ref: '#/definitions/CategoryList'
    description: Delete definition for CategoryMessage
  CategoryMessageGet:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      categoryFilter:
        $ref: '#/definitions/CategoryFilter'
    description: Get definition for CategoryMessage
  CategoryMessagePost:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      categoryList:
        $ref: '#/definitions/CategoryList'
    description: Post definition for CategoryMessage
  CategoryMessagePut:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      categoryFilter:
        $ref: '#/definitions/CategoryFilter'
      categoryList:
        $ref: '#/definitions/CategoryList'
    description: Put definition for CategoryMessage
  CategoryMessageResponse:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      categoryList:
        $ref: '#/definitions/CategoryList'
    description: Response definition for CategoryMessage
  Collateral:
    type: object
    properties:
      motorVehicleCollateral:
        $ref: '#/definitions/Collateral_motorVehicleCollateral'
      aircraftCollateral:
        $ref: '#/definitions/Collateral_aircraftCollateral'
      shipCollateral:
        $ref: '#/definitions/Collateral_shipCollateral'
      trailerCollateral:
        $ref: '#/definitions/Collateral_trailerCollateral'
      boatCollateral:
        $ref: '#/definitions/Collateral_boatCollateral'
      otherTitledCollateral:
        $ref: '#/definitions/Collateral_otherTitledCollateral'
      mobileHomeCollateral:
        $ref: '#/definitions/Collateral_mobileHomeCollateral'
      realEstateCollateral:
        $ref: '#/definitions/Collateral_realEstateCollateral'
      uccCollateral:
        $ref: '#/definitions/Collateral_uccCollateral'
      savingsCDCollateral:
        $ref: '#/definitions/Collateral_savingsCDCollateral'
      securitiesCollateral:
        $ref: '#/definitions/Collateral_securitiesCollateral'
      letterOfCreditCollateral:
        $ref: '#/definitions/Collateral_letterOfCreditCollateral'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
    description: "Intended choice - Due to cross language serialization issues the choice construct has been removed. It is the responsibility of the implementer to add programmatic logic for this complex type to detect, handle and or error when population of more than one element is present. Details related to specific collateral for a loan. "
  CollateralId:
    type: string
    description: 'The collateral ID is a persistent and unique identifier for the collateral item. '
  CollateralList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      collateral:
        type: array
        description: 'Details related to specific collateral for a loan. '
        items:
          $ref: '#/definitions/Collateral'
    description: 'List of collateral returned from a data pull that was based on filters that were applied. '
  CollateralSubType:
    type: string
    description: 'The collateralSubType supports discreet sub classifications of the collateral by an institution. '
  CollateralType:
    type: string
    description: 'The type of collateral. '
    enum:
    - aircraftCollateral
    - boatCollateral
    - letterOfCreditCollateral
    - mobileHomeCollateral
    - motorVehicleCollateral
    - otherTitledCollateral
    - realEstateCollateral
    - savingsCDCollateral
    - securitiesCollateral
    - shipCollateral
    - trailerCollateral
    - uccCollateral
  CollateralFilter:
    type: object
    properties:
      collateralIdList:
        $ref: '#/definitions/CollateralFilter_collateralIdList'
      description:
        type: string
        description: 'Description of the type of collateral/security. '
      customData:
        $ref: '#/definitions/AccessProfile_customData'
      collateralTypeList:
        $ref: '#/definitions/CollateralFilter_collateralTypeList'
      collateralSubTypeList:
        $ref: '#/definitions/CollateralFilter_collateralSubTypeList'
      accountIdList:
        $ref: '#/definitions/AccountFilter_accountIdList'
      accountIdentificationList:
        $ref: '#/definitions/AccountFilter_accountIdentificationList'
    description: 'The list of filter options for services requesting collateral data.  The options can be used in combination or by themselves.  It is up to the data source to either return or affect the data requested or return a standard error identifying why the request was rejected. '
  CollateralMessageDelete:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      collateralFilter:
        $ref: '#/definitions/CollateralFilter'
      collateralList:
        $ref: '#/definitions/CollateralList'
    description: Delete definition for CollateralMessage
  CollateralMessageGet:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      collateralFilter:
        $ref: '#/definitions/CollateralFilter'
    description: Get definition for CollateralMessage
  CollateralMessagePost:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      collateralList:
        $ref: '#/definitions/CollateralList'
    description: Post definition for CollateralMessage
  CollateralMessagePut:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      collateralFilter:
        $ref: '#/definitions/CollateralFilter'
      collateralList:
        $ref: '#/definitions/CollateralList'
    description: Put definition for CollateralMessage
  CollateralMessageResponse:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      collateralList:
        $ref: '#/definitions/CollateralList'
    description: Response definition for CollateralMessage
  Address:
    type: object
    properties:
      line1:
        type: string
        description: 'Street address (Physical Address). '
      line2:
        type: string
        description: "Additional Address Information.  Typically contains additional information such as an apartment number, etc. "
      line3:
        type: string
        description: 'Additional Address Information. '
      line4:
        type: string
        description: 'Additional Address Information. '
      line5:
        type: string
        description: 'Additional Address Information. '
      line6:
        type: string
        description: 'Additional Address Information. '
      line7:
        type: string
        description: 'Additional Address Information. '
      line8:
        type: string
        description: 'Additional Address Information. '
      line9:
        type: string
        description: 'Additional Address Information. '
      line10:
        type: string
        description: 'Additional Address Information. '
      city:
        type: string
        description: 'City where party resides. '
      stateProvince:
        type: string
        description: 'State or province (international) where party resides. '
      postalCode:
        type: string
        description: 'Postal code or zip code where party resides. '
      countryCode:
        type: string
        description: ISO 3166-1  Year 2006 /xs:documentation
        enum:
        - AD
        - AE
        - AF
        - AG
        - AI
        - AL
        - AM
        - AN
        - AO
        - AQ
        - AR
        - AS
        - AT
        - AU
        - AW
        - AX
        - AZ
        - BA
        - BB
        - BD
        - BE
        - BF
        - BG
        - BH
        - BI
        - BJ
        - BL
        - BM
        - BN
        - BO
        - BR
        - BS
        - BT
        - BV
        - BW
        - BY
        - BZ
        - CA
        - CC
        - CD
        - CF
        - CG
        - CH
        - CI
        - CK
        - CL
        - CM
        - CN
        - CO
        - CR
        - CU
        - CV
        - CX
        - CY
        - CZ
        - DE
        - DJ
        - DK
        - DM
        - DO
        - DZ
        - EC
        - EE
        - EG
        - EH
        - ER
        - ES
        - ET
        - FI
        - FJ
        - FK
        - FM
        - FO
        - FR
        - GA
        - GB
        - GD
        - GE
        - GF
        - GG
        - GH
        - GI
        - GL
        - GM
        - GN
        - GP
        - GQ
        - GR
        - GS
        - GT
        - GU
        - GW
        - GY
        - HK
        - HM
        - HN
        - HR
        - HT
        - HU
        - ID
        - IE
        - IL
        - IM
        - IN
        - IO
        - IQ
        - IR
        - IS
        - IT
        - JE
        - JM
        - JO
        - JP
        - KE
        - KG
        - KH
        - KI
        - KM
        - KN
        - KP
        - KR
        - KW
        - KY
        - KZ
        - LA
        - LB
        - LC
        - LI
        - LK
        - LR
        - LS
        - LT
        - LU
        - LV
        - LY
        - MA
        - MC
        - MD
        - ME
        - MF
        - MG
        - MH
        - MK
        - ML
        - MM
        - MN
        - MO
        - MP
        - MQ
        - MR
        - MS
        - MT
        - MU
        - MV
        - MW
        - MX
        - MY
        - MZ
        - NA
        - NC
        - NE
        - NF
        - NG
        - NI
        - NL
        - "NO"
        - NP
        - NR
        - NU
        - NZ
        - OM
        - PA
        - PE
        - PF
        - PG
        - PH
        - PK
        - PL
        - PM
        - PN
        - PR
        - PS
        - PT
        - PW
        - PY
        - QA
        - RE
        - RO
        - RS
        - RU
        - RW
        - SA
        - SB
        - SC
        - SD
        - SE
        - SG
        - SH
        - SI
        - SJ
        - SK
        - SL
        - SM
        - SN
        - SO
        - SR
        - ST
        - SV
        - SY
        - SZ
        - TC
        - TD
        - TF
        - TG
        - TH
        - TJ
        - TK
        - TL
        - TM
        - TN
        - TO
        - TR
        - TT
        - TV
        - TW
        - TZ
        - UA
        - UG
        - UM
        - US
        - UY
        - UZ
        - VA
        - VC
        - VE
        - VG
        - VI
        - VN
        - VU
        - WF
        - WS
        - YE
        - YT
        - ZA
        - ZM
        - ZW
      country:
        type: string
        description: 'Country where party resides. This is typically read-only as it is recommended to be calculated based on the Country Code. Description based on the ISO 3166 2 Character Country Code. Back end systems can translate this to a description from the country code. '
      coordinate:
        $ref: '#/definitions/Account_externalAccountBankAddress_coordinate'
    description: 'Fields related to address contact points. '
  CheckNumber:
    type: string
    description: 'The number on the face of the check indicating the id of that check in a series. '
  DateRange:
    type: object
    properties:
      startDateTime:
        type: string
        format: datetime
        description: 'The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      endDateTime:
        type: string
        format: datetime
        description: 'The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
    description: "Date range is used to search using startDateTime and endDateTime pairs.  If used for transactions, indicates UTC posted date and times unless otherwise specified where the object is implemented. If the range is not supplied and used in a filter, the response returns all records. If startDateTime and endDateTime are specified the result will return only items between the two dates, the startDateTime must be before or the same as the endDateTime. If startDateTime is specified and endDateTime is not specfied the result will return all items after the startDateTime. If startDateTime is not specified and endDateTime is specified the result will return all items before the endDateTime. If neither startDateTime or endDateTime are present, date criteria will not be applied. "
  Environment:
    type: string
    description: "Indicates the environment in which the message should be executed. Depends upon agreements between endpoints what is passed for each environment. Examples might be: Dev, QAInternal, UAT, Training, Sandbox, Production. "
  FinancialInstitutionId:
    type: string
    description: "The financial institution ID  is used by systems to uniquely identify each financial institution. This ID is determined outside of the process and stored in each system of record, e.g. local application database, vendor configuration file, FI core database, etc. This is helpful for applications that are multi-tenant and  service more than one financial institution. See dataSourceId for more information about multiple data sources for a single FI. A standard error will be returned if the FIID is not provided when it is required. "
  Language:
    type: string
    description: 'Specifies a valid language-region.  For example en-us. http://www.iana.org/assignments/language-subtag-registry '
  LineItem:
    type: object
    properties:
      lineItemId:
        type: string
        description: "The line item identification number. If provided, each line item id should be unique. "
      lineItemReference:
        type: string
        description: 'The line item reference. Provides for alternate cross reference. '
      lineItemDescription:
        type: string
        description: 'The description of the line item. '
      lineItemDate:
        type: string
        format: date
        description: 'The date the line item was applied to the total amount. '
      lineItemAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
    description: 'Describes individual line item amounts. '
  NetworkNodeId:
    type: string
    description: 'The unique identifier created by the system and or the network node for identification. '
  Note:
    type: object
    properties:
      noteId:
        type: string
        description: 'The note ID is a persistent and unique identifier for the note. It must be unique within the account. '
      recordType:
        type: string
        description: 'Enumeration of the different types of top-level records. '
        enum:
        - Account
        - Application
        - Loan
        - Portfolio
        - Deposit
        - ProductServiceRequest
        - Relationship
        - Request
        - Activity
        - Transaction
        - Transfer
        - TransferOccurrence
        - TransferRecurring
      noteCode:
        type: string
        description: 'The code associated to this note.  It could determine the type of note or reference predefined notes configured on the core. '
      noteText:
        type: string
        description: 'The text(s) of the note. '
      noteCreatedDateTime:
        type: string
        format: datetime
        description: 'UTC date and time when the note was created. '
      noteExpirationDate:
        type: string
        format: date
        description: 'The date this note expires. '
      noteCreator:
        type: string
        description: "Either the name or ID of person, system or end user that created the note. "
    description: 'Details related to a specific note. '
  NoteCode:
    type: string
    description: 'The code associated to this note.  It could determine the type of note or reference predefined notes configured on the core. '
  NoteCreator:
    type: string
    description: "Either the name or ID of person, system or end user that created the note. "
  NoteId:
    type: string
    description: 'The note ID is a persistent and unique identifier for the note. It must be unique within the account. '
  PersonName:
    type: object
    properties:
      firstName:
        type: string
        description: 'The persons given first name. '
      middleName:
        type: string
        description: 'The personâ€™s middle name. '
      lastName:
        type: string
        description: 'The personâ€™s last name or surname. '
      prefix:
        type: string
        description: "The personâ€™s prefix to their name, as in their title.  Typical examples are Dr., Mr., Mrs., etc.. "
      suffix:
        type: string
        description: "The personâ€™s suffix to their name.  Typical examples are Jr., III, etc.. "
      formattedName:
        type: string
        description: "All person name fields combined into one. This is typically a read-only field that can be returned by the data source. To remain flexible, this field can be either written to or returned by the data source. "
      nickname:
        type: string
        description: "The partyâ€™s casual or familiar name reference. Typical examples might be Tim if the partys first name is Timothy, or Jenny if the first name is Jennifer. "
    description: 'Name of a person. '
  UserId:
    type: string
    description: 'The unique identifier created by the system and or the user for identification. '
  ValuePair:
    type: object
    properties:
      name:
        type: string
        description: 'Name of additonal element. '
      value:
        type: string
        description: 'Value of the addtional element. '
    description: 'Value Pairs allow for customization of specification where additional elements are needed. '
  VendorId:
    type: string
    description: 'The vendor ID is a unique identifier which identifies the vendor that is creating a message. The vendor ID is assigned by the FI or established in concert by the vendor and FI. The client application sends this along with the messages so that logging or other business may take place based on the vendor utilizing the service. This ID is not generated per data or security request but is generated "out-of-band" (i.e. prior generation by some external mechanism) of this process and stored in the Financial Institutions and Vendorâ€™s systems. A standard error will be returned if the vendor ID is not provided when it is required. '
  WithholdingInfo:
    type: object
    properties:
      withholdingType:
        type: string
        description: 'Withholding type for the federal government or a national government. Withholding type for a state government or a province. Withholding type for a local government. Withholding type for US Government form W-4. Withholding type for all other forms of withholding. Further defined by element otherWithholdingType. '
        enum:
        - Federal
        - State
        - Local
        - W-4
        - Other
      otherWithholdingType:
        type: string
        description: 'Describes the type of withingholding when WithholdingType is set to Other. '
      withholdingFilingStatus:
        type: string
        description: 'Single filing status or Married filing seperately. Married filing jointly or qualifying widower. Head of Household. Unmarried and pay more than half of the costs of keeping up a home for yourself and a qualifying individual. '
        enum:
        - Single
        - Married
        - HeadOfHousehold
      numberOfWithholdings:
        type: string
        description: 'The number of withholdings or allowances declared. Example form W-4 line 5. '
      withholdingsAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      withholdingsExempt:
        type: boolean
        description: 'Withholdings are exempt when set to True. '
      withholdingsRate:
        type: number
        description: "The rate of withholding to apply to a qualifying transaction. Value is formatted as a percentile. A passed value of 4.5 is equivalent to 0.045 actual. 4.500 may be displayed as 4.500% or 4.5% depending on the user interface. Decimals available: 999.999 "
      withholdingsOption:
        type: string
        description: 'Describes the withholding option as defined by the financial institution and allows for the range of special instructions that may be applicable. '
    description: 'Fields related to require tax withholding information. '
  Configuration:
    type: object
    properties:
      configurationId:
        type: string
        description: 'Unique identification for the configuration. '
      configurationName:
        type: string
        description: 'Unique name for the configuration. '
      configurationDescription:
        type: string
        description: 'Description of the configuration. '
      environment:
        type: string
        description: "Indicates the environment in which the message should be executed. Depends upon agreements between endpoints what is passed for each environment. Examples might be: Dev, QAInternal, UAT, Training, Sandbox, Production. "
      configurationStatus:
        type: string
        description: "Indicates the status of the overall configuration.  Valid values are for example: Online, Offline, ReadyToPurge "
        enum:
        - Online
        - Offline
        - ReadyToPurge
        - TestMode
        - Other
      configurationStatusComment:
        type: string
        description: "More detail as to why the configuration is in a particular status.  For example, Waiting on Services setup. "
      fiIdList:
        $ref: '#/definitions/Configuration_fiIdList'
      fiList:
        $ref: '#/definitions/Configuration_fiList'
      endPointTimeZoneUTOffset:
        type: integer
        description: "This element is depricated. Use serviceTimeZoneUTCOffset for all new use. The offset of the time zone from Universal Time where this service resides.  If the service provides a serviceTimeZoneUTOffset, it overrides this value for that service. For example, Atlantic Standard Time (AST) =  UT - 4 hours  (serviceTimeZoneUTOffset would be -4) Eastern Standard Time (EST)  =  UT - 5 hours Central Standard Time (CST)  =  UT - 6 hours Mountain Standard Time (MST) =  UT - 7 hours Pacific Standard Time (PST)  =  UT - 8 hours If the location observes daylight savings time, this value may need to be updated. "
      serviceTimeZoneUTCOffset:
        type: string
        format: TOKEN
        description: "The offset of the time zone from Universal Time from the reference point. For example Format : [+|-]HH:MM If the location observes daylight savings time, this value may need to be updated. "
      serviceTimeZoneName:
        type: string
        description: 'The time zone name. See reference https://en.wikipedia.org/wiki/List_of_time_zone_abbreviations '
      serviceList:
        $ref: '#/definitions/Configuration_serviceList'
      configurationAppList:
        $ref: '#/definitions/Configuration_configurationAppList'
      configurationNetworkNodeAddressList:
        $ref: '#/definitions/Configuration_configurationNetworkNodeAddressList'
      configurationCreatedDateTime:
        type: string
        format: datetime
        description: 'The date and time this configuration was created. The date/time should be ISO 8601 UTC format. yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      configurationCreatedBy:
        type: string
        description: 'The unique identifier created by the system and or the user for identification. '
      configurationLastUpdatedDateTime:
        type: string
        format: datetime
        description: 'The date and time this configuration was last updated. The date/time should be ISO 8601 UTC format. yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      configurationLastUpdatedBy:
        type: string
        description: 'The unique identifier created by the system and or the user for identification. '
      customData:
        $ref: '#/definitions/AccessProfile_customData'
  ConfigurationApp:
    type: object
    properties:
      configurationAppId:
        type: string
        description: 'The unique identifier for the configuration and App combination. '
      appId:
        type: string
        description: 'The app id is the unique identifier that identifies the application. '
      configurationAppDescription:
        type: string
        description: 'The description of the app if it has been customimized for this configuration. '
      configurationAppParameterList:
        $ref: '#/definitions/ConfigurationApp_configurationAppParameterList'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
    description: 'Definition for the app in the configuration and its parameters. '
  ConfigurationAppId:
    type: string
    description: 'The unique identifier for the configuration and App combination. '
  ConfigurationAppParameter:
    type: object
    properties:
      configurationAppParameterId:
        type: string
        description: "The unique identifier for the configuration, app and parameter combination. "
      appParameterId:
        type: string
        description: 'The app Parameter id is the unique identifier that identifies the application parameter. '
      currentValue:
        type: string
        description: 'The current value of the parameter. '
      customData:
        $ref: '#/definitions/AccessProfile_customData'
    description: 'Definition for the app parameters within the configuration. '
  ConfigurationAppParameterId:
    type: string
    description: "The unique identifier for the configuration, app and parameter combination. "
  ConfigurationFinancialInstitution:
    type: object
    properties:
      configurationFiId:
        type: string
        description: 'The unique identifier for the configuration and financial institution. '
      fiId:
        type: string
        description: "The financial institution ID  is used by systems to uniquely identify each financial institution. This ID is determined outside of the process and stored in each system of record, e.g. local application database, vendor configuration file, FI core database, etc. This is helpful for applications that are multi-tenant and  service more than one financial institution. See dataSourceId for more information about multiple data sources for a single FI. A standard error will be returned if the FIID is not provided when it is required. "
      partyId:
        type: string
        description: 'The party ID is a persistent and unique identifier for the party not related to the accounts they own but tied to that person or organization. It should be unique for all parties across the institution and remain the same over the life of the relationship with the financial institution. '
      configurationFiVendorList:
        $ref: '#/definitions/ConfigurationFinancialInstitution_configurationFiVendorList'
      configurationFiAppList:
        $ref: '#/definitions/ConfigurationFinancialInstitution_configurationFiAppList'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
    description: 'Definition for the configuration parameters for the financial institution. '
  ConfigurationFinancialInstitutionApp:
    type: object
    properties:
      configurationFiAppId:
        type: string
        description: "The unique identifier for the configuration, financial institution, app and parameter combination. "
      appId:
        type: string
        description: 'The app id is the unique identifier that identifies the application. '
      configurationFiAppDescription:
        type: string
        description: 'The description of the app if it has been customimized for this configuration financial institution. '
      configurationFiAppParameterList:
        $ref: '#/definitions/ConfigurationFinancialInstitutionApp_configurationFiAppParameterList'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
    description: 'Definition for the app in the configuration and its parameters. '
  ConfigurationFinancialInstitutionAppId:
    type: string
    description: "The unique identifier for the configuration, financial institution, app and parameter combination. "
  ConfigurationFinancialInstitutionAppParameter:
    type: object
    properties:
      configurationFiAppParameterId:
        type: string
        description: "The unique identifier for the configuration, financial institution, app and parameter combination. "
      appParameterId:
        type: string
        description: 'The app Parameter id is the unique identifier that identifies the application parameter. '
      currentValue:
        type: string
        description: 'The current value of the parameter. '
      customData:
        $ref: '#/definitions/AccessProfile_customData'
    description: 'Definition for the app parameters within the configuration for a financial institution. '
  ConfigurationFinancialInstitutionAppParameterId:
    type: string
    description: "The unique identifier for the configuration, financial institution, app and parameter combination. "
  ConfigurationFinancialInstitutionId:
    type: string
    description: 'The unique identifier for the configuration and financial institution. '
  ConfigurationId:
    type: string
    description: 'Unique identification for the configuration. '
  ConfigurationList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      configuration:
        type: array
        description: "The list of supported financial institutions, services, methods, limitations and options within the CUFX instance. "
        items:
          $ref: '#/definitions/Configuration'
    description: "The list of configurations available in the CUFX instance. There will be one configuration for one or more financial institutions. These configurations can be utilized for whatever purpose the endpoint needs to break out into multiple configurations.  For example, It may be necessary to have multiple test configurations in the same endpoint. "
  ConfigurationName:
    type: string
    description: 'Unique name for the configuration. '
  ConfigurationNetworkNodeAddress:
    type: object
    properties:
      configurationNetworkNodeAddressId:
        type: string
        description: 'The unique identifier for the configuration and network node address combination. '
      networkNodeAddress:
        $ref: '#/definitions/ConfigurationNetworkNodeAddress_networkNodeAddress'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
    description: 'A network node address that is in or comprises the configuration. '
  ConfigurationNetworkNodeAddressId:
    type: string
    description: 'The unique identifier for the configuration and network node address combination. '
  ConfigurationStatus:
    type: string
    enum:
    - Online
    - Offline
    - ReadyToPurge
    - TestMode
    - Other
  CustomDataUse:
    type: object
    properties:
      xsdFile:
        type: string
        description: "An XSD filename in the CUFX library that is the parent of the node that holds the custom data. For example: Party.xsd "
      xsdXPath:
        type: string
        description: "An XPath statement that identifies the XSD node of the custom data.  For example: /partyList/party/customData/* "
      name:
        type: string
        description: "The name that will show up in the value pair within the custom data.  For instance, eye color. "
      comment:
        type: string
        description: "Comment as to what is stored in the custom data. For example: Will hold the partys eye color in a value pair. name=eyecolor and value=blue "
    description: 'An XSD path and comment related to how the custom data section is being used. This is information only and not processed by the system. '
  FieldNotSupported:
    type: object
    properties:
      xsdFile:
        type: string
        description: "An XSD file name in the CUFX library that is the parent of the field that is not supported. For example: Party.xsd "
      xsdXPath:
        type: string
        description: "An XPath statement that identifies the XSD elements related of the field that is not supported. For example: /partyList/party/characteristics/individual/citizenshipList/* "
      comment:
        type: string
        description: "Comment as to why the field(s) is/are not supported. For example: This end point does not support citizenship as the back end core does not support this concept. "
      customData:
        $ref: '#/definitions/AccessProfile_customData'
    description: 'Field not supported by the end point.  Specify the XSD path and any comments as to why it isnt supported. '
  MethodDependencyId:
    type: string
    description: 'Unique id for the Method Dependency. '
  MethodId:
    type: string
    description: 'Unique id for the method. '
  Service:
    type: object
    properties:
      serviceId:
        type: string
        description: "Unique identification for the combination of Service name, Protocol, and cufxVersion by configuration. "
      serviceName:
        type: string
        description: 'Generic name for the service. (Key value) '
        enum:
        - AccessProfile
        - Account
        - Activity
        - App
        - Application
        - Artifact
        - Bill
        - BillPayee
        - BillPaymentOccurrence
        - BillPaymentReoccurring
        - Card
        - Category
        - Collateral
        - Configuration
        - Contact
        - CredentialGroup
        - CreditReport
        - DepositFunding
        - Deposit
        - Document
        - EligibilityRequirement
        - FeeSchedule
        - Field
        - Hold
        - InvestmentHolding
        - Investment
        - LoanDisbursement
        - Loan
        - Location
        - MicroDepositFunding
        - NetworkNode
        - Notes
        - OverdraftPriority
        - PartyAssociation
        - Party
        - PermissionList
        - Preference
        - ProductOffering
        - ProductServiceEnrollment
        - ProductServiceRequest
        - RegisteredDevice
        - Relationship
        - RemoteDeposit
        - SecureMessage
        - SimpleValidationRequest
        - SystemStatus
        - Transaction
        - TransferOccurrence
        - TransferRecurring
        - User
        - Wire
      protocol:
        type: string
        description: 'Technology web service protocol available. (Key value) '
        enum:
        - REST-XML
        - REST-JSON
        - SOAP1.1
        - SOAP1.2
      cufxVersion:
        type: string
        description: 'The version for the service. (Key value) '
        enum:
        - 1.0.3
        - 1.0.6
        - 2.0.0
        - 3.1.0
        - 3.2.0
        - 3.3.0
        - 4.0.0
        - 4.1.0
        - 4.2.0
        - 4.3.0
        - 4.4.0
        - 4.5.0
      wsdlUri:
        type: string
        format: anyURI
        description: 'If the protocol is SOAP 1.1 or 1.2 provide the WSDL URL. '
      currencySupportList:
        $ref: '#/definitions/Service_currencySupportList'
      acceptLanguageList:
        $ref: '#/definitions/Service_acceptLanguageList'
      fieldNotSupportedList:
        $ref: '#/definitions/Service_fieldNotSupportedList'
      serviceTimeZoneUTCOffset:
        type: string
        format: TOKEN
        description: "The offset of the time zone from Universal Time from the reference point. For example Format : [+|-]HH:MM If the location observes daylight savings time, this value may need to be updated. "
      status:
        type: string
        description: "The status allows the requesting system to determine if the requested system is available for subsequent requests. A recommended use includes this service upon initial interaction as well as during exception handling. During a sequence of calls, an exception may be generated because the requested system has become unavailable. \"Online\" implies the system is available for subsequent requests. \"Offline\" implies the system is not available for subsequent requests. \"MemoPost\" implies that a subset of features is available. For example, the host system may be in MemoPost mode and accept transactions that are processed at a later time. Examples of such features are: intra-CU transfers and stop pay. Examples of features that may not be available during MemoPost are: loan application and change security settings. These examples are provided for demonstration purposes only, the exact feature list will vary depending on each implementation. "
        enum:
        - Online
        - OffLine
        - MemoPost
      customDataUseList:
        $ref: '#/definitions/Service_customDataUseList'
      methodList:
        $ref: '#/definitions/Service_methodList'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
  ConfigurationFilter:
    type: object
    properties:
      configurationIdList:
        $ref: '#/definitions/ConfigurationFilter_configurationIdList'
      configurationNameList:
        $ref: '#/definitions/ConfigurationFilter_configurationNameList'
      environmentList:
        $ref: '#/definitions/ConfigurationFilter_environmentList'
      configurationStatusList:
        $ref: '#/definitions/ConfigurationFilter_configurationStatusList'
      configurationCreatedDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
      configurationCreatedByList:
        $ref: '#/definitions/ConfigurationFilter_configurationCreatedByList'
      configurationUpdatedDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
      configurationLastUpdatedByList:
        $ref: '#/definitions/ConfigurationFilter_configurationLastUpdatedByList'
      fiIdList:
        $ref: '#/definitions/ConfigurationFilter_fiIdList'
      configurationFiIdList:
        $ref: '#/definitions/ConfigurationFilter_configurationFiIdList'
      configurationFiVendorIdList:
        $ref: '#/definitions/ConfigurationFilter_configurationFiVendorIdList'
      vendorIdList:
        $ref: '#/definitions/AppFilter_vendorIdList'
      serviceList:
        $ref: '#/definitions/Configuration_serviceList'
      methodIdList:
        $ref: '#/definitions/ConfigurationFilter_methodIdList'
      methodDependencyIdList:
        $ref: '#/definitions/ConfigurationFilter_methodDependencyIdList'
      configurationAppIdList:
        $ref: '#/definitions/ConfigurationFilter_configurationAppIdList'
      appIdList:
        $ref: '#/definitions/AppFilter_appIdList'
      configurationAppParameterIdList:
        $ref: '#/definitions/ConfigurationFilter_configurationAppParameterIdList'
      appParameterIdList:
        $ref: '#/definitions/AppFilter_appParameterIdList'
      parameterNameList:
        $ref: '#/definitions/AppFilter_parameterNameList'
      configurationFiAppIdList:
        $ref: '#/definitions/ConfigurationFilter_configurationFiAppIdList'
      configurationFiAppParameterIdList:
        $ref: '#/definitions/ConfigurationFilter_configurationFiAppParameterIdList'
      configurationNetworkNodeAddressIdList:
        $ref: '#/definitions/ConfigurationFilter_configurationNetworkNodeAddressIdList'
      networkNodeAddressIdList:
        $ref: '#/definitions/ConfigurationFilter_networkNodeAddressIdList'
      networkNodeIdList:
        $ref: '#/definitions/ConfigurationFilter_networkNodeAddressIdList'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
    description: 'The list of filter options for configuration data. '
  ConfigurationMessageDelete:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      configurationFilter:
        $ref: '#/definitions/ConfigurationFilter'
      configurationList:
        $ref: '#/definitions/ConfigurationList'
    description: Delete definition for ConfigurationMessage
  ConfigurationMessageGet:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      configurationFilter:
        $ref: '#/definitions/ConfigurationFilter'
    description: Get definition for ConfigurationMessage
  ConfigurationMessagePost:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      configurationList:
        $ref: '#/definitions/ConfigurationList'
    description: Post definition for ConfigurationMessage
  ConfigurationMessagePut:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      configurationFilter:
        $ref: '#/definitions/ConfigurationFilter'
      configurationList:
        $ref: '#/definitions/ConfigurationList'
    description: Put definition for ConfigurationMessage
  ConfigurationMessageResponse:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      configurationList:
        $ref: '#/definitions/ConfigurationList'
    description: Response definition for ConfigurationMessage
  Contact:
    type: object
    properties:
      contactId:
        type: string
        description: 'Unique identifier within system to uniquely identify this contact point. '
      contactType:
        type: string
        description: 'High level category for contact point for the party. '
        enum:
        - Address
        - Phone
        - Email
        - InstantMessaging
        - Social
        - Website
        - Other
        - SMS
      contactPersonName:
        $ref: '#/definitions/Contact_contactPersonName'
      contactPoint:
        $ref: '#/definitions/Contact_contactPoint'
      contactPointDescription:
        type: string
        description: 'Describes additional information regarding the contact point selection. '
      timeOfDay:
        type: string
        description: 'The best time of day to call contacts phone numbers. '
        enum:
        - Afternoon
        - Evening
        - Morning
      demonstratedAccess:
        $ref: '#/definitions/Contact_demonstratedAccess'
      badContactPoint:
        type: boolean
        description: "Has the contact point been attempted and for some reason come back as invalid. For instance, a bounced email, returned mail, disconnected phone, etc. "
      preferenceOrder:
        type: integer
        format: positiveInteger
        description: 'Specifies the preference order of communication for the given contact. The lowest order will have the highest preference. '
      customData:
        $ref: '#/definitions/AccessProfile_customData'
      contactDateTimeCreated:
        type: string
        format: datetime
        description: 'Date and time the contact was created in the source system. The date/time should be ISO 8601 UTC format. yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      contactCreatedBy:
        type: string
        description: 'The unique identifier created by the system and or the user for identification. '
      contactDateTimeModified:
        type: string
        format: datetime
        description: 'Date and time the contact data was modified in the source system. The date/time should be ISO 8601 UTC format. yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      contactModifiedBy:
        type: string
        description: 'The unique identifier created by the system and or the user for identification. '
      contactDateTimeDeleted:
        type: string
        format: datetime
        description: 'Date the contact data was deleted or mark as inactive in the source system. The date/time should be ISO 8601 UTC format. yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      contactDeletedBy:
        type: string
        description: 'The unique identifier created by the system and or the user for identification. '
      preferenceSettingList:
        $ref: '#/definitions/Contact_preferenceSettingList'
  ContactId:
    type: string
    description: 'Unique identifier within system to uniquely identify this contact point. '
  ContactList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      contact:
        type: array
        description: "The contact list collection/array contains all the contacts points, that the credential set is authorized to access at the Institution based on applied filters. "
        items:
          $ref: '#/definitions/Contact'
    description: "The contact list collection/array contains all the contacts points, that the credential set is authorized to access at the Institution based on applied filters. "
  ContactType:
    type: string
    enum:
    - Address
    - Phone
    - Email
    - InstantMessaging
    - Social
    - Website
    - Other
    - SMS
  Phone:
    type: object
    properties:
      phoneType:
        type: string
        description: 'The type of phone the number represents.  Also considered a classification of the phone. '
        enum:
        - Home
        - Work
        - Mobile
        - Pager
        - Fax
        - Other
      number:
        type: string
        description: 'Phone Number. '
      extension:
        type: string
        description: 'Phone Number Extension.  This is typically only seen when Phone Type is WORK but can apply to others in rare circumstances. '
      planFormat:
        type: string
        description: "(North American Number Plan Administration) +1-NPA-NXX-xxxx   Example 1-847-555-1212 (North American Number Plan without the Country Code)  NPA-NXX-xxxx Example 847-555-1212 Non-North American Number Plan phone numbers. This is an exception to the E.164 standard such as 411, 911, etc. to support shortened numbers within national boarders.  This value was provided to ensure 100% coverage of all types. "
        enum:
        - Nanp
        - NanpLessCountryCode
        - OtherInternational
        - NationalNumber
      description:
        type: string
        description: "Description beyond the phone number info. For example, Bobs phone when hes on vacation. This element is now secondary in priority to contactPointDescription and should be considered deprecated. "
      smsRegistered:
        type: boolean
        description: 'Phone number is registered to receive SMS messages. '
      countryCode:
        type: string
        description: ISO 3166-1  Year 2006 /xs:documentation
        enum:
        - AD
        - AE
        - AF
        - AG
        - AI
        - AL
        - AM
        - AN
        - AO
        - AQ
        - AR
        - AS
        - AT
        - AU
        - AW
        - AX
        - AZ
        - BA
        - BB
        - BD
        - BE
        - BF
        - BG
        - BH
        - BI
        - BJ
        - BL
        - BM
        - BN
        - BO
        - BR
        - BS
        - BT
        - BV
        - BW
        - BY
        - BZ
        - CA
        - CC
        - CD
        - CF
        - CG
        - CH
        - CI
        - CK
        - CL
        - CM
        - CN
        - CO
        - CR
        - CU
        - CV
        - CX
        - CY
        - CZ
        - DE
        - DJ
        - DK
        - DM
        - DO
        - DZ
        - EC
        - EE
        - EG
        - EH
        - ER
        - ES
        - ET
        - FI
        - FJ
        - FK
        - FM
        - FO
        - FR
        - GA
        - GB
        - GD
        - GE
        - GF
        - GG
        - GH
        - GI
        - GL
        - GM
        - GN
        - GP
        - GQ
        - GR
        - GS
        - GT
        - GU
        - GW
        - GY
        - HK
        - HM
        - HN
        - HR
        - HT
        - HU
        - ID
        - IE
        - IL
        - IM
        - IN
        - IO
        - IQ
        - IR
        - IS
        - IT
        - JE
        - JM
        - JO
        - JP
        - KE
        - KG
        - KH
        - KI
        - KM
        - KN
        - KP
        - KR
        - KW
        - KY
        - KZ
        - LA
        - LB
        - LC
        - LI
        - LK
        - LR
        - LS
        - LT
        - LU
        - LV
        - LY
        - MA
        - MC
        - MD
        - ME
        - MF
        - MG
        - MH
        - MK
        - ML
        - MM
        - MN
        - MO
        - MP
        - MQ
        - MR
        - MS
        - MT
        - MU
        - MV
        - MW
        - MX
        - MY
        - MZ
        - NA
        - NC
        - NE
        - NF
        - NG
        - NI
        - NL
        - "NO"
        - NP
        - NR
        - NU
        - NZ
        - OM
        - PA
        - PE
        - PF
        - PG
        - PH
        - PK
        - PL
        - PM
        - PN
        - PR
        - PS
        - PT
        - PW
        - PY
        - QA
        - RE
        - RO
        - RS
        - RU
        - RW
        - SA
        - SB
        - SC
        - SD
        - SE
        - SG
        - SH
        - SI
        - SJ
        - SK
        - SL
        - SM
        - SN
        - SO
        - SR
        - ST
        - SV
        - SY
        - SZ
        - TC
        - TD
        - TF
        - TG
        - TH
        - TJ
        - TK
        - TL
        - TM
        - TN
        - TO
        - TR
        - TT
        - TV
        - TW
        - TZ
        - UA
        - UG
        - UM
        - US
        - UY
        - UZ
        - VA
        - VC
        - VE
        - VG
        - VI
        - VN
        - VU
        - WF
        - WS
        - YE
        - YT
        - ZA
        - ZM
        - ZW
      country:
        type: string
        description: 'Country where phone resides. This is typically read-only as it is recommended to be calculated based on the Country Code. Description based on the ISO 3166 2 Character Country Code. Back end systems can translate this to a description from the country code. '
      otherPhoneType:
        type: string
        description: 'Description of phone type when phoneType is set to other. '
    description: 'Fields related to phone contact points when phone type is selected. '
  ContactFilter:
    type: object
    properties:
      contactIdList:
        $ref: '#/definitions/Activity_activityRelatedTo_contactIdList'
      partyIdList:
        $ref: '#/definitions/Account_partyIdList'
      relationshipIdList:
        $ref: '#/definitions/AccountFilter_relationshipIdList'
      accountIdList:
        $ref: '#/definitions/AccountFilter_accountIdList'
      accountStatusList:
        $ref: '#/definitions/AccountFilter_accountStatusList'
      taxIdList:
        $ref: '#/definitions/ContactFilter_taxIdList'
      contactTypeList:
        $ref: '#/definitions/ContactFilter_contactTypeList'
      badContactPoint:
        type: boolean
        description: "If true, then return only contact points that have badContactPoint set to true. "
      customData:
        $ref: '#/definitions/AccessProfile_customData'
      accountIdentificationList:
        $ref: '#/definitions/AccountFilter_accountIdentificationList'
    description: 'The list of filter options for services requesting contact data.  The options can be used in combination or by themselves. It is up to the data source to either return or affect the data requested or return a standard error identifying why the request was rejected. '
  ContactMessageDelete:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      contactFilter:
        $ref: '#/definitions/ContactFilter'
      contactList:
        $ref: '#/definitions/ContactList'
    description: Delete definition for ContactMessage
  ContactMessageGet:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      contactFilter:
        $ref: '#/definitions/ContactFilter'
    description: Get definition for ContactMessage
  ContactMessagePost:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      contactList:
        $ref: '#/definitions/ContactList'
    description: Post definition for ContactMessage
  ContactMessagePut:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      contactFilter:
        $ref: '#/definitions/ContactFilter'
      contactList:
        $ref: '#/definitions/ContactList'
    description: Put definition for ContactMessage
  ContactMessageResponse:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      contactList:
        $ref: '#/definitions/ContactList'
    description: Response definition for ContactMessage
  Credential:
    type: object
    properties:
      credentialId:
        type: string
        description: 'The credential ID is a persistent and unique identifier for the credential. It should be unique for all credentials across the institution and remain the same over the life of the relationship with the financial institution. '
      relatedCredentialId:
        type: string
        description: 'The credential ID is a persistent and unique identifier for the credential. It should be unique for all credentials across the institution and remain the same over the life of the relationship with the financial institution. '
      credentialType:
        type: string
        description: "Type of the credentials being used. Username is a system ID that is typically a shortened version of their name with no spaces. It is used to access an account when the person is using a computer system. The user usually selects their user name during signup.  It is typically unique for that individual or account across the entire system of record. Password is a combination of characters known by the user that is used to access an account when the person is on a computer system. The ATM PIN is usually a 4 digit number with no spaces that is used at an ATM terminal to access cash funds, inquire about balances or perform transfers. Depending upon the provider, this number can be randomly generated or selected by the user at time they create an account or activate their ATM card. Codeword is used to access an account in person or over the phone. This is typically different than the password used when electronically accessing the account. A token that was generated by a system for accessing a system.  Tokens can be rather lengthy to keep them confidential. A question that the user has selected that is paired with a security answer, which the system uses to confirm that the person is authorized to the account.  This is typically used in resetting the password on a system. An answer to a security question that the system uses to confirm that the person is authorized to the account. This is typically used in resetting the password on a system. A question that the user has selected and paired with a challenge answer so that the system can confirm that the person is authorized to the account.  This is typically used to enable a higher risk transaction on an account that requires a higher level of authentication to perform the transaction, such as sending money externally. An answer to a challenge question that allows the system to confirm that the person is authorized to the account. This is typically used to enable a higher risk transaction on an account that requires a higher level of authentication to perform the transaction, such as sending money externally. A phrase that the user can assign so that when they log into their account, the user can confirm that they have not been sent to a different website. This prevents them from performing transactions or providing confidential information on a fraudulent site. A URL to an image that the user selected and assigned to their account so that when they log into their account, the user can confirm that they have not been sent to a different website. This prevents them from performing transactions or providing confidential information on a fraudulent site. A pointer to an image in the artifact repositor that the user selected and assigned to their account so that when they log into their account, the user can confirm that they have not been sent to a different website. This prevents them from performing transactions or providing confidential information on a fraudulent site. Can be used to authorize transactions such as wire transfers, password reset, ACH transactions, etc. Other credential type, see element credentialSubType for additional detail. Validation of a Decentralized identifier. W3C compliant verifiable credential. Presentation of a verified credential data from a trust registry. Presentation of a connection protocol. "
        enum:
        - Username
        - Password
        - AtmPin
        - Codeword
        - Token
        - SecurityQuestion
        - SecurityAnswer
        - ChallengeQuestion
        - ChallengeAnswer
        - AntiphishingPhrase
        - AntiphishingImageUrl
        - AntiphishingImageArtifactId
        - AuthorizationCode
        - Other
        - DidValidation
        - VerifiedCredential
        - ConnectionProtocol
      credentialSubType:
        type: string
        description: 'The sub type of credential or other credential. Provides additional support for subtypes that are not defined. '
      encrypted:
        type: boolean
        description: "If true, indicates that the credential was encrypted. Encryption method is agreed upon by application end point providers.  Assume itâ€™s NOT encrypted if this flag is not provided. The message context will be used by the service to understand which client is calling the service to know which encryption algorithm to apply. "
      value:
        type: string
        description: "The value of the credential, i.e. the actual password, pin, answer, question, url for the image, DID, etc.  Recommended: This value can be encrypted beyond the message encryption since the data values are very sensitive.   Optionally, client and Security Services can pass encrypted credential values using RSA-2048. A credential encrypted flag indicates that it was encrypted. "
      expirationDateTime:
        type: string
        format: datetime
        description: 'Expiration date and time of the credentials.  The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      temporary:
        type: boolean
        description: "If true, the credentials are temporary and must be reset upon first use of the credentials. "
      customData:
        $ref: '#/definitions/AccessProfile_customData'
      didValidation:
        $ref: '#/definitions/Credential_didValidation'
      verifiedCredential:
        $ref: '#/definitions/Credential_verifiedCredential'
      connectionProtocol:
        $ref: '#/definitions/Credential_connectionProtocol'
  CredentialGroup:
    type: object
    properties:
      fiUserId:
        type: string
        description: "FiUserId is a unique identifier for the credential group and is readable by the person. The person types this into systems to gain access, also using their password, PIN or whatever else is required to gain access. "
      userId:
        type: string
        description: 'The unique identifier created by the system and or the user for identification. '
      userIdType:
        type: string
        description: "The user ID is an employee ID for logging into the network. The user ID is a vendor employee ID for logging into the network. The user ID is essentially unknown, i.e. no credentials are required. Business rules will have been applied to either prevent or allow anonymous access to the service in question. The credential group identifier of a Financial Institution party that was used to access the service.  See credential group schema. The system user identifier of a system account that was used to access the service. A security token which was created from an identity provider. The user identification was not one of the above formats. "
        enum:
        - EmployeeId
        - VendorEmployeeId
        - Anonymous
        - FIUserId
        - SystemAccountId
        - SecurityToken
        - Custom
      credentialList:
        $ref: '#/definitions/CredentialGroup_credentialList'
      deliveryChannelList:
        $ref: '#/definitions/CredentialGroup_deliveryChannelList'
      verifiedCredentialGroupToken:
        type: string
        description: "This is not a persistent token.  If the original filtered read request had the verifiedCredentialGroupList submitted, then this flag will return a token that represents that session.  It is determined by the back end system if this token is persisted for the session and used in future requests to manage the state. "
  CredentialGroupList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      credentialGroup:
        type: array
        description: "Combination of credentials necessary to get access to a system, i.e. a combination of username, password and token. "
        items:
          $ref: '#/definitions/CredentialGroup'
    description: 'Collection of credential groups for the party to use to access different systems. '
  CredentialType:
    type: string
    description: "Type of the credentials being used. Username is a system ID that is typically a shortened version of their name with no spaces. It is used to access an account when the person is using a computer system. The user usually selects their user name during signup.  It is typically unique for that individual or account across the entire system of record. Password is a combination of characters known by the user that is used to access an account when the person is on a computer system. The ATM PIN is usually a 4 digit number with no spaces that is used at an ATM terminal to access cash funds, inquire about balances or perform transfers. Depending upon the provider, this number can be randomly generated or selected by the user at time they create an account or activate their ATM card. Codeword is used to access an account in person or over the phone. This is typically different than the password used when electronically accessing the account. A token that was generated by a system for accessing a system.  Tokens can be rather lengthy to keep them confidential. A question that the user has selected that is paired with a security answer, which the system uses to confirm that the person is authorized to the account.  This is typically used in resetting the password on a system. An answer to a security question that the system uses to confirm that the person is authorized to the account. This is typically used in resetting the password on a system. A question that the user has selected and paired with a challenge answer so that the system can confirm that the person is authorized to the account.  This is typically used to enable a higher risk transaction on an account that requires a higher level of authentication to perform the transaction, such as sending money externally. An answer to a challenge question that allows the system to confirm that the person is authorized to the account. This is typically used to enable a higher risk transaction on an account that requires a higher level of authentication to perform the transaction, such as sending money externally. A phrase that the user can assign so that when they log into their account, the user can confirm that they have not been sent to a different website. This prevents them from performing transactions or providing confidential information on a fraudulent site. A URL to an image that the user selected and assigned to their account so that when they log into their account, the user can confirm that they have not been sent to a different website. This prevents them from performing transactions or providing confidential information on a fraudulent site. A pointer to an image in the artifact repositor that the user selected and assigned to their account so that when they log into their account, the user can confirm that they have not been sent to a different website. This prevents them from performing transactions or providing confidential information on a fraudulent site. Can be used to authorize transactions such as wire transfers, password reset, ACH transactions, etc. Other credential type, see element credentialSubType for additional detail. Validation of a Decentralized identifier. W3C compliant verifiable credential. Presentation of a verified credential data from a trust registry. Presentation of a connection protocol. "
    enum:
    - Username
    - Password
    - AtmPin
    - Codeword
    - Token
    - SecurityQuestion
    - SecurityAnswer
    - ChallengeQuestion
    - ChallengeAnswer
    - AntiphishingPhrase
    - AntiphishingImageUrl
    - AntiphishingImageArtifactId
    - AuthorizationCode
    - Other
    - DidValidation
    - VerifiedCredential
    - ConnectionProtocol
  DeliveryChannel:
    type: string
    description: "When a person calls in or walks up to a teller, sometimes they are asked for a codeword to verify their identity. "
    enum:
    - LiveSupport
    - ATM
    - Email
    - IVR
    - Kiosk
    - Mail
    - Mobile
    - OnlineBanking
    - Other
    - Phone
    - SMS
  FiUserId:
    type: string
    description: "FiUserId is a unique identifier for the credential group and is readable by the person. The person types this into systems to gain access, also using their password, PIN or whatever else is required to gain access. "
  CredentialGroupFilter:
    type: object
    properties:
      fiUserIdList:
        $ref: '#/definitions/CredentialGroupFilter_fiUserIdList'
      partyIdList:
        $ref: '#/definitions/Account_partyIdList'
      userIdList:
        $ref: '#/definitions/CredentialGroupFilter_userIdList'
      userIdTypeList:
        $ref: '#/definitions/CredentialGroupFilter_userIdTypeList'
      relationshipIdList:
        $ref: '#/definitions/AccountFilter_relationshipIdList'
      accountIdList:
        $ref: '#/definitions/AccountFilter_accountIdList'
      accountStatusList:
        $ref: '#/definitions/AccountFilter_accountStatusList'
      credentialTypeList:
        $ref: '#/definitions/Activity_credentialTypesRequiredList'
      deliveryChannelList:
        $ref: '#/definitions/CredentialGroup_deliveryChannelList'
      verifyCredentialGroupList:
        $ref: '#/definitions/Activity_credentialsProvidedList'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
      accountIdentificationList:
        $ref: '#/definitions/AccountFilter_accountIdentificationList'
    description: 'The list of filter options for services requesting credential group data.  The options can be used in combination or by themselves. It is up to the data source to either return or affect the data requested or return a standard error identifying why the request was rejected. '
  CredentialGroupMessageDelete:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      credentialGroupFilter:
        $ref: '#/definitions/CredentialGroupFilter'
      credentialGroupList:
        $ref: '#/definitions/CredentialGroupList'
    description: Delete definition for CredentialGroupMessage
  CredentialGroupMessageGet:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      credentialGroupFilter:
        $ref: '#/definitions/CredentialGroupFilter'
    description: Get definition for CredentialGroupMessage
  CredentialGroupMessagePost:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      credentialGroupList:
        $ref: '#/definitions/CredentialGroupList'
    description: Post definition for CredentialGroupMessage
  CredentialGroupMessagePut:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      credentialGroupFilter:
        $ref: '#/definitions/CredentialGroupFilter'
      credentialGroupList:
        $ref: '#/definitions/CredentialGroupList'
    description: Put definition for CredentialGroupMessage
  CredentialGroupMessageResponse:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      credentialGroupList:
        $ref: '#/definitions/CredentialGroupList'
    description: Response definition for CredentialGroupMessage
  CreditReport:
    type: object
    properties:
      creditReportId:
        type: string
        description: 'Unique identifier for the credit report in the data repository. '
      creditReportDate:
        type: string
        format: date
        description: 'The date on which the credit report was acquired. '
      creditSource:
        type: string
        description: "E.g., Experian, Equifax, TransUnion, FastStart, FICA, etc. "
      reportType:
        type: string
        description: "For example, Experian CreditProfile, TransUnion EmploymentReport, as defined and supported by individual service providers. Can request more than one report type to be returned for each applicant, if available. "
      scoreType:
        type: string
        description: "Score type is informational only as this isnt a standardized list. Examples: FICO, VantageScore, FairIsaacRiskModel, FairIssacAutoLoan, FairIsaccPersonalFinance, etc. "
      partyId:
        type: string
        description: 'The party ID is a persistent and unique identifier for the party not related to the accounts they own but tied to that person or organization. It should be unique for all parties across the institution and remain the same over the life of the relationship with the financial institution. '
      taxId:
        type: string
        description: "Individual Social Security Number (SSN), Individual Tax Payer Number (TIN), the organizational Employer Identification Number (EIN), or other international Tax ID. "
      creditScore:
        type: integer
        description: "E.g., 812, 615. "
      creditTier:
        type: string
        description: 'Risk tier assigned when the credit report was pulled. '
      reportData:
        type: string
        description: 'Contains the entire credit report in text format. '
      customData:
        $ref: '#/definitions/AccessProfile_customData'
    description: "Details relating credit scores used in determining loan decisions, risk-based pricing, or membership eligibility. "
  CreditReportId:
    type: string
    description: 'Unique identifier for the credit report in the data repository. '
  CreditReportList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      creditReport:
        type: array
        description: "Details relating credit scores used in determining loan decisions, risk-based pricing, or membership eligibility. "
        items:
          $ref: '#/definitions/CreditReport'
    description: 'Collection of credit reports. '
  CreditReportFilter:
    type: object
    properties:
      creditReportIdList:
        $ref: '#/definitions/CreditReportFilter_creditReportIdList'
      creditReportDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
      minCreditScore:
        type: integer
        description: "Filter that is used searching the credit reports based on minimum credit score. min and max amount filters work together. Must be less than or equal to the maxAmount if a max amount is supplied. If neither minCreditScore nor maxCreditScore is provided, all applicable credit reports will be returned based on other criteria. "
      maxCreditScore:
        type: integer
        description: "Filter that is used searching the credit reports based on maximum credit score. min and max amount filters work together. Must be less than or equal to the maxAmount if a max amount is supplied. If neither minCreditScore nor maxCreditScore is provided, all applicable credit reports will be returned based on other criteria. "
      reportType:
        type: string
        description: "For example, Experian CreditProfile, TransUnion EmploymentReport, as defined and supported by individual service providers. Can request more than one report type to be returned for each applicant, if available. "
      partyId:
        type: string
        description: 'The party ID is a persistent and unique identifier for the party not related to the accounts they own but tied to that person or organization. It should be unique for all parties across the institution and remain the same over the life of the relationship with the financial institution. '
      taxId:
        type: string
        description: "Individual Social Security Number (SSN), Individual Tax Payer Number (TIN), the organizational Employer Identification Number (EIN), or other international Tax ID. "
      customData:
        $ref: '#/definitions/AccessProfile_customData'
    description: 'The list of filter options for services requesting credit report data from storage.  The options can be used in combination or by themselves.  It is up to the data source to either return or affect the data requested or return a standard error identifying why the request was rejected. '
  CreditReportMessageDelete:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      creditReportFilter:
        $ref: '#/definitions/CreditReportFilter'
      creditReportList:
        $ref: '#/definitions/CreditReportList'
    description: Delete definition for CreditReportMessage
  CreditReportMessageGet:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      creditReportFilter:
        $ref: '#/definitions/CreditReportFilter'
      creditReportRequest:
        $ref: '#/definitions/CreditReportRequest'
    description: Get definition for CreditReportMessage
  CreditReportMessagePost:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      creditReportList:
        $ref: '#/definitions/CreditReportList'
      creditReportRequest:
        $ref: '#/definitions/CreditReportRequest'
    description: Post definition for CreditReportMessage
  CreditReportMessagePut:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      creditReportFilter:
        $ref: '#/definitions/CreditReportFilter'
      creditReportList:
        $ref: '#/definitions/CreditReportList'
    description: Put definition for CreditReportMessage
  CreditReportMessageResponse:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      creditReportList:
        $ref: '#/definitions/CreditReportList'
    description: Response definition for CreditReportMessage
  CreditReportRequest:
    type: object
    properties:
      applicantList:
        $ref: '#/definitions/Application_applicantList'
      maxReportAgeInDays:
        type: integer
        description: "Optional cache directive: if the service provider supports this and has a credit report previously pulled within the last â€œnâ€\x9d days, that report will be returned rather than pulling another report. "
      reportTypeList:
        $ref: '#/definitions/CreditReportRequest_reportTypeList'
    description: 'Fields requested to make credit report requests. '
  Deposit:
    type: object
    properties:
      accountId:
        type: string
        description: 'The account ID is a persistent and unique identifier for the account. It must be unique for all users across the institution and remain the same over the life of the account. '
      type:
        type: string
        description: "Checking account, i.e., checks can be written against the account. Money market accounts can be included here or in money markets.  Its up to the institution. Savings and club accounts.  This can optionally include CDs, but its up to the institution. Auto loans, etc. Loans that are NOT lines of credit or credit cards. Loan behind the credit card.  Note the actual card information in the card object. Loan that is a line of credit but NOT a credit card. Loan that is made in exchange for taking title of property. Investment accounts such as brokerage and this can optionally include CDs and/or money markets, but its up to the institution. This account is a special type of checking account connected to a pre-paid card. Other account type. Loan that is made in installments. Loan is typically unsecured. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Installment. Loan that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Commercial. Line of Credit that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of CommercialLineOfCredit. A general ledger account of the financial institution. A loan account type that has not been prevously defined. This enumeration is considered deprecated. Recommend using account type loan and subAccount of OtherLoan. "
        enum:
        - Checking
        - Savings
        - Loan
        - CreditCard
        - LineOfCredit
        - Mortgage
        - Investment
        - PrePaidCard
        - Other
        - Installment
        - CommercialLoan
        - CommercialLineOfCredit
        - GeneralLedger
        - OtherLoan
      accountSubType:
        type: string
        description: 'The account subtype identifies the specific account type that the back end system will recognize. '
      openDate:
        type: string
        format: date
        description: 'The date that the account was opened. '
      closeDate:
        type: string
        format: date
        description: 'The date that the account was closed. '
      accountStatus:
        $ref: '#/definitions/Account_accountStatus'
      accountSubStatus:
        type: string
        description: 'For use to support additional acount sub statuses not present in enumerations. '
      micrAccountNumber:
        type: string
        description: 'The account number portion of a draft or line of credit MICR line. '
      routingNumber:
        type: string
        description: 'Routing number for the account. '
      displayAccountId:
        type: string
        description: "The account ID as a masked or obfuscated representation of the Account ID (accountId). This can be used for display or document generation purposes as a security precaution, or in cases where the accountId element has been encrypted or tokenized. "
      idType:
        type: string
        description: "Whether the ID is actual, or simply reserved. "
        enum:
        - Reserved
        - Actual
      description:
        type: string
        description: 'The account description is the textual representation of the account. This value is visible to the user and must be human-readable. '
      subType:
        type: string
        description: 'The account subtype identifies the specific account type that the back end system will recognize. Deprecated - See accountSubType in AccountBase. - Planned removal in v5.0. '
      accountEscheatDate:
        type: string
        format: date
        description: 'The date that Escheatment was applied to the account. '
      accountEscheatAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      chargeOffDate:
        type: string
        format: date
        description: 'The date that the account was charged off. '
      chargeOffAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      accountNickName:
        type: string
        description: 'Description by the party or user that overrides the default description. '
      branch:
        type: string
        description: 'Name or number identifying which branch owns the account. '
      actualBalance:
        $ref: '#/definitions/Account_accountEscheatAmount'
      availableBalance:
        $ref: '#/definitions/Account_accountEscheatAmount'
      cashAdvanceAvailableBalance:
        $ref: '#/definitions/Account_accountEscheatAmount'
      cashAdvanceBalance:
        $ref: '#/definitions/Account_accountEscheatAmount'
      cashAdvanceLimit:
        $ref: '#/definitions/Account_accountEscheatAmount'
      minimumBalance:
        $ref: '#/definitions/Account_accountEscheatAmount'
      externalAccountBankAddress:
        $ref: '#/definitions/Account_externalAccountBankAddress'
      externalAccountSWIFTCode:
        type: string
        description: 'SWIFTCode for wire transfer. '
      externalAccountIBANCode:
        type: string
        description: "IBAN of external institution, used for wire transfers.  This replaces the micrAccountNumber for certain financial institutions in foreign nations, and no routing or SWIFT code is necessary when an IBAN (and potentially bank code, below) is provided to identify the account. "
      externalAccountBankCode:
        type: string
        description: "Bank code, required (in addition to other identifiers) for institutions in certain foreign nations, used for wire transfers. "
      externalAccountFlag:
        type: boolean
        description: "True for an external account, false for an internal account. "
      externalAccountVerified:
        type: boolean
        description: "Default is false.  When user confirms microdeposit, this becomes true. "
      externalTransferFrom:
        type: boolean
        description: 'True when transfers are allowed from external account. '
      externalTransferTo:
        type: boolean
        description: 'True when transfers are allowed to external account. '
      transferFrom:
        type: boolean
        description: 'True when transfers are allowed from this account. '
      transferTo:
        type: boolean
        description: 'True when transfers are allowed to this account. '
      rateType:
        type: string
        description: 'Whether the rate type is fixed or variable based on some index. '
        enum:
        - Fixed
        - Variable
      sourceCode:
        type: string
        description: "FI defined code that identifies the source of the application that created the account such as customer request, cross sale, counter offer, promo, etc. "
      partyIdList:
        $ref: '#/definitions/Account_partyIdList'
      relationshipId:
        type: string
        description: 'The relationship ID is a persistent and unique identifier for the relationship. It should be unique for all relationships across the institution and remain the same over the life of the relationship with the financial institution. '
      accountNoteList:
        $ref: '#/definitions/Account_accountNoteList'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
      meta:
        $ref: '#/definitions/Account_meta'
      transactionList:
        $ref: '#/definitions/Account_transactionList'
      interestPostingFrequency:
        type: string
        description: 'The time interval for posting interest to the account. '
        enum:
        - AmortizedSchedule
        - Annual
        - AtMaturity
        - Bimonthly
        - Biweekly
        - BiweeklySkipFirst
        - BiweeklySkipLast
        - Daily
        - EventTrigger
        - Hourly
        - Immediate
        - Monthly
        - None
        - OneTime
        - Other
        - PerUse
        - Quarterly
        - SemiAnnual
        - SemiMonthly
        - Triannual
        - Weekly
        - WeeklySkipFirst
        - WeeklySkipLast
        - XDays
        - XMonths
        - XYears
      withholdingsInfoList:
        $ref: '#/definitions/Account_withholdingsInfoList'
      overDraftProtectionAccountId:
        type: string
        description: 'The account ID is a persistent and unique identifier for the account. It must be unique for all users across the institution and remain the same over the life of the account. '
      overDraftProtectionAccountType:
        type: string
        description: "Checking account, i.e., checks can be written against the account. Money market accounts can be included here or in money markets.  Its up to the institution. Savings and club accounts.  This can optionally include CDs, but its up to the institution. Auto loans, etc. Loans that are NOT lines of credit or credit cards. Loan behind the credit card.  Note the actual card information in the card object. Loan that is a line of credit but NOT a credit card. Loan that is made in exchange for taking title of property. Investment accounts such as brokerage and this can optionally include CDs and/or money markets, but its up to the institution. This account is a special type of checking account connected to a pre-paid card. Other account type. Loan that is made in installments. Loan is typically unsecured. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Installment. Loan that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Commercial. Line of Credit that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of CommercialLineOfCredit. A general ledger account of the financial institution. A loan account type that has not been prevously defined. This enumeration is considered deprecated. Recommend using account type loan and subAccount of OtherLoan. "
        enum:
        - Checking
        - Savings
        - Loan
        - CreditCard
        - LineOfCredit
        - Mortgage
        - Investment
        - PrePaidCard
        - Other
        - Installment
        - CommercialLoan
        - CommercialLineOfCredit
        - GeneralLedger
        - OtherLoan
      overDraftProtectionAccountSubType:
        type: string
        description: 'The account subtype identifies the specific account type that the back end system will recognize. '
      depositPartyList:
        $ref: '#/definitions/Deposit_depositPartyList'
      bumpEffectiveDate:
        type: string
        format: date
        description: 'Date on which the bump rate becomes effective. '
      bumpExpirationDate:
        type: string
        format: date
        description: 'Date on which the bump rate expires. '
      bumpRate:
        type: number
        description: 'The percentage to add to the normal rate during dividend calculations. '
      dividendPostCode:
        type: string
        description: 'Provides types for posting dividends earned on the account. Dividends earned should be posted to the account. Dividends earned should be sent by check to the party. Dividends earned should be transferred to another account. Dividends earned should not be posted. '
        enum:
        - ToAccount
        - ByCheck
        - Transfer
        - Forfeit
      dividendRate:
        type: number
        description: 'The percentage rate used to calculate dividends for this account. The dividend type must be set to allow for a custom rate. '
      annualPercentageYield:
        type: number
        description: "Annual percentage yield - the percentage rate reflecting the total amount of interest paid on an account, based on the interest rate and the frequency of compounding for a 365-day period. As example 3.125% is represented as 0.03125 "
      dividendTransferAccountId:
        type: string
        description: 'The account ID is a persistent and unique identifier for the account. It must be unique for all users across the institution and remain the same over the life of the account. '
      dividendType:
        type: string
        description: 'Name or number identifying the type of dividend calculation performed for this account. '
      irsCode:
        type: string
        description: 'Defines IRS reporting requirements on this account.  Used to identify special requirements such as IRA or HSA. '
      maturityPostCode:
        type: string
        description: "Provides types for posting the account balance upon maturity. Account renews upon maturity. Account balance should be sent by check to the party. Account balance should be transferred to another account. Funds should remain in the account until transferred manually. Transfers part of the funds to another account at maturity, and then renew account with the remainder of the funds. "
        enum:
        - Renew
        - ByCheck
        - Transfer
        - Suspend
        - TransferAndRenew
      maturityTransferAccountId:
        type: string
        description: 'The account ID is a persistent and unique identifier for the account. It must be unique for all users across the institution and remain the same over the life of the account. '
      minimumDeposit:
        $ref: '#/definitions/Account_accountEscheatAmount'
      minimumWithdrawal:
        $ref: '#/definitions/Account_accountEscheatAmount'
      overdraftTolerance:
        $ref: '#/definitions/Account_accountEscheatAmount'
      maturityTransferAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      maturityTransferPercent:
        type: number
        description: 'The percentage of the amount to transfer out upon maturity. Default is 100%. '
      serviceChargeWaivedReason:
        type: string
        description: 'The reason that the deposit service charge is waived. Population is determined by the financial institution. '
    description: 'Details relating to a deposit account. '
  DepositList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      deposit:
        type: array
        description: 'Details relating to a deposit account. '
        items:
          $ref: '#/definitions/Deposit'
    description: 'Data definition of a collection of deposits. '
  DepositParty:
    type: object
    properties:
      depositPartyId:
        type: string
        description: 'The party ID is a persistent and unique identifier for the party not related to the accounts they own but tied to that person or organization. It should be unique for all parties across the institution and remain the same over the life of the relationship with the financial institution. '
      depositPartyRelationshipType:
        $ref: '#/definitions/DepositParty_depositPartyRelationshipType'
      ssnOverride:
        type: boolean
        description: 'The partyâ€™s SSN should be used rather the primaryâ€™s SSN when reporting to the IRS. Only used if party relationship type is NOT PRIMARY.  Only one of these can appear on an account if applicable. '
      contactIdList:
        $ref: '#/definitions/Activity_activityRelatedTo_contactIdList'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
    description: 'This object points to the party and how it relates to the deposit. '
  DepositFilter:
    type: object
    properties:
      accountIdList:
        $ref: '#/definitions/AccountFilter_accountIdList'
      accountStatusList:
        $ref: '#/definitions/AccountFilter_accountStatusList'
      partyIdList:
        $ref: '#/definitions/Account_partyIdList'
      relationshipIdList:
        $ref: '#/definitions/AccountFilter_relationshipIdList'
      accountTypeList:
        $ref: '#/definitions/AccountFilter_accountTypeList'
      externalAccountFlag:
        type: boolean
        description: "If this is not provided, it returns all accounts regardless of whether they are internal or external. If it is provided and its true, it returns only external accounts; if its false, it returns only internal accounts. "
      includeNotesFlag:
        type: boolean
        description: "If this is not provided, it will not return notes. If it is provided and its true, it will return all active non-expired notes. "
      transactionDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
      accountMicrList:
        $ref: '#/definitions/AccountFilter_accountMicrList'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
      accountIdentificationList:
        $ref: '#/definitions/AccountFilter_accountIdentificationList'
      maturityDateRange:
        type: array
        description: 'Filter that is used to search the account maturity dates. Usage see common.xsd DateRange. '
        items:
          $ref: '#/definitions/DateRange'
    description: 'The list of filter options for services requesting deposit account or deposit account detail data. The options can be used in combination or by themselves.  It is up to the data source to either return or affect the data requested or return a standard error identifying why the request was rejected. '
  DepositFunding:
    type: object
    properties:
      targetAccountId:
        type: string
        description: 'The account ID is a persistent and unique identifier for the account. It must be unique for all users across the institution and remain the same over the life of the account. '
      fundingSourceId:
        type: string
        description: 'The account ID is a persistent and unique identifier for the account. It must be unique for all users across the institution and remain the same over the life of the account. '
      sourceOfFunds:
        type: string
        description: 'Identifies the source of the funds. '
        enum:
        - Cash
        - Check
        - Transfer
        - ACH
        - None
        - CreditCard
        - DebitCard
        - Wire
      fundingAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      holdAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      holdExpirationDate:
        type: string
        format: date
        description: 'The date on which the hold will expire. '
  DepositFundingList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      depositFunding:
        type: array
        description: 'The details required to fund a deposit account. '
        items:
          $ref: '#/definitions/DepositFunding'
  DepositFundingMessageDelete:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      depositFilter:
        $ref: '#/definitions/DepositFilter'
      depositFundingList:
        $ref: '#/definitions/DepositFundingList'
    description: Delete definition for DepositFundingMessage
  DepositFundingMessageGet:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      depositFilter:
        $ref: '#/definitions/DepositFilter'
    description: Get definition for DepositFundingMessage
  DepositFundingMessagePost:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      depositFundingList:
        $ref: '#/definitions/DepositFundingList'
    description: Post definition for DepositFundingMessage
  DepositFundingMessagePut:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      depositFilter:
        $ref: '#/definitions/DepositFilter'
      depositFundingList:
        $ref: '#/definitions/DepositFundingList'
    description: Put definition for DepositFundingMessage
  DepositFundingMessageResponse:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      depositFundingList:
        $ref: '#/definitions/DepositFundingList'
    description: Response definition for DepositFundingMessage
  DepositMessageDelete:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      depositFilter:
        $ref: '#/definitions/DepositFilter'
      depositList:
        $ref: '#/definitions/DepositList'
    description: Delete definition for DepositMessage
  DepositMessageGet:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      depositFilter:
        $ref: '#/definitions/DepositFilter'
    description: Get definition for DepositMessage
  DepositMessagePost:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      depositList:
        $ref: '#/definitions/DepositList'
    description: Post definition for DepositMessage
  DepositMessagePut:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      depositFilter:
        $ref: '#/definitions/DepositFilter'
      depositList:
        $ref: '#/definitions/DepositList'
    description: Put definition for DepositMessage
  DepositMessageResponse:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      depositList:
        $ref: '#/definitions/DepositList'
    description: Response definition for DepositMessage
  Document:
    type: object
    properties:
      documentId:
        type: string
        description: "The document ID is a persistent and unique identifier for the document not related to the party, relationship or accounts that the document is for. It should be unique for all documents across the institution and remain the same over the life of the document within the financial institution. "
      documentTitle:
        type: string
        description: "Each document has a title which is determined by the financial institution. Examples are: Loan Dislosure, Savings Disclosure, Checking Disclosure, Membership Disclosure, etc. "
      documentType:
        type: string
        description: "The type of document or document template, such as Notice, Statement, Disclosure, etc. A picture of a check.  If separate documents are used to denote the front and the back, then you may use the sub type to identify each side or just use the artifact collection to have each side. Legal information required to be delivered to party(ies) so they know how their accounts work and what their legal rights are. Information that is used to ID the consumer, organization, estate or trust when the party arrives at the front line. Information that relays the terms and agreements of a loan. Information that contains information about their applicatoon and relays the terms and agreements of joining a financial institution when an agreement is necessary to join. Legal notice to party(ies) that is required to be sent when an event happens on their associated accounts. Document that relays the image of a transaction or transactions that happened at a teller window, at an ATM or other delivery method. Balances, transactions and other information of the party(ies)s accounts at a point in time. A report that summarizes activities, segmentation, transactions, etc. May contain, but not limited to, information regarding their account, an image of the person, and a signature of the person for identification purposes. IRS-related information about earnings on accounts. This value can be used when no other types relate to the particular document.  What the document is can be found using the document title, sub type or appliesTo information. "
        enum:
        - CheckImage
        - Disclosure
        - IdentificationDocument
        - LoanDocument
        - MembershipDocument
        - Notice
        - Receipt
        - Statement
        - Report
        - SignatureCard
        - TaxForm
        - Other
      documentSubType:
        type: string
        description: "A further drill-down into the type of document that it is, i.e. a category within a Type.  These are defined by the financial institution based on the institutions needs. "
      appliesTo:
        $ref: '#/definitions/AccessProfile_customData'
      documentStatus:
        type: string
        description: "Current status of the document, i.e. in the process of being sent, viewed, returned, etc. (see signature type to determine if it was returned signed or not) The document has not yet been filled with information and can be used for any party, account or relationship as a template. The document has been sent to the person via mail or electronically, but it has not been signed. The document has been viewed online but it has not been signed.  Some documents may only require being viewed. The document has been returned.  See signature type to determine if it has been signed. The document is newly posted. it has not been viewed, nor returned, nor sent. "
        enum:
        - Template
        - Sent
        - Viewed
        - Returned
        - Recent
      documentVersion:
        type: string
        description: 'A description that identifies the version of this document so that multiple versions of the same document can be managed. '
      effectiveDateTime:
        type: string
        format: datetime
        description: 'The date and time that the document can be come effective. The date/time should be ISO 8601 UTC format. yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assume to be 00:00Z if omitted. '
      expirationDateTime:
        type: string
        format: datetime
        description: 'The date and time that the document expires. The date/time should be ISO 8601 UTC format. yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      documentArtifactIdList:
        $ref: '#/definitions/ArtifactFilter_artifactIdList'
      partyIdList:
        $ref: '#/definitions/Account_partyIdList'
      relationshipId:
        type: string
        description: 'The relationship ID is a persistent and unique identifier for the relationship. It should be unique for all relationships across the institution and remain the same over the life of the relationship with the financial institution. '
      accountIdList:
        $ref: '#/definitions/AccountFilter_accountIdList'
      accountIdentificationList:
        $ref: '#/definitions/AccountFilter_accountIdentificationList'
      prefillable:
        type: boolean
        description: "Identifies if the process can prefill the document template with party, relationship or account data. If this document is no longer a template, was the document prefillable before it became an instance of a party-, relationship- or account-related document? Refer to status field to determine if the document is a document template. "
      prefilled:
        type: boolean
        description: "Identifies if the process prefilled a prefillable document template with party, relationship or account data. "
      documentSignatureList:
        $ref: '#/definitions/Document_documentSignatureList'
      witnessList:
        $ref: '#/definitions/Document_witnessList'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
      documentArtifactList:
        $ref: '#/definitions/Document_documentArtifactList'
    description: "The document defines the information stored when a person signs a document or agreement either electronically or manually.  This also relates documents to the party, relationship and/or account to which the document is legally bound. "
  DocumentId:
    type: string
    description: "The document ID is a persistent and unique identifier for the document not related to the party, relationship or accounts that the document is for. It should be unique for all documents across the institution and remain the same over the life of the document within the financial institution. "
  DocumentList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      document:
        type: array
        items:
          $ref: '#/definitions/Document'
    description: "The documents collection/array list contains all the documents or document templates, for instance, that the credential set is authorized to access at the Institution based on applied filters. "
  DocumentSignature:
    type: object
    properties:
      documentSignatureType:
        type: string
        description: "If the document has been signed, how it was signed. The document has been been sent or viewed online, but it has not been signed. The document has been viewed online and the person agreed to it electronically. The document has been viewed online and the person agreed to it electronically with a single click. The document has been viewed and the person agreed to it in writing (handwrote signature in person). "
        enum:
        - Unsigned
        - ElectronicSignature
        - SingleClickAcceptance
        - WetSignature
      signaturePurpose:
        type: string
        description: "Defines the location and/or purpose of this instance of the signature. This may be acknowledging the terms and conditions, initialing a location on the page, or final signature. "
      signatureArtifactId:
        $ref: '#/definitions/Artifact_artifactId'
      documentSignedDateTime:
        type: string
        format: datetime
        description: "Current status of the document, such as if its in the process of being sent, presented, signed, unsigned, etc.  The date/time should be ISO 8601 UTC format. yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. "
      signaturePartyId:
        type: string
        description: 'The party ID is a persistent and unique identifier for the party not related to the accounts they own but tied to that person or organization. It should be unique for all parties across the institution and remain the same over the life of the relationship with the financial institution. '
      signedWithIpAddress:
        type: string
        description: 'IP Address string '
      documentDigitalFingerprint:
        type: string
        description: 'The digital hash was created using a mathematical algorithm (typically SHA-1 but it is up to the end points to determine) on the document at the time that it was electronically signed. '
      documentDigitalAlgorithm:
        type: string
        description: 'The mathematical algorithm used to create the digital hash (typically SHA-1 but it is up to the end points to determine). '
      documentDigitalCertificate:
        type: string
        description: "The users digital certificate, issued by a certificate authority, that was used at the time that the document was electronically signed. "
      usersPublicKey:
        type: string
        description: "When electronically signed, this is the users public key, which is part of the users certificate that was used to create the digital signature. "
      viewedConfirmationValue:
        type: string
        description: 'This is the value that the user is presented with to confirm that they were able to view document. '
      viewedConfirmationStatus:
        type: string
        description: "The value has been presented. The user has confirmed the value presented. The user attempted to confirm value, but user value did not match presented value. "
        enum:
        - Presented
        - Confirmed
        - Failed
  DocumentSignatureType:
    type: string
    description: "If the document has been signed, how it was signed. The document has been been sent or viewed online, but it has not been signed. The document has been viewed online and the person agreed to it electronically. The document has been viewed online and the person agreed to it electronically with a single click. The document has been viewed and the person agreed to it in writing (handwrote signature in person). "
    enum:
    - Unsigned
    - ElectronicSignature
    - SingleClickAcceptance
    - WetSignature
  DocumentStatus:
    type: string
    description: "Current status of the document, i.e. in the process of being sent, viewed, returned, etc. (see signature type to determine if it was returned signed or not) The document has not yet been filled with information and can be used for any party, account or relationship as a template. The document has been sent to the person via mail or electronically, but it has not been signed. The document has been viewed online but it has not been signed.  Some documents may only require being viewed. The document has been returned.  See signature type to determine if it has been signed. The document is newly posted. it has not been viewed, nor returned, nor sent. "
    enum:
    - Template
    - Sent
    - Viewed
    - Returned
    - Recent
  DocumentSubType:
    type: string
    description: "A further drill-down into the type of document that it is, i.e. a category within a Type.  These are defined by the financial institution based on the institutions needs. "
  DocumentTitle:
    type: string
    description: "Each document has a title which is determined by the financial institution. Examples are: Loan Dislosure, Savings Disclosure, Checking Disclosure, Membership Disclosure, etc. "
  DocumentType:
    type: string
    description: "The type of document or document template, such as Notice, Statement, Disclosure, etc. A picture of a check.  If separate documents are used to denote the front and the back, then you may use the sub type to identify each side or just use the artifact collection to have each side. Legal information required to be delivered to party(ies) so they know how their accounts work and what their legal rights are. Information that is used to ID the consumer, organization, estate or trust when the party arrives at the front line. Information that relays the terms and agreements of a loan. Information that contains information about their applicatoon and relays the terms and agreements of joining a financial institution when an agreement is necessary to join. Legal notice to party(ies) that is required to be sent when an event happens on their associated accounts. Document that relays the image of a transaction or transactions that happened at a teller window, at an ATM or other delivery method. Balances, transactions and other information of the party(ies)s accounts at a point in time. A report that summarizes activities, segmentation, transactions, etc. May contain, but not limited to, information regarding their account, an image of the person, and a signature of the person for identification purposes. IRS-related information about earnings on accounts. This value can be used when no other types relate to the particular document.  What the document is can be found using the document title, sub type or appliesTo information. "
    enum:
    - CheckImage
    - Disclosure
    - IdentificationDocument
    - LoanDocument
    - MembershipDocument
    - Notice
    - Receipt
    - Statement
    - Report
    - SignatureCard
    - TaxForm
    - Other
  Witness:
    type: object
    properties:
      witnessId:
        type: string
        description: "The witness ID is a unique identifier for the witness based on the type of witness (see witnessIdType below). In the case of a notary, the witness ID may be a concatenation of the name, county, and state to ensure a unique value. "
      witnessIdType:
        type: string
        description: "The type of witness. The witness is from a third party. The system user identifier, if an automated system witnessed the document. The witness is a notary. The user identification was not one of the above formats. "
        enum:
        - WitnessId
        - VendorEmployeeId
        - SystemAccountId
        - NotaryId
        - Custom
    description: 'Collection of document witness(es) associated with a document.  There can be multiple witnesses for a single document. '
  DocumentFilter:
    type: object
    properties:
      documentIdList:
        $ref: '#/definitions/DocumentFilter_documentIdList'
      documentTitleList:
        $ref: '#/definitions/DocumentFilter_documentTitleList'
      documentTypeList:
        $ref: '#/definitions/DocumentFilter_documentTypeList'
      documentSubTypeList:
        $ref: '#/definitions/DocumentFilter_documentSubTypeList'
      appliesTo:
        $ref: '#/definitions/AccessProfile_customData'
      documentCreationDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
      documentEffectiveDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
      documentExpirationDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
      documentVersion:
        type: string
        description: 'A description that identifies the version of this document so that multiple versions of the same document can be managed. '
      partyIdList:
        $ref: '#/definitions/Account_partyIdList'
      relationshipIdList:
        $ref: '#/definitions/AccountFilter_relationshipIdList'
      accountIdList:
        $ref: '#/definitions/AccountFilter_accountIdList'
      documentStatusList:
        $ref: '#/definitions/DocumentFilter_documentStatusList'
      documentSignatureTypeList:
        $ref: '#/definitions/DocumentFilter_documentSignatureTypeList'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
      includeArtifactObjectFlag:
        type: boolean
        description: 'If set true then the response shall include the base 64 binary objects. When false or not set do not return the base 64 binary. This is intended to manage the response message size. '
      accountIdentificationList:
        $ref: '#/definitions/AccountFilter_accountIdentificationList'
    description: 'The list of filter options for services requesting document data.  The options can be used in combination or by themselves.  It is up to the data source to either return or affect the data requested or return a standard error identifying why the request was rejected. '
  DocumentMessageDelete:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      documentFilter:
        $ref: '#/definitions/DocumentFilter'
      documentList:
        $ref: '#/definitions/DocumentList'
    description: Delete definition for DocumentMessage
  DocumentMessageGet:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      documentFilter:
        $ref: '#/definitions/DocumentFilter'
    description: Get definition for DocumentMessage
  DocumentMessagePost:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      documentList:
        $ref: '#/definitions/DocumentList'
    description: Post definition for DocumentMessage
  DocumentMessagePut:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      documentFilter:
        $ref: '#/definitions/DocumentFilter'
      documentList:
        $ref: '#/definitions/DocumentList'
    description: Put definition for DocumentMessage
  DocumentMessageResponse:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      documentList:
        $ref: '#/definitions/DocumentList'
    description: Response definition for DocumentMessage
  AffinityBrand:
    type: string
    description: 'An affinity brand where the eligibility requirement is applicable. '
  EligibilityRequirement:
    type: object
    properties:
      requirementId:
        type: string
        description: "Identifier for the type of the eligibility requirement. For most financial institutions, this might be a select employee group, a community identifier or other field of membership criteria identifier. "
      description:
        type: string
        description: 'Description of the eligibility requirement. '
      affinityBrandList:
        $ref: '#/definitions/EligibilityRequirement_affinityBrandList'
      nextActionRequiredId:
        type: integer
        description: "Not present unless the member selects this eligibility requirement and there are additional actions required besides continuing with the application, only then will this tell the application what action should be requested.  It is up to the application provider to work with the financial institution to determine what the nextActionRequiredIds represent and to present that in the applicable language. For example, \"Please go to the nearest branch to complete the application\", \"Please login to complete your application\", or other instances of gathering additional information regarding their eligibility.  For instance, if this was a geographically based qualification, it might ask for zip code or street address, or if it is a business requirement, then it may ask for the business unit.  The answers to the additional qualification criteria would be saved in the eligibilityRequirementMet referenceDescription field. "
      customData:
        $ref: '#/definitions/AccessProfile_customData'
  EligibilityRequirementList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      eligibilityRequirement:
        type: array
        description: 'How the party was eligibile. '
        items:
          $ref: '#/definitions/EligibilityRequirement'
    description: 'List of how a party can qualify for a relationship with the financial institution. '
  RequirementId:
    type: string
    description: "Identifier for the type of the eligibility requirement. For most financial institutions, this might be a select employee group, a community identifier or other field of membership criteria identifier. "
  EligibilityRequirementFilter:
    type: object
    properties:
      eligibilityRequirementIdList:
        $ref: '#/definitions/EligibilityRequirementFilter_eligibilityRequirementIdList'
      affinityBrandList:
        $ref: '#/definitions/EligibilityRequirement_affinityBrandList'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
    description: 'The list of filter options for requesting possible eligibility requirements for creating a relationship with a financial institution.  The options can be used in combination or by themselves.  It is up to the data source to either return or affect the data requested or return a standard error identifying why the request was rejected. '
  EligibilityRequirementMessageDelete:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      eligibilityRequirementFilter:
        $ref: '#/definitions/EligibilityRequirementFilter'
      eligibilityRequirementList:
        $ref: '#/definitions/EligibilityRequirementList'
    description: Delete definition for EligibilityRequirementMessage
  EligibilityRequirementMessageGet:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      eligibilityRequirementFilter:
        $ref: '#/definitions/EligibilityRequirementFilter'
    description: Get definition for EligibilityRequirementMessage
  EligibilityRequirementMessagePost:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      eligibilityRequirementList:
        $ref: '#/definitions/EligibilityRequirementList'
    description: Post definition for EligibilityRequirementMessage
  EligibilityRequirementMessagePut:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      eligibilityRequirementFilter:
        $ref: '#/definitions/EligibilityRequirementFilter'
      eligibilityRequirementList:
        $ref: '#/definitions/EligibilityRequirementList'
    description: Put definition for EligibilityRequirementMessage
  EligibilityRequirementMessageResponse:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      eligibilityRequirementList:
        $ref: '#/definitions/EligibilityRequirementList'
    description: Response definition for EligibilityRequirementMessage
  Substitution:
    type: object
    properties:
      id:
        type: string
        description: "ID of the substitution as it appears in the error message. For example, %1, %2, etc. "
      value:
        type: string
        description: "The data that should be placed in the error message wherever the substitution ID shows up in the error message.  This would most likely be a field name, field value, etc. This is done to allow the rest of the error message to be translated by the consuming end point, if the message was not translated by the core.  Its up to the end points to determine which end point will translate if its supported. "
  Fee:
    type: object
    properties:
      feeId:
        type: array
        description: 'The ID for the fee. '
        items:
          $ref: '#/definitions/FeeId'
      feeType:
        $ref: '#/definitions/Fee_feeType'
      type:
        type: string
        description: 'The fee type is the textual representation of the kind of fee. This type definition is deprecated. '
      relatedTo:
        $ref: '#/definitions/Fee_relatedTo'
      frequency:
        type: string
        description: "A value that indicates how this price is applied.  For instance, this price may be per stop payment, for a stop payment action, which would equate to PerUse. This value may be a recurring monthly charge, regardless of usage, which would be the Monthly frequency. "
        enum:
        - AmortizedSchedule
        - Annual
        - AtMaturity
        - Bimonthly
        - Biweekly
        - BiweeklySkipFirst
        - BiweeklySkipLast
        - Daily
        - EventTrigger
        - Hourly
        - Immediate
        - Monthly
        - None
        - OneTime
        - Other
        - PerUse
        - Quarterly
        - SemiAnnual
        - SemiMonthly
        - Triannual
        - Weekly
        - WeeklySkipFirst
        - WeeklySkipLast
        - XDays
        - XMonths
        - XYears
      minimumFrequency:
        type: integer
        description: "A value that indicates to what frequency this price applies.  This element shall only exist for the PerUse frequency. It can be used to denote tiered pricing. For instance, one party-action coupling may return four Price elements, one for when the function is used between 1 and 10 times, between 11-99 times, 100-999 times, and 1000 times to 10000000 times. "
      maximumFrequency:
        type: integer
        description: 'The upper bound of a tiered pricing amount. '
  FeeId:
    type: string
    description: 'The fee ID is a persistent and unique identifier for the fee. It must be unique for all users across the institution and remain the same over the life of the fee. '
  FeeList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      fee:
        type: array
        items:
          $ref: '#/definitions/Fee'
    description: "The accounts collection/array contains all the fees, for instance, that the credential set is authorized to access at the Institution based on applied filters. "
  FeeType:
    type: object
    properties:
      feeCategory:
        type: string
        description: "The fee category shows the family or category of a fee. Unpaid Item Fee Due to Draft or Due to Other: for NSF Fee. An overdraft is an extension of credit from a lending institution when an account balance reaches zero or an act of overdrawing a bank account. Overdraft fees are directly related to overdraft items due to draft and related transactions. These may include courtesy pay fees, overdraft item fee force paid, transfer courtesy fees, below minimum withdrawal fees, below minimum advance fees, and overdraft transfer fees. Withdrawal Fee: for W/D Fee. Advance Fee: for Adv Fee. Deposit Fee. Payment Fee. Stop Fee. Overlimit Fee Due to Draft: for OVL Fee; not covered by Reg DD. Bill Payment Fee; not covered by Reg DD. Transfer Fee: for XFR Fee; not covered by Reg DD. Withdrawal to Below Base Fee; not covered by Reg DD. Closing Within Base Count Days Fee; not covered by Reg DD. Withdrawal When Balance Below Base Fee: not covered by Reg DD. Fees related to interaction with tellers.  This could include a lobby visit fee. Check Printing Fee: for Check Fees; not covered by Reg DD. Check Other Fee: for Check Fees; not covered by Reg DD. New Share Fee; not covered by Reg DD. Document Stamp Fee: applies to Loan Tax (LT) teller transactions; not covered by Reg DD. ATM Custom Fee: for Custom ATM Fee Edits; not covered by Reg DD. Audio Custom Fee: for Custom Audio Fee Edits; not covered by Reg DD. Fees related to the delivery of online services. An example would be charging a member for custom data feed to desktop personal financial management products. International Transaction Fee: for Custom Card Fee Edits for International Transaction Fees; not covered by Reg DD. Payment Skip Fee: only for open end loans and lines of credit; covered by Regulation Z. Other Regulation Z Fee: only for open end loans and lines of credit. "
        enum:
        - Unpaid
        - Overdraft
        - Withdrawal
        - Advance
        - Deposit
        - Payment
        - StopFee
        - Overlimit
        - BillPayment
        - Transfer
        - WithdrawaltoBelowBase
        - ClosingWithinBaseCountDays
        - WithdrawalWhenBalanceBelowBase
        - TellerUsage
        - CheckPrinting
        - CheckOther
        - NewShare
        - DocumentStamp
        - ATMCustom
        - AudioCustom
        - OnlineServices
        - InternationalTransaction
        - PaymentSkip
        - OtherRegulationZ
      isRegDApplicable:
        type: boolean
        description: 'This element indicates if the fee is Regulation D applicable. Default is false.  If element is missing; false is assumed. '
  FeeScheduleFilter:
    type: object
    properties:
      feeIdList:
        $ref: '#/definitions/FeeScheduleFilter_feeIdList'
      feeTypeList:
        $ref: '#/definitions/FeeScheduleFilter_feeTypeList'
      feeEffectiveDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
      partyIdList:
        $ref: '#/definitions/Account_partyIdList'
      relationshipIdList:
        $ref: '#/definitions/AccountFilter_relationshipIdList'
      contactIdList:
        $ref: '#/definitions/Activity_activityRelatedTo_contactIdList'
      accountIdList:
        $ref: '#/definitions/AccountFilter_accountIdList'
      accountStatusList:
        $ref: '#/definitions/AccountFilter_accountStatusList'
      taxIdList:
        $ref: '#/definitions/ContactFilter_taxIdList'
      partyTypeList:
        $ref: '#/definitions/FeeScheduleFilter_partyTypeList'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
      accountIdentificationList:
        $ref: '#/definitions/AccountFilter_accountIdentificationList'
    description: 'The list of filter options for fees.  The options can be used in combination or by themselves. It is up to the data source to either return or affect the data requested or return a standard error identifying why the request was rejected. '
  FeeScheduleMessageDelete:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      feeScheduleFilter:
        $ref: '#/definitions/FeeScheduleFilter'
      feeList:
        $ref: '#/definitions/FeeList'
    description: Delete definition for FeeScheduleMessage
  FeeScheduleMessageGet:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      feeScheduleFilter:
        $ref: '#/definitions/FeeScheduleFilter'
    description: Get definition for FeeScheduleMessage
  FeeScheduleMessagePost:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      feeList:
        $ref: '#/definitions/FeeList'
    description: Post definition for FeeScheduleMessage
  FeeScheduleMessagePut:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      feeScheduleFilter:
        $ref: '#/definitions/FeeScheduleFilter'
      feeList:
        $ref: '#/definitions/FeeList'
    description: Put definition for FeeScheduleMessage
  FeeScheduleMessageResponse:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      feeList:
        $ref: '#/definitions/FeeList'
    description: Response definition for FeeScheduleMessage
  Field:
    type: object
    properties:
      fieldId:
        type: string
        description: 'Identifier for the field. '
      fieldName:
        type: string
        description: 'The name of the field. '
      fieldType:
        type: string
        description: "The expected type for the  field. May be a Boolean, String, GUID, or other data types. "
      fieldPrompt:
        type: string
        description: "Description providing instruction on how to populate the fieldValue, intended for presentation to a user. May also be a url for supporting information. "
      fieldValue:
        type: string
        description: 'The selected or entered field value to be returned to the calling application. '
      isFieldRequired:
        type: boolean
        description: "Optional boolean to define if the field is required or optional. If not populated, then it will assume to be optional. "
      fieldRequirementList:
        $ref: '#/definitions/Field_fieldRequirementList'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
  FieldId:
    type: string
    description: 'Identifier for the field. '
  FieldList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      field:
        type: array
        description: 'Field data. '
        items:
          $ref: '#/definitions/Field'
    description: 'List of fields to provide for a given interaction. '
  FieldRequirement:
    type: object
    properties:
      fieldRequirementId:
        type: string
        description: 'Identifier for the field requirement. '
      fieldTechnicalRequirement:
        type: string
        description: "Technical requirement to be handled programatically as part of presentation / interaction. examples \"A-Z\", \"0-9\", \"Alphanumeric\" "
      fieldSelection:
        type: string
        description: 'The value of a valid population for the response. '
      fieldRequirementDescription:
        type: string
        description: 'Description of the requirement. Available to optionally replace or modify fieldPrompt. '
      fieldRequirementType:
        type: string
        description: "The format of the content of fieldRequirement. Example: Java Script, Pattern, HTML, C# snippet. "
      customData:
        $ref: '#/definitions/AccessProfile_customData'
  FieldRequirementId:
    type: string
    description: 'Identifier for the field requirement. '
  FieldRequirementType:
    type: string
    description: "The format of the content of fieldRequirement. Example: Java Script, Pattern, HTML, C# snippet. "
  FieldType:
    type: string
    description: "The expected type for the  field. May be a Boolean, String, GUID, or other data types. "
  FieldFilter:
    type: object
    properties:
      fieldIdList:
        $ref: '#/definitions/FieldFilter_fieldIdList'
      fieldRequirementIdList:
        $ref: '#/definitions/FieldFilter_fieldRequirementIdList'
      fieldTypeList:
        $ref: '#/definitions/FieldFilter_fieldTypeList'
      fieldRequirementTypeList:
        $ref: '#/definitions/FieldFilter_fieldRequirementTypeList'
      productServiceRequestIdList:
        $ref: '#/definitions/FieldFilter_productServiceRequestIdList'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
    description: "The list of filter options for field requirement read, update or delete request. "
  FieldMessageDelete:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      fieldFilter:
        $ref: '#/definitions/FieldFilter'
      fieldList:
        $ref: '#/definitions/FieldList'
    description: Delete definition for FieldMessage
  FieldMessageGet:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      fieldFilter:
        $ref: '#/definitions/FieldFilter'
    description: Get definition for FieldMessage
  FieldMessagePost:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      fieldList:
        $ref: '#/definitions/FieldList'
    description: Post definition for FieldMessage
  FieldMessagePut:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      fieldFilter:
        $ref: '#/definitions/FieldFilter'
      fieldList:
        $ref: '#/definitions/FieldList'
    description: Put definition for FieldMessage
  FieldMessageResponse:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      fieldList:
        $ref: '#/definitions/FieldList'
    description: Response definition for FieldMessage
  FinancialInstitution:
    type: object
    properties:
      fiId:
        type: string
        description: "The financial institution ID  is used by systems to uniquely identify each financial institution. This ID is determined outside of the process and stored in each system of record, e.g. local application database, vendor configuration file, FI core database, etc. This is helpful for applications that are multi-tenant and  service more than one financial institution. See dataSourceId for more information about multiple data sources for a single FI. A standard error will be returned if the FIID is not provided when it is required. "
      fiName:
        type: string
        description: 'The financial institution name  is used by systems to identify each financial institution. '
      fiDescription:
        type: string
        description: 'Description of the financial institution. More details can be found in the party detail associated to this financial institution. '
      fiOrganizationType:
        type: string
        description: "A business that legally has no separate existence from its owner. Income and losses are taxed on the individuals personal income tax return. Legal form of company that provides limited liability to its owners in the vast majority of United States jurisdictions. A nominate contract between individuals who, in a spirit of cooperation, agree to carry on an enterprise; contribute to it by combining property, knowledge or activities; and share its profit. An association of individuals, created by law or under authority of law, having a continuous existence independent of the existences of its members, and powers and liabilities distinct from those of its members. A not for profit organization is a type of organization that does not earn profits for its owners. All of the money earned by or donated to a not for profit organization is used in pursuing the organizations objectives. Typically not for profit organizations are charities or other types of public service organizations. Generally, not for profit organizations can apply for a tax exempt status so that the organization is not subject to most forms of taxation. Donations made to a tax exempt not for profit organization may also be tax-deductible for the donor. Taken from investopedia.com. An organization composed of people who voluntarily meet on a regular basis for a mutual purpose other than educational, religious, charitable, or financial pursuits. A club is any kind of group that has members who meet for a social, literary, or political purpose, such as health clubs, country clubs, book clubs, and womens associations. The term club is not a legal term per se, but a group that organizes itself as a club must comply with any laws governing its organization and otherwise be cognizant of the legal ramifications in undertaking to organize itself in this manner. Taken from legal-dictionary.thefreedictionary.com "
        enum:
        - SoleProprietorship
        - Llc
        - Partnership
        - Corporation
        - NotForProfit
        - Club
      fiStatus:
        type: string
        description: 'Indicates the status of the overall financial institution. '
        enum:
        - Online
        - Offline
        - Deleted
        - Other
      fiStatusComment:
        type: string
        description: 'The financial institution status is used to identify why a financial institution is in a particular status. '
      fiTimeZoneUTCOffset:
        type: string
        format: TOKEN
        description: "The offset of the time zone from Universal Time from the reference point. For example Format : [+|-]HH:MM If the location observes daylight savings time, this value may need to be updated. "
      partyId:
        type: string
        description: 'The party ID is a persistent and unique identifier for the party not related to the accounts they own but tied to that person or organization. It should be unique for all parties across the institution and remain the same over the life of the relationship with the financial institution. '
      fiCurrencySupportList:
        $ref: '#/definitions/Service_currencySupportList'
      fiAcceptLanguageList:
        $ref: '#/definitions/Service_acceptLanguageList'
      fiCreatedDateTime:
        type: string
        format: datetime
        description: 'The date and time this financial institution was created. The date/time should be ISO 8601 UTC format. yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      fiCreatedBy:
        type: string
        description: 'The unique identifier created by the system and or the user for identification. '
      fiLastUpdatedDateTime:
        type: string
        format: datetime
        description: 'The date and time this financial institution was last updated. The date/time should be ISO 8601 UTC format. yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      fiLastUpdatedBy:
        type: string
        description: 'The unique identifier created by the system and or the user for identification. '
      customData:
        $ref: '#/definitions/AccessProfile_customData'
  FinancialInstitutionList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      financialInstitution:
        type: array
        description: 'A financial instution that has permissions to this CUFX instance. A financial institution must be in the configuration list to have access to a specific set of data. '
        items:
          $ref: '#/definitions/FinancialInstitution'
    description: 'The master list of financial institutions available in the CUFX instance. A financial institution must be in a configuration list to have access to a specific set of data. '
  FinancialInstitutionName:
    type: string
    description: 'The financial institution name  is used by systems to identify each financial institution. '
  FinancialInstitutionStatus:
    type: string
    enum:
    - Online
    - Offline
    - Deleted
    - Other
  FinancialInstitutionFilter:
    type: object
    properties:
      fiIdList:
        $ref: '#/definitions/ConfigurationFilter_fiIdList'
      fiNameList:
        $ref: '#/definitions/FinancialInstitutionFilter_fiNameList'
      fiStatusList:
        $ref: '#/definitions/FinancialInstitutionFilter_fiStatusList'
      partyIdList:
        $ref: '#/definitions/Account_partyIdList'
      fiCreatedDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
      fiCreatedByList:
        $ref: '#/definitions/CredentialGroupFilter_userIdList'
      fiUpdatedDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
      fiLastUpdatedByList:
        $ref: '#/definitions/CredentialGroupFilter_userIdList'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
    description: 'The list of filter options for financial institution data. '
  FinancialInstitutionMessageDelete:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      financialInstitutionFilter:
        $ref: '#/definitions/FinancialInstitutionFilter'
      financialInstitutionList:
        $ref: '#/definitions/FinancialInstitutionList'
    description: Delete definition for FinancialInstitutionMessage
  FinancialInstitutionMessageGet:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      financialInstitutionFilter:
        $ref: '#/definitions/FinancialInstitutionFilter'
    description: Get definition for FinancialInstitutionMessage
  FinancialInstitutionMessagePost:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      financialInstitutionList:
        $ref: '#/definitions/FinancialInstitutionList'
    description: Post definition for FinancialInstitutionMessage
  FinancialInstitutionMessagePut:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      financialInstitutionFilter:
        $ref: '#/definitions/FinancialInstitutionFilter'
      financialInstitutionList:
        $ref: '#/definitions/FinancialInstitutionList'
    description: Put definition for FinancialInstitutionMessage
  FinancialInstitutionMessageResponse:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      financialInstitutionList:
        $ref: '#/definitions/FinancialInstitutionList'
    description: Response definition for FinancialInstitutionMessage
  BatchId:
    type: string
    description: 'The BatchId is a persistent and unique identifier for a group of payments or transfers processed at the same time. '
  OccurrenceId:
    type: string
    description: 'The occurrence ID to uniquely identify the occurrence of a payment or transfer. '
  OccurrenceStatus:
    type: string
    description: "This is the enumeration of statuses for payments or transfers. The payment or transfer is in the process for immediate or future payment and is cancellable by the party since its not InProcess yet. The payment or transfer is in process and is no longer cancellable, but it has not been sent. A payment or transfer was requested to be cancelled by the party but has not yet been cancelled. A payment or transfer has been cancelled at the request of the originating partys financial institution. A payment or transfer has been cancelled at the request of the processor. Example is case of bill pay this would be the bill payment processor. A payment or transfer has been cancelled. Payment or transfer has been sent to the payee but has not been received yet. The payment or transfer transaction has been cleared/completed by the financial institution. The payment or transfer was declined (for instance, in the case that a debit or card was used as the funding source). The funds have been transferred to the payment processor but have not yet arrived at the payment processor. The funds for the payment or transfer have been received by the payment processor but the actual payment hasnt cleared at the payee. The payment or transfer has been held by the payment processor and has not been sent to the payee. The payment or transfer has attempted to clear the financial institution account but there was not enough funds available. Payment or transfer was returned by the payee and not cleared. Payment or transfer was scheduled for recurring payment but has been suspended until taken out of suspended status. "
    enum:
    - Scheduled
    - InProcess
    - CancelRequestedByParty
    - CancelRequestedByFinancialInstitution
    - CancelRequestedByProcessor
    - Cancelled
    - Sent
    - Completed
    - Declined
    - FundsOutbound
    - FundsCleared
    - Held
    - InsufficientFunds
    - Returned
    - Suspended
  RecurringId:
    type: string
    description: 'ID to uniquely identify a recurring payment or transfer request. '
  RecurringStatus:
    type: string
    description: "This is the enumeration of statuses for a recurring payment or transfer request . The payment or transfer request is in process for immediate or future payment and is still cancellable by the party since its not InProcess yet. The recurring payment or transfer request has been scheduled. A recurring payment or transfer request was requested to be cancelled by the party, but has not yet been cancelled. A recurring payment or transfer request was requested to be cancelled by the partys financial institution. A recurring payment or transfer request was requested to be cancelled by the partys payment provider. A recurring payment or transfer request has been cancelled. All recurring payments or transfer requests have been completed. Payment or transfer request was scheduled for recurring payment but has been suspended until taken out of suspended status.  This status might be used if a party wants to keep the payment/transfer request in the system but temporarily stop payment or transfers from occurring. "
    enum:
    - Requested
    - Active
    - CancelRequestedByParty
    - CancelRequestedByFinancialInstitution
    - CancelRequestedByPaymentProvider
    - Cancelled
    - Completed
    - Suspended
  Hold:
    type: object
    properties:
      holdId:
        type: string
        description: 'The hold ID is a persistent and unique identifier for the hold. '
      accountId:
        type: string
        description: 'The account ID is a persistent and unique identifier for the account. It must be unique for all users across the institution and remain the same over the life of the account. '
      accountType:
        type: string
        description: "Checking account, i.e., checks can be written against the account. Money market accounts can be included here or in money markets.  Its up to the institution. Savings and club accounts.  This can optionally include CDs, but its up to the institution. Auto loans, etc. Loans that are NOT lines of credit or credit cards. Loan behind the credit card.  Note the actual card information in the card object. Loan that is a line of credit but NOT a credit card. Loan that is made in exchange for taking title of property. Investment accounts such as brokerage and this can optionally include CDs and/or money markets, but its up to the institution. This account is a special type of checking account connected to a pre-paid card. Other account type. Loan that is made in installments. Loan is typically unsecured. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Installment. Loan that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Commercial. Line of Credit that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of CommercialLineOfCredit. A general ledger account of the financial institution. A loan account type that has not been prevously defined. This enumeration is considered deprecated. Recommend using account type loan and subAccount of OtherLoan. "
        enum:
        - Checking
        - Savings
        - Loan
        - CreditCard
        - LineOfCredit
        - Mortgage
        - Investment
        - PrePaidCard
        - Other
        - Installment
        - CommercialLoan
        - CommercialLineOfCredit
        - GeneralLedger
        - OtherLoan
      accountSubType:
        type: string
        description: 'The account subtype identifies the specific account type that the back end system will recognize. '
      transactionId:
        type: string
        description: 'The transaction ID is a persistent and unique identifier for the transaction related to the hold. '
      holdType:
        type: string
        description: "Hold any amount for any purpose. Hold the entire amount of a check or a partial amount until the check clears. Hold the entire amount of a certified draft or a partial amount until the certified draft clears. Stop payment on a draft/check (written authorization from the member). Reserve funds for a preauthorized credit card purchase or for an ATM point of sale transaction. Hold funds pledged against a hold. Prevent posting an automated clearing house transaction (written authorization from the member). Stop payment on a draft (verbal authorization from the member). Prevent posting an automated clearing house transaction (verbal authorization from the member). Prevent posting an automated clearing house transaction for as long as the hold remains in the account. Hold funds when a merchant calls to verify that funds are available to cover a members check. Hold when fees cannot be collected due to insufficient funds. Hold on a preapproved hold draft for a zero-balance preapproved hold. Hold on a member draft used for bill payment until the draft posts to the account, or until the hold expires. Hold for unauthorized ACH transactions. Hold on an account that is being used for ACH origination. Hold on account when a Death Notification Entry (DNE) has been received. Hold on PIN-based transactions. Prevent posting ACH debits for member business shares. Place the entire amount of a wire transfer on hold until the outgoing wire is posted. The transaction or account is in a disputed status. "
        enum:
        - GeneralPurpose
        - CheckHold
        - CertifiedDraft
        - StopDraft
        - SignatureAuth
        - PledgeHold
        - StopACH
        - StopDraftVerbal
        - StopACHVerbal
        - RevokeACH
        - MerchantVerification
        - UncollectedFee
        - HoldDraft
        - BillPayment
        - UnauthorizedACHStop
        - ACHOrigination
        - ACHDNE
        - PinAuth
        - BusinessBlockACHDebit
        - WireHold
        - Disputed
      effectiveDate:
        type: string
        format: datetime
        description: 'Date/time that the hold was created or should take effect. The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      expirationDate:
        type: string
        format: datetime
        description: 'Date/time that the hold should be released. The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      actualReleaseDate:
        type: string
        format: datetime
        description: 'Date/time that the hold was actually released. The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      holdStatus:
        type: string
        description: 'This is the enumeration of statuses for holds. The hold is active. The hold is Inactive. '
        enum:
        - Active
        - InActive
      description:
        type: string
        description: 'Description of the hold and/or a note attached to the hold. '
      amount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      payee:
        type: string
        description: "For stop payment holds, name of the draft or ACH payee. "
      reason:
        type: string
        description: 'Reason for the stop/hold. This value is visible to the user and must be human-readable. '
        enum:
        - Unknown
        - Lost
        - Stolen
        - Destroyed
        - NotEndorsed
        - Certified
        - Disputed
        - ReturnedMerchandise
        - StoppedService
        - Other
      feeId:
        type: string
        description: 'The fee ID is a persistent and unique identifier for the fee. It must be unique for all users across the institution and remain the same over the life of the fee. '
      startCheckNumber:
        type: string
        description: 'The number on the face of the check indicating the id of that check in a series. '
      endCheckNumber:
        type: string
        description: 'The number on the face of the check indicating the id of that check in a series. '
      customData:
        $ref: '#/definitions/AccessProfile_customData'
  HoldId:
    type: string
    description: 'The hold ID is a persistent and unique identifier for the hold. '
  HoldList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      hold:
        type: array
        description: 'Details relating to a hold. '
        items:
          $ref: '#/definitions/Hold'
    description: 'Collection of holds data definition. '
  HoldReasonType:
    type: string
    enum:
    - Unknown
    - Lost
    - Stolen
    - Destroyed
    - NotEndorsed
    - Certified
    - Disputed
    - ReturnedMerchandise
    - StoppedService
    - Other
  HoldType:
    type: string
    description: "Hold any amount for any purpose. Hold the entire amount of a check or a partial amount until the check clears. Hold the entire amount of a certified draft or a partial amount until the certified draft clears. Stop payment on a draft/check (written authorization from the member). Reserve funds for a preauthorized credit card purchase or for an ATM point of sale transaction. Hold funds pledged against a hold. Prevent posting an automated clearing house transaction (written authorization from the member). Stop payment on a draft (verbal authorization from the member). Prevent posting an automated clearing house transaction (verbal authorization from the member). Prevent posting an automated clearing house transaction for as long as the hold remains in the account. Hold funds when a merchant calls to verify that funds are available to cover a members check. Hold when fees cannot be collected due to insufficient funds. Hold on a preapproved hold draft for a zero-balance preapproved hold. Hold on a member draft used for bill payment until the draft posts to the account, or until the hold expires. Hold for unauthorized ACH transactions. Hold on an account that is being used for ACH origination. Hold on account when a Death Notification Entry (DNE) has been received. Hold on PIN-based transactions. Prevent posting ACH debits for member business shares. Place the entire amount of a wire transfer on hold until the outgoing wire is posted. The transaction or account is in a disputed status. "
    enum:
    - GeneralPurpose
    - CheckHold
    - CertifiedDraft
    - StopDraft
    - SignatureAuth
    - PledgeHold
    - StopACH
    - StopDraftVerbal
    - StopACHVerbal
    - RevokeACH
    - MerchantVerification
    - UncollectedFee
    - HoldDraft
    - BillPayment
    - UnauthorizedACHStop
    - ACHOrigination
    - ACHDNE
    - PinAuth
    - BusinessBlockACHDebit
    - WireHold
    - Disputed
  HoldFilter:
    type: object
    properties:
      holdIdList:
        $ref: '#/definitions/HoldFilter_holdIdList'
      partyIdList:
        $ref: '#/definitions/Account_partyIdList'
      accountIdList:
        $ref: '#/definitions/AccountFilter_accountIdList'
      accountStatusList:
        $ref: '#/definitions/AccountFilter_accountStatusList'
      relationshipIdList:
        $ref: '#/definitions/AccountFilter_relationshipIdList'
      transactionIdList:
        $ref: '#/definitions/HoldFilter_transactionIdList'
      holdStatus:
        type: string
        description: 'This is the enumeration of statuses for holds. The hold is active. The hold is Inactive. '
        enum:
        - Active
        - InActive
      holdTypeList:
        $ref: '#/definitions/HoldFilter_holdTypeList'
      holdReasonTypeList:
        $ref: '#/definitions/HoldFilter_holdReasonTypeList'
      minAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      maxAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      holdEffectiveDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
      accountIdentificationList:
        $ref: '#/definitions/AccountFilter_accountIdentificationList'
      startCheckNumber:
        type: string
        description: 'The number on the face of the check indicating the id of that check in a series. '
      endCheckNumber:
        type: string
        description: 'The number on the face of the check indicating the id of that check in a series. '
    description: 'The list of filter options for services requesting hold data. The options can be used in combination or by themselves. It is up to the data source to either return or affect the data requested or return a standard error identifying why the request was rejected. '
  HoldMessageDelete:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      holdFilter:
        $ref: '#/definitions/HoldFilter'
      holdList:
        $ref: '#/definitions/HoldList'
    description: Delete definition for HoldMessage
  HoldMessageGet:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      holdFilter:
        $ref: '#/definitions/HoldFilter'
    description: Get definition for HoldMessage
  HoldMessagePost:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      holdList:
        $ref: '#/definitions/HoldList'
    description: Post definition for HoldMessage
  HoldMessagePut:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      holdFilter:
        $ref: '#/definitions/HoldFilter'
      holdList:
        $ref: '#/definitions/HoldList'
    description: Put definition for HoldMessage
  HoldMessageResponse:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      holdList:
        $ref: '#/definitions/HoldList'
    description: Response definition for HoldMessage
  Investment:
    type: object
    properties:
      accountId:
        type: string
        description: 'The account ID is a persistent and unique identifier for the account. It must be unique for all users across the institution and remain the same over the life of the account. '
      type:
        type: string
        description: "Checking account, i.e., checks can be written against the account. Money market accounts can be included here or in money markets.  Its up to the institution. Savings and club accounts.  This can optionally include CDs, but its up to the institution. Auto loans, etc. Loans that are NOT lines of credit or credit cards. Loan behind the credit card.  Note the actual card information in the card object. Loan that is a line of credit but NOT a credit card. Loan that is made in exchange for taking title of property. Investment accounts such as brokerage and this can optionally include CDs and/or money markets, but its up to the institution. This account is a special type of checking account connected to a pre-paid card. Other account type. Loan that is made in installments. Loan is typically unsecured. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Installment. Loan that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Commercial. Line of Credit that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of CommercialLineOfCredit. A general ledger account of the financial institution. A loan account type that has not been prevously defined. This enumeration is considered deprecated. Recommend using account type loan and subAccount of OtherLoan. "
        enum:
        - Checking
        - Savings
        - Loan
        - CreditCard
        - LineOfCredit
        - Mortgage
        - Investment
        - PrePaidCard
        - Other
        - Installment
        - CommercialLoan
        - CommercialLineOfCredit
        - GeneralLedger
        - OtherLoan
      accountSubType:
        type: string
        description: 'The account subtype identifies the specific account type that the back end system will recognize. '
      openDate:
        type: string
        format: date
        description: 'The date that the account was opened. '
      closeDate:
        type: string
        format: date
        description: 'The date that the account was closed. '
      accountStatus:
        $ref: '#/definitions/Account_accountStatus'
      accountSubStatus:
        type: string
        description: 'For use to support additional acount sub statuses not present in enumerations. '
      micrAccountNumber:
        type: string
        description: 'The account number portion of a draft or line of credit MICR line. '
      routingNumber:
        type: string
        description: 'Routing number for the account. '
      displayAccountId:
        type: string
        description: "The account ID as a masked or obfuscated representation of the Account ID (accountId). This can be used for display or document generation purposes as a security precaution, or in cases where the accountId element has been encrypted or tokenized. "
      idType:
        type: string
        description: "Whether the ID is actual, or simply reserved. "
        enum:
        - Reserved
        - Actual
      description:
        type: string
        description: 'The account description is the textual representation of the account. This value is visible to the user and must be human-readable. '
      subType:
        type: string
        description: 'The account subtype identifies the specific account type that the back end system will recognize. Deprecated - See accountSubType in AccountBase. - Planned removal in v5.0. '
      accountEscheatDate:
        type: string
        format: date
        description: 'The date that Escheatment was applied to the account. '
      accountEscheatAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      chargeOffDate:
        type: string
        format: date
        description: 'The date that the account was charged off. '
      chargeOffAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      accountNickName:
        type: string
        description: 'Description by the party or user that overrides the default description. '
      branch:
        type: string
        description: 'Name or number identifying which branch owns the account. '
      actualBalance:
        $ref: '#/definitions/Account_accountEscheatAmount'
      availableBalance:
        $ref: '#/definitions/Account_accountEscheatAmount'
      cashAdvanceAvailableBalance:
        $ref: '#/definitions/Account_accountEscheatAmount'
      cashAdvanceBalance:
        $ref: '#/definitions/Account_accountEscheatAmount'
      cashAdvanceLimit:
        $ref: '#/definitions/Account_accountEscheatAmount'
      minimumBalance:
        $ref: '#/definitions/Account_accountEscheatAmount'
      externalAccountBankAddress:
        $ref: '#/definitions/Account_externalAccountBankAddress'
      externalAccountSWIFTCode:
        type: string
        description: 'SWIFTCode for wire transfer. '
      externalAccountIBANCode:
        type: string
        description: "IBAN of external institution, used for wire transfers.  This replaces the micrAccountNumber for certain financial institutions in foreign nations, and no routing or SWIFT code is necessary when an IBAN (and potentially bank code, below) is provided to identify the account. "
      externalAccountBankCode:
        type: string
        description: "Bank code, required (in addition to other identifiers) for institutions in certain foreign nations, used for wire transfers. "
      externalAccountFlag:
        type: boolean
        description: "True for an external account, false for an internal account. "
      externalAccountVerified:
        type: boolean
        description: "Default is false.  When user confirms microdeposit, this becomes true. "
      externalTransferFrom:
        type: boolean
        description: 'True when transfers are allowed from external account. '
      externalTransferTo:
        type: boolean
        description: 'True when transfers are allowed to external account. '
      transferFrom:
        type: boolean
        description: 'True when transfers are allowed from this account. '
      transferTo:
        type: boolean
        description: 'True when transfers are allowed to this account. '
      rateType:
        type: string
        description: 'Whether the rate type is fixed or variable based on some index. '
        enum:
        - Fixed
        - Variable
      sourceCode:
        type: string
        description: "FI defined code that identifies the source of the application that created the account such as customer request, cross sale, counter offer, promo, etc. "
      partyIdList:
        $ref: '#/definitions/Account_partyIdList'
      relationshipId:
        type: string
        description: 'The relationship ID is a persistent and unique identifier for the relationship. It should be unique for all relationships across the institution and remain the same over the life of the relationship with the financial institution. '
      accountNoteList:
        $ref: '#/definitions/Account_accountNoteList'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
      meta:
        $ref: '#/definitions/Account_meta'
      transactionList:
        $ref: '#/definitions/Account_transactionList'
      interestPostingFrequency:
        type: string
        description: 'The time interval for posting interest to the account. '
        enum:
        - AmortizedSchedule
        - Annual
        - AtMaturity
        - Bimonthly
        - Biweekly
        - BiweeklySkipFirst
        - BiweeklySkipLast
        - Daily
        - EventTrigger
        - Hourly
        - Immediate
        - Monthly
        - None
        - OneTime
        - Other
        - PerUse
        - Quarterly
        - SemiAnnual
        - SemiMonthly
        - Triannual
        - Weekly
        - WeeklySkipFirst
        - WeeklySkipLast
        - XDays
        - XMonths
        - XYears
      withholdingsInfoList:
        $ref: '#/definitions/Account_withholdingsInfoList'
      overDraftProtectionAccountId:
        type: string
        description: 'The account ID is a persistent and unique identifier for the account. It must be unique for all users across the institution and remain the same over the life of the account. '
      overDraftProtectionAccountType:
        type: string
        description: "Checking account, i.e., checks can be written against the account. Money market accounts can be included here or in money markets.  Its up to the institution. Savings and club accounts.  This can optionally include CDs, but its up to the institution. Auto loans, etc. Loans that are NOT lines of credit or credit cards. Loan behind the credit card.  Note the actual card information in the card object. Loan that is a line of credit but NOT a credit card. Loan that is made in exchange for taking title of property. Investment accounts such as brokerage and this can optionally include CDs and/or money markets, but its up to the institution. This account is a special type of checking account connected to a pre-paid card. Other account type. Loan that is made in installments. Loan is typically unsecured. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Installment. Loan that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Commercial. Line of Credit that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of CommercialLineOfCredit. A general ledger account of the financial institution. A loan account type that has not been prevously defined. This enumeration is considered deprecated. Recommend using account type loan and subAccount of OtherLoan. "
        enum:
        - Checking
        - Savings
        - Loan
        - CreditCard
        - LineOfCredit
        - Mortgage
        - Investment
        - PrePaidCard
        - Other
        - Installment
        - CommercialLoan
        - CommercialLineOfCredit
        - GeneralLedger
        - OtherLoan
      overDraftProtectionAccountSubType:
        type: string
        description: 'The account subtype identifies the specific account type that the back end system will recognize. '
      investmentWhereHeld:
        type: string
        description: 'Name of the institution where the account is held. '
      investmentPartyList:
        $ref: '#/definitions/Investment_investmentPartyList'
      investmentholdingList:
        $ref: '#/definitions/Investment_investmentholdingList'
    description: 'Details relating to an investment. '
  InvestmentList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      investment:
        type: array
        description: 'Details relating to an investment. '
        items:
          $ref: '#/definitions/Investment'
    description: 'Data definition of a collection of investments. '
  InvestmentParty:
    type: object
    properties:
      investmentPartyId:
        type: string
        description: 'The party ID is a persistent and unique identifier for the party not related to the accounts they own but tied to that person or organization. It should be unique for all parties across the institution and remain the same over the life of the relationship with the financial institution. '
      investmentPartyRelationshipType:
        $ref: '#/definitions/InvestmentParty_investmentPartyRelationshipType'
      investmentContactList:
        $ref: '#/definitions/InvestmentParty_investmentContactList'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
    description: 'This object points to the party and how it relates to the Investment. '
  InvestmentFilter:
    type: object
    properties:
      accountIdList:
        $ref: '#/definitions/AccountFilter_accountIdList'
      accountStatusList:
        $ref: '#/definitions/AccountFilter_accountStatusList'
      partyIdList:
        $ref: '#/definitions/Account_partyIdList'
      relationshipIdList:
        $ref: '#/definitions/AccountFilter_relationshipIdList'
      accountTypeList:
        $ref: '#/definitions/AccountFilter_accountTypeList'
      externalAccountFlag:
        type: boolean
        description: "If this is not provided, it returns all accounts regardless of whether they are internal or external. If it is provided and its true, it returns only external accounts; if its false, it returns only internal accounts. "
      includeNotesFlag:
        type: boolean
        description: "If this is not provided, it will not return notes. If it is provided and its true, it will return all active non-expired notes. "
      transactionDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
      accountMicrList:
        $ref: '#/definitions/AccountFilter_accountMicrList'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
      accountIdentificationList:
        $ref: '#/definitions/AccountFilter_accountIdentificationList'
      holdingIdList:
        $ref: '#/definitions/InvestmentFilter_holdingIdList'
      holdingAsOfDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
    description: "The collection/array contains all the Investment accounts to be read, updated or deleted with this request. "
  HoldingId:
    type: string
    description: 'The holding ID is a persistent and unique identifier for the investment holding. '
  InvestmentHolding:
    type: object
    properties:
      accountId:
        type: string
        description: 'The account ID is a persistent and unique identifier for the account. It must be unique for all users across the institution and remain the same over the life of the account. '
      accountType:
        type: string
        description: "Checking account, i.e., checks can be written against the account. Money market accounts can be included here or in money markets.  Its up to the institution. Savings and club accounts.  This can optionally include CDs, but its up to the institution. Auto loans, etc. Loans that are NOT lines of credit or credit cards. Loan behind the credit card.  Note the actual card information in the card object. Loan that is a line of credit but NOT a credit card. Loan that is made in exchange for taking title of property. Investment accounts such as brokerage and this can optionally include CDs and/or money markets, but its up to the institution. This account is a special type of checking account connected to a pre-paid card. Other account type. Loan that is made in installments. Loan is typically unsecured. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Installment. Loan that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Commercial. Line of Credit that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of CommercialLineOfCredit. A general ledger account of the financial institution. A loan account type that has not been prevously defined. This enumeration is considered deprecated. Recommend using account type loan and subAccount of OtherLoan. "
        enum:
        - Checking
        - Savings
        - Loan
        - CreditCard
        - LineOfCredit
        - Mortgage
        - Investment
        - PrePaidCard
        - Other
        - Installment
        - CommercialLoan
        - CommercialLineOfCredit
        - GeneralLedger
        - OtherLoan
      accountSubType:
        type: string
        description: 'The account subtype identifies the specific account type that the back end system will recognize. '
      holdingID:
        type: string
        description: 'The holding ID is a persistent and unique identifier for the investment holding. '
      holdingCusipNumber:
        type: string
        description: 'Committee on Uniform Securites Identification Procedures (CUSIP) number of the holding. '
      holdingAsOfDateTime:
        type: string
        format: datetime
        description: 'The date/time stamp of the evaluation of the investment or security. The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      holdingType:
        type: string
        description: 'Real Estate Investment Trust. Registered Retirement Income Fund. Registered Retirement Savings Plan. Tax Free Savings Account. '
        enum:
        - Asset
        - Bond
        - Certificate of Deposit
        - Exchange-Traded Fund
        - Insurance
        - IRA Traditional
        - IRA Roth
        - IRA SEP
        - Money market account
        - Mutual fund
        - Real Estate
        - REIT
        - Stock
        - Other
        - RRIF
        - RRSP
        - TFSA
      holdingDescription:
        type: string
        description: 'The description of the holding detail '
      holdingQuantity:
        type: number
        description: 'The quantity of shares held. '
      holdingPrice:
        $ref: '#/definitions/Account_accountEscheatAmount'
      holdingPriceDateTime:
        type: string
        format: datetime
        description: 'The date/time of holding price capture. The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      holdingStockSymbol:
        type: string
        description: 'The stock symbol of the the holding. '
      holdingTotalValue:
        $ref: '#/definitions/Account_accountEscheatAmount'
      holdingYield:
        type: number
        description: 'Holding Yield. '
      holdingYieldAsOfDate:
        type: string
        format: datetime
        description: 'Holding Yield as of date. The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      holdingAssetClass:
        type: string
        description: "Asset class of the holding. Examples are Equities, Fixed Income, Cash. "
      holdingBondClass:
        type: string
        description: 'Bond class of the holding. '
      holdingBondType:
        type: string
        description: 'Bond type of the holding. '
      holdingMoodyRating:
        type: string
        description: 'Moody rating of the holding. '
      holdingStandardAndPoorsRating:
        type: string
        description: 'Standard and Poors rating of the holding. '
      holdingParValue:
        $ref: '#/definitions/Account_accountEscheatAmount'
      holdingCouponRate:
        type: number
        description: 'Coupon rate of the holding. '
      holdingCouponFrequency:
        type: string
        description: "Coupon frequency of the holding. OneTime: one time usage at any other point than at maturity. AtMaturity: one time usage at maturity. "
        enum:
        - AmortizedSchedule
        - Annual
        - AtMaturity
        - Bimonthly
        - Biweekly
        - BiweeklySkipFirst
        - BiweeklySkipLast
        - Daily
        - EventTrigger
        - Hourly
        - Immediate
        - Monthly
        - None
        - OneTime
        - Other
        - PerUse
        - Quarterly
        - SemiAnnual
        - SemiMonthly
        - Triannual
        - Weekly
        - WeeklySkipFirst
        - WeeklySkipLast
        - XDays
        - XMonths
        - XYears
      holdingCallPrice:
        $ref: '#/definitions/Account_accountEscheatAmount'
      holdingYieldToCall:
        type: number
        description: 'Yield to call of the holding. '
      holdingCallType:
        type: string
        description: 'Call type of the holding. '
      holdingYieldToMaturity:
        type: number
        description: 'Yield to maturity of the holding. '
      holdingMaturityDate:
        type: string
        format: datetime
        description: 'Holding maturity date. The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      holdingNextCouponDate:
        type: string
        format: datetime
        description: 'Holding next coupon date. The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      holdingNextCallDate:
        type: string
        format: datetime
        description: 'Holding next call date. The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      customData:
        $ref: '#/definitions/AccessProfile_customData'
  InvestmentHoldingList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      investmentHolding:
        type: array
        description: 'Details relating to a investment holding. '
        items:
          $ref: '#/definitions/InvestmentHolding'
    description: 'Data definition of a collection of holdings by account. '
  InvestmentHoldingFilter:
    type: object
    properties:
      accountIdList:
        $ref: '#/definitions/AccountFilter_accountIdList'
      holdingIdList:
        $ref: '#/definitions/InvestmentFilter_holdingIdList'
      investmentHoldingAsOfDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
      accountIdentificationList:
        $ref: '#/definitions/AccountFilter_accountIdentificationList'
    description: "The collection/array contains all the investment holdings to be read, updated or deleted with this request. "
  InvestmentHoldingMessageDelete:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      investmentHoldingFilter:
        $ref: '#/definitions/InvestmentHoldingFilter'
      investmentHoldingList:
        $ref: '#/definitions/InvestmentHoldingList'
    description: Delete definition for InvestmentHoldingMessage
  InvestmentHoldingMessageGet:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      investmentHoldingFilter:
        $ref: '#/definitions/InvestmentHoldingFilter'
    description: Get definition for InvestmentHoldingMessage
  InvestmentHoldingMessagePost:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      investmentHoldingList:
        $ref: '#/definitions/InvestmentHoldingList'
    description: Post definition for InvestmentHoldingMessage
  InvestmentHoldingMessagePut:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      investmentHoldingFilter:
        $ref: '#/definitions/InvestmentHoldingFilter'
      investmentHoldingList:
        $ref: '#/definitions/InvestmentHoldingList'
    description: Put definition for InvestmentHoldingMessage
  InvestmentHoldingMessageResponse:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      investmentHoldingList:
        $ref: '#/definitions/InvestmentHoldingList'
    description: Response definition for InvestmentHoldingMessage
  InvestmentMessageDelete:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      investmentFilter:
        $ref: '#/definitions/InvestmentFilter'
      investmentList:
        $ref: '#/definitions/InvestmentList'
    description: Delete definition for InvestmentMessage
  InvestmentMessageGet:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      investmentFilter:
        $ref: '#/definitions/InvestmentFilter'
    description: Get definition for InvestmentMessage
  InvestmentMessagePost:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      investmentList:
        $ref: '#/definitions/InvestmentList'
    description: Post definition for InvestmentMessage
  InvestmentMessagePut:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      investmentFilter:
        $ref: '#/definitions/InvestmentFilter'
      investmentList:
        $ref: '#/definitions/InvestmentList'
    description: Put definition for InvestmentMessage
  InvestmentMessageResponse:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      investmentList:
        $ref: '#/definitions/InvestmentList'
    description: Response definition for InvestmentMessage
  ISOCurrencyCodeType:
    type: string
    description: ISO 4217 Year 2008 /xs:documentation
    enum:
    - AED
    - AFN
    - ALL
    - AMD
    - ANG
    - AOA
    - ARS
    - AUD
    - AWG
    - AZN
    - BAM
    - BBD
    - BDT
    - BGN
    - BHD
    - BIF
    - BMD
    - BND
    - BOB
    - BRL
    - BSD
    - BTN
    - BWP
    - BYR
    - BZD
    - CAD
    - CDF
    - CHF
    - CLP
    - CNY
    - COP
    - CRC
    - CUP
    - CVE
    - CZK
    - DJF
    - DKK
    - DOP
    - DZD
    - EEK
    - EGP
    - ERN
    - ETB
    - EUR
    - FJD
    - FKP
    - GBP
    - GEL
    - GHS
    - GIP
    - GMD
    - GNF
    - GTQ
    - GYD
    - GWP
    - HKD
    - HNL
    - HRK
    - HTG
    - HUF
    - IDR
    - ILS
    - INR
    - IQD
    - IRR
    - ISK
    - JMD
    - JOD
    - JPY
    - KES
    - KGS
    - KHR
    - KMF
    - KPW
    - KRW
    - KWD
    - KYD
    - KZT
    - LAK
    - LBP
    - LKR
    - LRD
    - LSL
    - LTL
    - LVL
    - LYD
    - MAD
    - MDL
    - MGA
    - MKD
    - MMK
    - MNT
    - MOP
    - MRO
    - MUR
    - MVR
    - MWK
    - MXN
    - MYR
    - MZN
    - NAD
    - NGN
    - NIO
    - NOK
    - NPR
    - NZD
    - OMR
    - PAB
    - PEN
    - PGK
    - PHP
    - PKR
    - PLN
    - PYG
    - QAR
    - RON
    - RSD
    - RUB
    - RWF
    - SAR
    - SBD
    - SCR
    - SDG
    - SEK
    - SGD
    - SHP
    - SKK
    - SLL
    - SOS
    - SRD
    - STD
    - SVC
    - SYP
    - SZL
    - THB
    - TJS
    - TMM
    - TND
    - TOP
    - TRY
    - TTD
    - TWD
    - TZS
    - UAH
    - UGX
    - USD
    - UYU
    - UZS
    - VEF
    - VND
    - VUV
    - WST
    - XAF
    - XAG
    - XAU
    - XCD
    - XDR
    - XOF
    - XPD
    - XPF
    - XPT
    - YER
    - ZAR
    - ZMK
    - ZWR
  CreditLimitIncreaseRequest:
    type: object
    properties:
      requestDate:
        type: string
        format: datetime
        description: 'The date on which the credit limit increase request was made. '
      limitIncreaseDate:
        type: string
        format: datetime
        description: 'The date on which the credit limit was increased. '
      newLimitRequest:
        type: number
        description: 'Amount of credit limit increase requested. '
      memo:
        type: string
        description: 'A general memo field.  This field can be used to provide details on why an increase was requested. '
    description: 'A credit limit increase request. '
  DelinquencyNotice:
    type: object
    properties:
      delinquencyNoticeId:
        type: string
        description: 'Unique ID to identify the delinquency notice within the back end system. '
      code:
        type: string
        description: 'Code to identify the type of delinquency notice. FIs may have multiple delinquency notices; thats why they may need to identify by code. '
      delinquencyNoticeDays:
        type: integer
        description: 'Number of days before a delinquency notice is generated. '
      delinquencyLockDays:
        type: integer
        description: 'Number of days delinquent before line of credit or credit card is locked. '
      description:
        type: string
        description: 'Description text for delinquency notices. '
    description: 'Details related to delinquency notices. It describes/details the actions taken when the loan is in a delinquent state. '
  InsuranceAddOn:
    type: object
    properties:
      insuranceAddOnId:
        type: string
        description: 'Unique identifier for the insurance add-on. '
      insuranceType:
        type: string
        description: 'Guaranteed auto protection. Mechanical breakdown insurance. '
        enum:
        - AccidentalDeathAndDismemberment
        - DebtCancellation
        - Disability
        - Gap
        - Life
        - Other
        - PaymentProtection
        - Mbi
      otherInsuranceType:
        type: string
        description: "If insurance type is Other, this is used to describe the FI-defined type. "
      insuranceMaximum:
        $ref: '#/definitions/Account_accountEscheatAmount'
      insuranceAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      insuranceFeeAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      insuranceSubType:
        type: string
        description: 'The FI-defined code related to the insurance sub type. '
      insuranceShortDescription:
        type: string
        description: "Short description that appears on the statement, e.g. config. "
      insuranceDescription:
        type: string
        description: "Description that appears on records, e.g. this is config. "
      insurancePostingConsolidationFlag:
        type: boolean
        description: 'Insurance posting consolidation flag; Indicates whether or not to post the Life and Disability Insurance Separately. True = post as consolidated lump sum False = post separately '
      primaryInsuredDateOfBirth:
        type: string
        format: date
        description: 'Insureds date of birth. '
      secondInsuredDateOfBirth:
        type: string
        format: date
        description: 'Second Insureds date of birth. '
    description: 'Details related to insurance details added to the loan. It is insurance directly related to the loan. '
  Loan:
    type: object
    properties:
      accountId:
        type: string
        description: 'The account ID is a persistent and unique identifier for the account. It must be unique for all users across the institution and remain the same over the life of the account. '
      type:
        type: string
        description: "Checking account, i.e., checks can be written against the account. Money market accounts can be included here or in money markets.  Its up to the institution. Savings and club accounts.  This can optionally include CDs, but its up to the institution. Auto loans, etc. Loans that are NOT lines of credit or credit cards. Loan behind the credit card.  Note the actual card information in the card object. Loan that is a line of credit but NOT a credit card. Loan that is made in exchange for taking title of property. Investment accounts such as brokerage and this can optionally include CDs and/or money markets, but its up to the institution. This account is a special type of checking account connected to a pre-paid card. Other account type. Loan that is made in installments. Loan is typically unsecured. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Installment. Loan that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Commercial. Line of Credit that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of CommercialLineOfCredit. A general ledger account of the financial institution. A loan account type that has not been prevously defined. This enumeration is considered deprecated. Recommend using account type loan and subAccount of OtherLoan. "
        enum:
        - Checking
        - Savings
        - Loan
        - CreditCard
        - LineOfCredit
        - Mortgage
        - Investment
        - PrePaidCard
        - Other
        - Installment
        - CommercialLoan
        - CommercialLineOfCredit
        - GeneralLedger
        - OtherLoan
      accountSubType:
        type: string
        description: 'The account subtype identifies the specific account type that the back end system will recognize. '
      openDate:
        type: string
        format: date
        description: 'The date that the account was opened. '
      closeDate:
        type: string
        format: date
        description: 'The date that the account was closed. '
      accountStatus:
        $ref: '#/definitions/Account_accountStatus'
      accountSubStatus:
        type: string
        description: 'For use to support additional acount sub statuses not present in enumerations. '
      micrAccountNumber:
        type: string
        description: 'The account number portion of a draft or line of credit MICR line. '
      routingNumber:
        type: string
        description: 'Routing number for the account. '
      displayAccountId:
        type: string
        description: "The account ID as a masked or obfuscated representation of the Account ID (accountId). This can be used for display or document generation purposes as a security precaution, or in cases where the accountId element has been encrypted or tokenized. "
      idType:
        type: string
        description: "Whether the ID is actual, or simply reserved. "
        enum:
        - Reserved
        - Actual
      description:
        type: string
        description: 'The account description is the textual representation of the account. This value is visible to the user and must be human-readable. '
      subType:
        type: string
        description: 'The account subtype identifies the specific account type that the back end system will recognize. Deprecated - See accountSubType in AccountBase. - Planned removal in v5.0. '
      accountEscheatDate:
        type: string
        format: date
        description: 'The date that Escheatment was applied to the account. '
      accountEscheatAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      chargeOffDate:
        type: string
        format: date
        description: 'The date that the account was charged off. '
      chargeOffAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      accountNickName:
        type: string
        description: 'Description by the party or user that overrides the default description. '
      branch:
        type: string
        description: 'Name or number identifying which branch owns the account. '
      actualBalance:
        $ref: '#/definitions/Account_accountEscheatAmount'
      availableBalance:
        $ref: '#/definitions/Account_accountEscheatAmount'
      cashAdvanceAvailableBalance:
        $ref: '#/definitions/Account_accountEscheatAmount'
      cashAdvanceBalance:
        $ref: '#/definitions/Account_accountEscheatAmount'
      cashAdvanceLimit:
        $ref: '#/definitions/Account_accountEscheatAmount'
      minimumBalance:
        $ref: '#/definitions/Account_accountEscheatAmount'
      externalAccountBankAddress:
        $ref: '#/definitions/Account_externalAccountBankAddress'
      externalAccountSWIFTCode:
        type: string
        description: 'SWIFTCode for wire transfer. '
      externalAccountIBANCode:
        type: string
        description: "IBAN of external institution, used for wire transfers.  This replaces the micrAccountNumber for certain financial institutions in foreign nations, and no routing or SWIFT code is necessary when an IBAN (and potentially bank code, below) is provided to identify the account. "
      externalAccountBankCode:
        type: string
        description: "Bank code, required (in addition to other identifiers) for institutions in certain foreign nations, used for wire transfers. "
      externalAccountFlag:
        type: boolean
        description: "True for an external account, false for an internal account. "
      externalAccountVerified:
        type: boolean
        description: "Default is false.  When user confirms microdeposit, this becomes true. "
      externalTransferFrom:
        type: boolean
        description: 'True when transfers are allowed from external account. '
      externalTransferTo:
        type: boolean
        description: 'True when transfers are allowed to external account. '
      transferFrom:
        type: boolean
        description: 'True when transfers are allowed from this account. '
      transferTo:
        type: boolean
        description: 'True when transfers are allowed to this account. '
      rateType:
        type: string
        description: 'Whether the rate type is fixed or variable based on some index. '
        enum:
        - Fixed
        - Variable
      sourceCode:
        type: string
        description: "FI defined code that identifies the source of the application that created the account such as customer request, cross sale, counter offer, promo, etc. "
      partyIdList:
        $ref: '#/definitions/Account_partyIdList'
      relationshipId:
        type: string
        description: 'The relationship ID is a persistent and unique identifier for the relationship. It should be unique for all relationships across the institution and remain the same over the life of the relationship with the financial institution. '
      accountNoteList:
        $ref: '#/definitions/Account_accountNoteList'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
      meta:
        $ref: '#/definitions/Account_meta'
      transactionList:
        $ref: '#/definitions/Account_transactionList'
      interestPostingFrequency:
        type: string
        description: 'The time interval for posting interest to the account. '
        enum:
        - AmortizedSchedule
        - Annual
        - AtMaturity
        - Bimonthly
        - Biweekly
        - BiweeklySkipFirst
        - BiweeklySkipLast
        - Daily
        - EventTrigger
        - Hourly
        - Immediate
        - Monthly
        - None
        - OneTime
        - Other
        - PerUse
        - Quarterly
        - SemiAnnual
        - SemiMonthly
        - Triannual
        - Weekly
        - WeeklySkipFirst
        - WeeklySkipLast
        - XDays
        - XMonths
        - XYears
      withholdingsInfoList:
        $ref: '#/definitions/Account_withholdingsInfoList'
      overDraftProtectionAccountId:
        type: string
        description: 'The account ID is a persistent and unique identifier for the account. It must be unique for all users across the institution and remain the same over the life of the account. '
      overDraftProtectionAccountType:
        type: string
        description: "Checking account, i.e., checks can be written against the account. Money market accounts can be included here or in money markets.  Its up to the institution. Savings and club accounts.  This can optionally include CDs, but its up to the institution. Auto loans, etc. Loans that are NOT lines of credit or credit cards. Loan behind the credit card.  Note the actual card information in the card object. Loan that is a line of credit but NOT a credit card. Loan that is made in exchange for taking title of property. Investment accounts such as brokerage and this can optionally include CDs and/or money markets, but its up to the institution. This account is a special type of checking account connected to a pre-paid card. Other account type. Loan that is made in installments. Loan is typically unsecured. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Installment. Loan that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Commercial. Line of Credit that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of CommercialLineOfCredit. A general ledger account of the financial institution. A loan account type that has not been prevously defined. This enumeration is considered deprecated. Recommend using account type loan and subAccount of OtherLoan. "
        enum:
        - Checking
        - Savings
        - Loan
        - CreditCard
        - LineOfCredit
        - Mortgage
        - Investment
        - PrePaidCard
        - Other
        - Installment
        - CommercialLoan
        - CommercialLineOfCredit
        - GeneralLedger
        - OtherLoan
      overDraftProtectionAccountSubType:
        type: string
        description: 'The account subtype identifies the specific account type that the back end system will recognize. '
      loanPartyList:
        $ref: '#/definitions/Loan_loanPartyList'
      officerId:
        type: string
        description: 'Officer initials/name/number indicating who approved the loan. '
      processorId:
        type: string
        description: 'The processor of the loan. '
      loanDecisionDate:
        type: string
        format: date
        description: 'The date on which the loan was decisioned. '
      applicationOriginationDate:
        type: string
        format: date
        description: 'The date on which the application was originated. '
      applicationDecisionStatus:
        type: string
        description: 'Decision status. '
        enum:
        - Approve
        - CounterOffer
        - Denied
        - Review
        - Withdrawn
      noteNumber:
        type: string
        description: 'A unique number associated with a loan.  This number is not required. '
      category:
        type: string
        description: 'Defines which type of loan this loan account represents. '
        enum:
        - AverageDailyBalanceLineOfCredit
        - ClosedEnd
        - CreditCard
        - Lease
        - LineOfCredit
        - LineOfCreditCombination
        - OpenEnd
        - Installment
        - Commercial
        - CommercialLineOfCredit
        - Mortgage
        - OtherLoan
      purposeCode:
        type: string
        description: 'Code that identifies the purpose for the loan. '
      requestedAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      noteAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      creditLimit:
        $ref: '#/definitions/Account_accountEscheatAmount'
      creditLimitExpiration:
        type: string
        format: date
        description: 'Expiration date of the credit limit on a line of credit or credit card. '
      creditLimitGroupCode:
        type: string
        description: 'Used to aggregate a group of loan balances to determine their individual available balance. Used to determine the total available credit amount you are allowed for all loans defined on the core that are included in this group. '
      ecoaGroup:
        type: string
        description: "This individual has contractual responsibility for this account and is primarily responsible for its payment. This individual is contractually obligated to repay all debts arising on this account. There are other people associated with this account who may or may not have contractual responsibility. This individual is an authorized user of this account; another individual has contractual responsibility. This individual is liable for the credit, but does not receive the benefit of the loan. Note: this individual is required to sign the Co-Signer Notice (Reg AA). This individual is responsible for this account, which is guaranteed by a Co-maker (co-signer). The individual guarantees this account along with the Maker. Note: this is the same as the co-borrower. No further responsibility. Responsibility not specified. A business or commmercial entity has contractual responsibility for this account and is primarily responsible for its payment. This individual associated to this account is deceased. "
        enum:
        - Individual
        - Joint
        - AuthorizedUser
        - CoSigner
        - Maker
        - CoMaker
        - Terminated
        - Undesignated
        - BusinessOrCommercial
        - Deceased
      creditReportingCode:
        type: string
        description: 'Code used for reporting to the credit bureaus. '
      isRevolvingLineOfCredit:
        type: boolean
        description: 'Indicates revolving line of credit or non-revolving line of credit. '
      minimumAdvanceAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      maximumAdvanceAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      originationDate:
        type: string
        format: date
        description: 'Date on which the loan was originated. '
      fundedDate:
        type: string
        format: date
        description: 'Date on which the loan was funded. '
      disbursalDate:
        type: string
        format: date
        description: 'Date on which loan amount is disbursed. '
      creationDate:
        type: string
        format: date
        description: 'Actual date (not system date) that a loan record is created on the host system. '
      lastPaymentDate:
        type: string
        format: date
        description: 'Date on which the last loan payment was received. '
      lastPaymentAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      term:
        type: integer
        description: 'Term value of the loan. '
      termType:
        type: string
        description: 'Type of term value specified. '
        enum:
        - Days
        - Months
        - Years
      creditReportList:
        $ref: '#/definitions/Applicant_creditReportList'
      loanInterestRateDetail:
        $ref: '#/definitions/Loan_loanInterestRateDetail'
      paymentOption:
        $ref: '#/definitions/Loan_paymentOption'
      interestCalculationType:
        type: string
        description: "Method for calculating the interest on the loan (360, 365). "
        enum:
        - Actual360
        - Actual364
        - Daily365
        - Daily365Leap
        - DailyBilled360
        - Monthly360
        - Scheduled364
      dailyPeriodicRate:
        type: number
        description: 'Daily periodic rate for calculating interest. '
      totalNumberOfPayments:
        type: integer
        description: 'The full number of payments for the life time of the loan. '
      prePaidFinanceCharges:
        $ref: '#/definitions/Account_accountEscheatAmount'
      prepaidInterest:
        $ref: '#/definitions/Account_accountEscheatAmount'
      interestPaidThruDate:
        type: string
        format: date
        description: 'Date through which the interest is paid. '
      numberOfGraceDays:
        type: integer
        description: "Minimum number of days after a payment change before the payment becomes due, e.g. the billing cycle closes on the 1st. Loan has 25 grace days. Payment is due on the 25th. "
      balloonAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      balloonDueDate:
        type: string
        format: date
        description: 'Date the balloon payment becomes due. '
      balloonDueDateTerm:
        type: string
        description: 'Call term/balloon term type. '
        enum:
        - Months
        - Years
      balloonDueDateTermValue:
        type: integer
        description: 'Call term/balloon term value. '
      prepaymentPenaltyBasis:
        type: string
        description: 'How to handle prepayment penalties '
        enum:
        - Amount
        - PercentOfBalance
        - PercentOfOriginalAmount
        - PercentOfPrincipal
        - PercentOfUndisbursed
      prepaymentPenaltyBasisAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      prepaymentPenaltyPercentage:
        type: number
        description: "Prepayment penalty percentage, which is required if PrepaymentPenaltyBasis is not Amount. It will be required depending on PrepaymentPenaltyBasis value. "
      prepaymentPenaltyExpirationDate:
        type: string
        format: date
        description: 'Prepayment penalty expiration date. '
      statementCode:
        type: string
        description: "Used in statement generation programs. Deprecation: Element is valid for all account types and is being relocated to account.xsd in v5.0 resulting in a sequence breaking change. "
      statementGroup:
        type: string
        description: "Used to define/categorize loans into statement groups. Deprecation: Element is valid for all account types and is being relocated to account.xsd in v5.0 resulting in a sequence breaking change. "
      statementDate:
        type: string
        format: date
        description: "Date for statement cut-off (billing date). Deprecation: Element is valid for all account types and is being relocated to account.xsd in v5.0 resulting in a sequence breaking change. "
      debtIncomeRatio:
        type: number
        description: 'Debt to income percentage. '
      loanFeeList:
        $ref: '#/definitions/Loan_loanFeeList'
      insuranceAddOnList:
        $ref: '#/definitions/Loan_insuranceAddOnList'
      collateralList:
        $ref: '#/definitions/Loan_collateralList'
      autoPaymentOption:
        $ref: '#/definitions/Loan_autoPaymentOption'
      delinquencyNoticeList:
        $ref: '#/definitions/Loan_delinquencyNoticeList'
      skipPayment:
        $ref: '#/definitions/Loan_skipPayment'
      promotionCode:
        type: string
        description: 'Promo code used to link applications to specific promotions. '
      loanNoteList:
        $ref: '#/definitions/Account_accountNoteList'
      creditLimitIncreaseRequestList:
        $ref: '#/definitions/Loan_creditLimitIncreaseRequestList'
      numberOfPaymentsRemaining:
        type: integer
        description: 'The total number of payments for the remaining life of the loan. '
      otherLoanAccountCategory:
        type: string
        description: 'The description of the Loan Account Category when LoanAccountCategory is set to OtherLoan. '
    description: 'Details relating to a loan account. '
  LoanAccountCategory:
    type: string
    enum:
    - AverageDailyBalanceLineOfCredit
    - ClosedEnd
    - CreditCard
    - Lease
    - LineOfCredit
    - LineOfCreditCombination
    - OpenEnd
    - Installment
    - Commercial
    - CommercialLineOfCredit
    - Mortgage
    - OtherLoan
  LoanFee:
    type: object
    properties:
      loanFeeId:
        type: string
        description: 'Unique ID to identify the loan fee in the back end system. '
      lateChargeFee:
        $ref: '#/definitions/LoanFee_lateChargeFee'
      feeAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      includeEscrowInLateCharge:
        type: boolean
        description: 'Defines whether or not to include the escrow amount in the late charge calculation. '
      feeCode:
        type: string
        description: 'FI-defined code that identifies the fee in the core system. '
      feeMin:
        $ref: '#/definitions/Account_accountEscheatAmount'
      feeMax:
        $ref: '#/definitions/Account_accountEscheatAmount'
      prePaidAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      financedFeeAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      unamortizedFees:
        $ref: '#/definitions/Account_accountEscheatAmount'
      feeDescription:
        type: string
        description: 'FI-defined description for the fee. '
    description: 'Details related to loan fees. '
  LoanList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      loan:
        type: array
        description: 'Details relating to a loan account. '
        items:
          $ref: '#/definitions/Loan'
    description: 'Collection of loans data definition. '
  LoanParty:
    type: object
    properties:
      loanPartyId:
        type: string
        description: 'The party ID is a persistent and unique identifier for the party not related to the accounts they own but tied to that person or organization. It should be unique for all parties across the institution and remain the same over the life of the relationship with the financial institution. '
      loanPartyRelationshipType:
        $ref: '#/definitions/LoanParty_loanPartyRelationshipType'
      contactIdList:
        $ref: '#/definitions/Activity_activityRelatedTo_contactIdList'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
    description: 'This includes each party ID and how it relates to the loan. '
  LoanDisbursement:
    type: object
    properties:
      loanDisbursementCheck:
        $ref: '#/definitions/LoanDisbursement_loanDisbursementCheck'
      loanDisbursementDepositToAccount:
        $ref: '#/definitions/LoanDisbursement_loanDisbursementDepositToAccount'
      loanDisbursementDealerAch:
        $ref: '#/definitions/LoanDisbursement_loanDisbursementDealerAch'
      loanDisbursementGL:
        $ref: '#/definitions/LoanDisbursement_loanDisbursementGL'
      transactionId:
        type: string
        description: "The transaction ID is a persistent and unique identifier for each transaction. It must be unique within the account as it is used for matching purposes. Transactions should always be returned with the same ID, even if transactional information has changed (type, amount, description, date, etc.) since the previous account data pull. "
    description: "Intended choice - Due to cross language serialization issues the choice construct has been removed. It is the responsibility of the implementer to add programmatic logic for this complex type to detect, handle and or error when population of more than one element is present. A loan disbursement contains all the information necessary to disburse the funds for a loan, such as disbursing the funds to a check, a dealer, the members share, etc. "
  LoanDisbursementId:
    type: string
    description: "Unique identifier for this loan disbursement record. This should be a globally unique identifier, meaning it should be unique across all loans, not just this loan. "
  LoanDisbursementList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      loanDisbursement:
        type: array
        description: 'Details related to loan account. '
        items:
          $ref: '#/definitions/LoanDisbursement'
      loanId:
        type: string
        description: 'Unique identifier for the loan that corresponds to these disbursements. '
    description: 'Collection of loan disbursements. '
  LoanId:
    type: string
    description: 'Unique identifier for the loan that corresponds to these disbursements. '
  LoanDisbursementFilter:
    type: object
    properties:
      loanDisbursementIdList:
        $ref: '#/definitions/LoanDisbursementFilter_loanDisbursementIdList'
      loanIdList:
        $ref: '#/definitions/LoanDisbursementFilter_loanIdList'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
    description: 'The list of filter options for services requesting party loan disbursement data.  The options can be used in combination or by themselves.  It is up to the data source to either return or affect the data requested or return a standard error identifying why the request was rejected '
  LoanDisbursementMessageDelete:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      loanDisbursementFilter:
        $ref: '#/definitions/LoanDisbursementFilter'
      loanDisbursementList:
        $ref: '#/definitions/LoanDisbursementList'
    description: Delete definition for LoanDisbursementMessage
  LoanDisbursementMessageGet:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      loanDisbursementFilter:
        $ref: '#/definitions/LoanDisbursementFilter'
    description: Get definition for LoanDisbursementMessage
  LoanDisbursementMessagePost:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      loanDisbursementList:
        $ref: '#/definitions/LoanDisbursementList'
    description: Post definition for LoanDisbursementMessage
  LoanDisbursementMessagePut:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      loanDisbursementFilter:
        $ref: '#/definitions/LoanDisbursementFilter'
      loanDisbursementList:
        $ref: '#/definitions/LoanDisbursementList'
    description: Put definition for LoanDisbursementMessage
  LoanDisbursementMessageResponse:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      loanDisbursementList:
        $ref: '#/definitions/LoanDisbursementList'
    description: Response definition for LoanDisbursementMessage
  LoanFilter:
    type: object
    properties:
      accountIdList:
        $ref: '#/definitions/AccountFilter_accountIdList'
      accountStatusList:
        $ref: '#/definitions/AccountFilter_accountStatusList'
      partyIdList:
        $ref: '#/definitions/Account_partyIdList'
      relationshipIdList:
        $ref: '#/definitions/AccountFilter_relationshipIdList'
      accountTypeList:
        $ref: '#/definitions/AccountFilter_accountTypeList'
      externalAccountFlag:
        type: boolean
        description: "If this is not provided, it returns all accounts regardless of whether they are internal or external. If it is provided and its true, it returns only external accounts; if its false, it returns only internal accounts. "
      includeNotesFlag:
        type: boolean
        description: "If this is not provided, it will not return notes. If it is provided and its true, it will return all active non-expired notes. "
      transactionDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
      accountMicrList:
        $ref: '#/definitions/AccountFilter_accountMicrList'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
      accountIdentificationList:
        $ref: '#/definitions/AccountFilter_accountIdentificationList'
      loanCategoryList:
        $ref: '#/definitions/LoanFilter_loanCategoryList'
    description: 'The list of filter options for services requesting loan data.  The options can be used in combination or by themselves.  It is up to the data source to either return or affect the data requested or return a standard error identifying why the request was rejected. '
  LoanMessageDelete:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      loanFilter:
        $ref: '#/definitions/LoanFilter'
      loanList:
        $ref: '#/definitions/LoanList'
    description: Delete definition for LoanMessage
  LoanMessageGet:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      loanFilter:
        $ref: '#/definitions/LoanFilter'
    description: Get definition for LoanMessage
  LoanMessagePost:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      loanList:
        $ref: '#/definitions/LoanList'
    description: Post definition for LoanMessage
  LoanMessagePut:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      loanFilter:
        $ref: '#/definitions/LoanFilter'
      loanList:
        $ref: '#/definitions/LoanList'
    description: Put definition for LoanMessage
  LoanMessageResponse:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      loanList:
        $ref: '#/definitions/LoanList'
    description: Response definition for LoanMessage
  Location:
    type: object
    properties:
      locationId:
        type: string
        description: 'A unique identifier for the location. '
      name:
        type: string
        description: "An optional name for the location that would be used to display to the end user on the application, maps, etc. "
      distance:
        $ref: '#/definitions/Location_distance'
      type:
        type: string
        description: "The type of location (e.g. ATM, branch). "
        enum:
        - ATM
        - SharedATM
        - Branch
        - SharedBranch
        - Kiosk
        - Other
      address:
        $ref: '#/definitions/Account_externalAccountBankAddress'
      phone:
        $ref: '#/definitions/BillPayee_payeePhone'
      mapUrl:
        type: string
        format: anyURI
        description: 'A url that links to a map displaying this location. '
      network:
        type: string
        description: "The network of the ATM or shared branch (e.g. COOP, NYCE, MoneyPass, Star, etc.). "
      depositTaking:
        type: boolean
        description: 'Whether or not this location supports taking deposits. '
      locationHoursList:
        $ref: '#/definitions/Location_locationHoursList'
      servicesList:
        $ref: '#/definitions/Location_servicesList'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
    description: 'A location such as an ATM or a branch. '
  LocationHours:
    type: object
    properties:
      locationHoursType:
        type: string
        description: "An optional indicator of the type of hours being described, i.e. lobby hours, drive-up hours, etc. "
        enum:
        - Lobby
        - DriveUp
        - ATM
        - Other
      description:
        type: string
      dayOfTheWeek:
        type: string
        enum:
        - Monday
        - Tuesday
        - Wednesday
        - Thursday
        - Friday
        - Saturday
        - Sunday
      openTime:
        type: string
        format: time
      closeTime:
        type: string
        format: time
      closedAllDay:
        type: boolean
      openAllDay:
        type: boolean
    description: 'The location hours of an ATM or branch. '
  LocationId:
    type: string
    description: 'A unique identifier for the location. '
  LocationList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      location:
        type: array
        description: "Details relating to a location (e.g. ATM, branch). "
        items:
          $ref: '#/definitions/Location'
    description: "A list of locations (could be ATMs, branches, etc.). "
  LocationType:
    type: string
    description: "The type of location (e.g. ATM, branch). "
    enum:
    - ATM
    - SharedATM
    - Branch
    - SharedBranch
    - Kiosk
    - Other
  LocationFilter:
    type: object
    properties:
      locationIdList:
        $ref: '#/definitions/LocationFilter_locationIdList'
      locationTypeList:
        $ref: '#/definitions/LocationFilter_locationTypeList'
      servicesList:
        $ref: '#/definitions/Location_servicesList'
      searchFromAddress:
        $ref: '#/definitions/Account_externalAccountBankAddress'
      depositTaking:
        type: boolean
        description: 'Whether or not this location supports taking deposits. '
      maxNumberOfResults:
        type: integer
        description: 'Maximum number of results to return. '
      maxDistance:
        $ref: '#/definitions/Location_distance'
      isLocationOpen:
        type: boolean
        description: 'Filters for locations that are currently open. If not provided will return all results bases on provided criteria. '
      customData:
        $ref: '#/definitions/AccessProfile_customData'
    description: "A location filter is used to query for locations near an address, for a given type, etc. "
  LocationMessageDelete:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      locationFilter:
        $ref: '#/definitions/LocationFilter'
      locationList:
        $ref: '#/definitions/LocationList'
    description: Delete definition for LocationMessage
  LocationMessageGet:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      locationFilter:
        $ref: '#/definitions/LocationFilter'
    description: Get definition for LocationMessage
  LocationMessagePost:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      locationList:
        $ref: '#/definitions/LocationList'
    description: Post definition for LocationMessage
  LocationMessagePut:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      locationFilter:
        $ref: '#/definitions/LocationFilter'
      locationList:
        $ref: '#/definitions/LocationList'
    description: Put definition for LocationMessage
  LocationMessageResponse:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      locationList:
        $ref: '#/definitions/LocationList'
    description: Response definition for LocationMessage
  MessageContext:
    type: object
    properties:
      cufxVersion:
        type: string
        description: 'The CUFX release version for this request. '
        enum:
        - 1.0.3
        - 1.0.6
        - 2.0.0
        - 3.1.0
        - 3.2.0
        - 3.3.0
        - 4.0.0
        - 4.1.0
        - 4.2.0
        - 4.3.0
        - 4.4.0
        - 4.5.0
      requestId:
        type: string
        description: 'The request ID is a unique identifier which identifies the request from the source system. The client application sends this along with the messages so that it can be logged as a reference for troubleshooting purposes. '
      configurationId:
        type: string
        description: 'Unique identification for the configuration. '
      vendorId:
        type: string
        description: 'The vendor ID is a unique identifier which identifies the vendor that is creating a message. The vendor ID is assigned by the FI or established in concert by the vendor and FI. The client application sends this along with the messages so that logging or other business may take place based on the vendor utilizing the service. This ID is not generated per data or security request but is generated "out-of-band" (i.e. prior generation by some external mechanism) of this process and stored in the Financial Institutions and Vendorâ€™s systems. A standard error will be returned if the vendor ID is not provided when it is required. '
      appId:
        type: string
        description: 'The app id is the unique identifier that identifies the application. '
      fiId:
        type: string
        description: "The financial institution ID  is used by systems to uniquely identify each financial institution. This ID is determined outside of the process and stored in each system of record, e.g. local application database, vendor configuration file, FI core database, etc. This is helpful for applications that are multi-tenant and  service more than one financial institution. See dataSourceId for more information about multiple data sources for a single FI. A standard error will be returned if the FIID is not provided when it is required. "
      dataSourceId:
        type: string
        description: "The data source ID  is used by the systems to uniquely identify a registered data source within the financial institution. This is an agreed upon ID determined outside of the process and stored in each system of record. There may be more than one data source ID per financial institution. For instance, one data source ID may represent the financial institutionâ€™s core provider and another may be used to represent the credit card provider that is not within the core. There may be a one-to-many relationship between FIID  and data source ID. "
      sendingNetworkNodeId:
        type: string
        description: 'The unique identifier created by the system and or the network node for identification. '
      receivingNetworkNodeId:
        type: string
        description: 'The unique identifier created by the system and or the network node for identification. '
      environment:
        type: string
        description: "Indicates the environment in which the message should be executed. Depends upon agreements between endpoints what is passed for each environment. Examples might be: Dev, QAInternal, UAT, Training, Sandbox, Production. "
      returnDataFilter:
        type: string
        description: "Applicable to creates and updates.  The return data filter is used to streamline the amount of information to return to the client after an update or create.  The client can request all data from the object, only fields that were updated or created, or no data (just a confirmation that it was successful). "
        enum:
        - All
        - OnlyCreatedOrChangedData
        - None
      includeBlankFields:
        type: boolean
        description: 'A boolean to indicate the inclusion of blank or empty fields in the response message. '
      includeZeroNumerics:
        type: boolean
        description: 'A boolean to indicate the inclusion of zero values in the response message. '
      sessionId:
        type: string
        description: "The  session ID is a unique identifier for the session, based on the connection to the processor or core system for the message being performed. processorSessionId found in the User object is depreciated in favor of sessionId. "
      userList:
        $ref: '#/definitions/MessageContext_userList'
      statusList:
        $ref: '#/definitions/MessageContext_statusList'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
    description: "The message context contains information that is passed as part of each CUFX message call. All the fields are optional, and whether or not they contain information is determined by the specific implementation requirements. For example, in a multi-tenant environment where multiple financial institutions are hosted, the Financial Institution ID (FIID) may be a required field, necessary for distinguishing which FI the message pertains to. For a single tenant environment with only one financial institution, the Financial Institution ID may not be necessary. "
  Status:
    type: object
    properties:
      statusType:
        type: string
        description: "Response type classifies the message type in the message response list and allows for high level discrimination of Success, Warning, Error or Other message types. The message associated with this response type was a success. Additional information about the response, including verbose responses. Informational warning that should not stop processing. The message is associated with response was an error. "
        enum:
        - Success
        - Informational
        - Warning
        - Error
      statusCode:
        type: string
        description: "Standard CUFX code returned by the service point. The documentation contains the standard message to return. When %s is in the message, it should be replaced with additional details relative to the message content. ValueOutOfRangeError.  The value %s is not supported for the field %s by this service. Valid values must be between %s and %s. Formerly value 413. UnsupportedValueError.  The value %s is not supported for the field %s by this service. Valid values include %s. Formerly value 415. DatesOutOfOrderError.  The end date is before the start date. Formerly value 497. DateRangeTooWideError.  Date range is too wide for the data source to handle. Formerly value 498. InvalidFieldFormat.  The format of the field is not supported. The format %s is not supported for the field %s by this service. Valid values include %s Formerly value 475. OtherValidationError. Values were within range but some other business rule failed with the while validating the data in the request.  Use %s to include what record rejected and why. NoDataInRequest. Endpoint expected values in request but there were none. Formerly value 300. IncompleteRequest.  The request omitted the following required fields: %s. Formerly value 411. RecordHasBeenArchivedError.  The record was found, but is not available for viewing as it has been archived in offline storage. Formerly value 441. LoginInvalidError.  The user token or credentials were invalid. Formerly value 401. UserPermissionError. User was able to login but was unable to process request because user did not have proper permissions to either the object type, instance of object or capability on that object. AppPermissionError. Client app lacks necessary security to perform the action. UserSessionTokenExpiredError. Endpoint no longer recognizes a user session token as valid. AppSessionTokenExpiredError. Endpoint no longer recognizes an application session token as valid. UserCredentialsLockedOut. User provided proper credentials, but system indicates that system no longer allows this user to access the requested resources. The resource %s has been locked out. AppCredentialsLockedOut. App provided proper credentials, but system indicates that system no longer allows this app to access the requested resources. The app resource %s has been locked out. ConflictAlreadyExists.  The entity submitted for creation already exists. Formerly value 409. UpdateToFieldNotAllowed. The repository does not allow updates to %s. Formerly value 438. InvalidMACAddressError.  The MAC address was invalid or missing. Formerly value 425. InvalidIPAddressError.  Clientâ€™s IP address is not valid or does not have permissions to access the endpoint. InvalidLanguageError.  The requested language %s is not supported. Formerly value 430. InvalidDataSourceIdError.  The data source ID was not recognized. Formerly value 433. InvalidFiIdError.  The financial institution ID was not recognized. Formerly value 434. InvalidEnvironmentError.  The environment specified in MessageContext is disallowed by the system as configured. Formerly value 476. PreviousRequestRequired.  A %s request must be made before this one, and was not. Formerly value 412. MalformedRequestError.  Malformed request to endpoint based on CUFX standard. UnsupportedMethodError.  End point does not support the method.  For example: GET is supported but not a POST or DELETE. UnsupportedServiceError.  Service exists but endpoint does not support the service for this FiId and/or app combination. RequestedServiceNotFound.  The client application requested a service that does not exist. EncryptionError.  The provided encrypted data could not be decrypted. Formerly value 426. MIMETypeNotSupported.  Repository rejected the MIME type. Formerly value 440. ObjectTooLarge.  The %s object was rejected because it exceeded the size limit. Formerly value 442. ObjectTooSmall.  The %s object was rejected because it is smaller than its minimum size requirement. Formerly value 443. ObjectNotFoundError.  The object could not be found in the repository. Formerly value 437. ObjectRejectedError. The repository has rejected the object. See the sub error codes for the specific reason. Example: Restricted content or copyright detected. Formerly value 444. CompressionError.  Endpoint could not compress the object %s as requested. DecompressionError.  Endpoint could not decompress the object %s as requested. TooManyRequests.  The user has sent too many requests in a given amount of time. Formerly value 429. ServiceTemporarilyUnavailableError.  This is for a short term outage. ServiceUnavailableError.  Endpoint is not available for requests at this time.  This is due to an extended system outage. ServiceFailureError.  Endpoint failed while processing the request. General Error.  Review subCode for more information. Formerly value 400 or 499. NoMatchingRecordsWarning. No matching records were found. Formerly value 302. RecordNotFoundWarning.  The request contained the following references to entities that could not be found: %s. Formerly value 422. A general warning occurred. Review subCode for more information. "
        enum:
        - ValueOutOfRangeError
        - UnsupportedValueError
        - DatesOutOfOrderError
        - DateRangeTooWideError
        - InvalidFieldFormat
        - OtherValidationError
        - NoDataInRequest
        - IncompleteRequest
        - RecordHasBeenArchivedError
        - LoginInvalidError
        - UserPermissionError
        - AppPermissionError
        - UserSessionTokenExpiredError
        - AppSessionTokenExpiredError
        - UserCredentialsLockedOut
        - AppCredentialsLockedOut
        - ConflictAlreadyExists
        - UpdateToFieldNotAllowed
        - InvalidMACAddressError
        - InvalidIPAddressError
        - InvalidLanguageError
        - InvalidDataSourceIdError
        - InvalidFiIdError
        - InvalidEnvironmentError
        - PreviousRequestRequired
        - MalformedRequestError
        - UnsupportedMethodError
        - UnsupportedServiceError
        - RequestedServiceNotFound
        - EncryptionError
        - MIMETypeNotSupportedError
        - ObjectTooLargeError
        - ObjectTooSmallError
        - ObjectNotFoundError
        - ObjectRejectedError
        - CompressionError
        - DecompressionError
        - TooManyRequestsError
        - ServiceTemporarilyUnavailableError
        - ServiceUnavailableError
        - ServiceFailureError
        - GeneralError
        - NoMatchingRecordsWarning
        - RecordNotFoundWarning
        - GeneralWarning
      statusSubCode:
        type: string
        description: 'The message response sub code of the message. Non-standard error code that was in the back end system.  This may be helpful in understanding why a particular error occurred. '
      statusMessage:
        type: string
        description: 'The response message text. '
      substitutionList:
        $ref: '#/definitions/Status_substitutionList'
      referenceId:
        type: string
        description: "The reference identification for the individual message objects contained in a given object message list at the highest parent level. The reference is intended to be the ID of the given object, the temp ID of the given object, or any implementation specific reference to uniquely identify the originating object. Example: In an AccountMessage the AccoundId of the input object is recommended. Use of referenceId and or referenceIndex is to allow for the discrete association of status responses to the originating objects in the message list. "
      referenceIndex:
        type: integer
        description: "The reference index corresponds to the order of the orginating object message in the list at the highest parent level. Example: if 3 account objects were included in the originating AccountMessage then status responses can be provided for each object by reference (0, 1, 2). Use of referenceId and or referenceIndex is to allow for the discrete association of status responses to the originating objects in the message list. "
    description: 'The message collection/array contains all the messages returned when a service point was called. '
  MicroDeposit:
    type: object
    properties:
      microDepositId:
        type: string
        description: 'Unique id of the micro deposit. '
      microDepositAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      microDepositConfirmationCode:
        type: string
        description: 'Confirmation code for the microdeposit. As each microdeposit is processed independently a seperate response is possible for each occurence of the value and currency code pair. '
    description: 'Standard definition for money values to include both the value and the currency. Currency defaults to USD (United States $) if not specified. '
  MicroDepositFunding:
    type: object
    properties:
      microDepositFundingId:
        type: string
        description: 'Unique id of the micro funding deposit. This id will have a relationship to multiple micro deposit ids as presented as part of a single micro deposit transaction. '
      relationshipId:
        type: string
        description: 'The relationship ID is a persistent and unique identifier for the relationship. It should be unique for all relationships across the institution and remain the same over the life of the relationship with the financial institution. '
      partyId:
        type: string
        description: 'The party ID is a persistent and unique identifier for the party not related to the accounts they own but tied to that person or organization. It should be unique for all parties across the institution and remain the same over the life of the relationship with the financial institution. '
      sourceAccount:
        type: string
        description: 'The account ID is a persistent and unique identifier for the account. It must be unique for all users across the institution and remain the same over the life of the account. '
      sourceAccountType:
        type: string
        description: "Checking account, i.e., checks can be written against the account. Money market accounts can be included here or in money markets.  Its up to the institution. Savings and club accounts.  This can optionally include CDs, but its up to the institution. Auto loans, etc. Loans that are NOT lines of credit or credit cards. Loan behind the credit card.  Note the actual card information in the card object. Loan that is a line of credit but NOT a credit card. Loan that is made in exchange for taking title of property. Investment accounts such as brokerage and this can optionally include CDs and/or money markets, but its up to the institution. This account is a special type of checking account connected to a pre-paid card. Other account type. Loan that is made in installments. Loan is typically unsecured. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Installment. Loan that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Commercial. Line of Credit that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of CommercialLineOfCredit. A general ledger account of the financial institution. A loan account type that has not been prevously defined. This enumeration is considered deprecated. Recommend using account type loan and subAccount of OtherLoan. "
        enum:
        - Checking
        - Savings
        - Loan
        - CreditCard
        - LineOfCredit
        - Mortgage
        - Investment
        - PrePaidCard
        - Other
        - Installment
        - CommercialLoan
        - CommercialLineOfCredit
        - GeneralLedger
        - OtherLoan
      sourceAccountSubType:
        type: string
        description: 'The account subtype identifies the specific account type that the back end system will recognize. '
      externalAccountID:
        type: string
        description: 'External account that needs to be verified. Direct reference to the account structure was avoided in this instance to avoid inclusion of numerous fields not needed for a microdeposit. '
      externalRoutingNumber:
        type: string
        description: 'Routing number for the external account. Direct reference to the account structure was avoided in this instance to avoid inclusion of numerous fields not needed for a microdeposit. '
      microDepositList:
        $ref: '#/definitions/MicroDepositFunding_microDepositList'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
    description: 'A small deposit used to verify the validity of the account owner.  Typically during the ACH setup process. '
  MicroDepositFundingId:
    type: string
    description: 'Unique id of the micro funding deposit. This id will have a relationship to multiple micro deposit ids as presented as part of a single micro deposit transaction. '
  MicroDepositFundingList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      microDepositFunding:
        type: array
        description: 'Details related to microdeposit account. '
        items:
          $ref: '#/definitions/MicroDepositFunding'
    description: 'Collection of microdeposits data definition. '
  MicroDepositId:
    type: string
    description: 'Unique id of the micro deposit. '
  MicroDepositFundingFilter:
    type: object
    properties:
      microDepositFundingIdList:
        $ref: '#/definitions/MicroDepositFundingFilter_microDepositFundingIdList'
      microDepositIdList:
        $ref: '#/definitions/MicroDepositFundingFilter_microDepositIdList'
      partyIdList:
        $ref: '#/definitions/Account_partyIdList'
      relationshipIdList:
        $ref: '#/definitions/AccountFilter_relationshipIdList'
      sourceAccountIdList:
        $ref: '#/definitions/AccountFilter_accountIdList'
      accountStatusList:
        $ref: '#/definitions/AccountFilter_accountStatusList'
      externalAccountIdList:
        $ref: '#/definitions/AccountFilter_accountIdList'
      microDepositConfirmationCode:
        type: string
        description: 'Confirmation code for microdeposits. '
      customData:
        $ref: '#/definitions/AccessProfile_customData'
      sourceAccountIdentificationList:
        $ref: '#/definitions/AccountFilter_accountIdentificationList'
    description: 'The list of options to filter microdeposits. '
  MicroDepositFundingMessageDelete:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      microDepositFundingFilter:
        $ref: '#/definitions/MicroDepositFundingFilter'
      microDepositFundingList:
        $ref: '#/definitions/MicroDepositFundingList'
    description: Delete definition for MicroDepositFundingMessage
  MicroDepositFundingMessageGet:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      microDepositFundingFilter:
        $ref: '#/definitions/MicroDepositFundingFilter'
    description: Get definition for MicroDepositFundingMessage
  MicroDepositFundingMessagePost:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      microDepositFundingList:
        $ref: '#/definitions/MicroDepositFundingList'
    description: Post definition for MicroDepositFundingMessage
  MicroDepositFundingMessagePut:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      microDepositFundingFilter:
        $ref: '#/definitions/MicroDepositFundingFilter'
      microDepositFundingList:
        $ref: '#/definitions/MicroDepositFundingList'
    description: Put definition for MicroDepositFundingMessage
  MicroDepositFundingMessageResponse:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      microDepositFundingList:
        $ref: '#/definitions/MicroDepositFundingList'
    description: Response definition for MicroDepositFundingMessage
  NetworkId:
    type: string
    description: 'The network ID is a unique identifier for the network that contains the network node. '
  NetworkNode:
    type: object
    properties:
      networkNodeId:
        type: string
        description: 'The unique identifier created by the system and or the network node for identification. '
      networkId:
        type: string
        description: 'The network ID is a unique identifier for the network that contains the network node. '
      networkNodeDescription:
        type: string
        description: "Description for the network node.  Use, owner, etc. "
      networkNodeStatus:
        type: string
        description: 'Status of the node running on the network. '
      networkNodeType:
        type: string
        description: 'The networkNode type identifies what type of network node is defined. '
      networkNodeAddressList:
        $ref: '#/definitions/NetworkNode_networkNodeAddressList'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
    description: 'A network node that participates in the execution of a solution. Network nodes may be either hardware or software based instantiations of nodes. Network nodes may be either local or externally located. '
  NetworkNodeAddress:
    type: object
    properties:
      networkNodeAddressId:
        type: string
        description: "The network node Address ID is a unique identifier for the network node address. This could be a mac address, IP V4 or V6 address, generated GUID, etc. "
      networkNodeAddressDescription:
        type: string
        description: 'Description to help identify what the address is for in the network. '
      networkNodeAddressValue:
        type: string
        description: "The network node Address value is an identifier for the network node. This could be a mac address, IP V4 or V6 address, etc. Port can be found in the networkNodePort field. "
      networkNodeAddressScopeIsLocal:
        type: boolean
        description: 'The network node scope of the address property based on standard IPV4 and IPV6 conventions is local. '
      networkNodeAddressType:
        type: string
        description: "The fourth version of the Internet Protocol (IP). It is one of the core protocols of standards-based internetworking methods in the Internet, and was the first version deployed for production in the ARPANET in 1983. https://en.wikipedia.org/wiki/IPv4 Most recent version of the Internet Protocol (IP), the communications protocol that provides an identification and location system for computers on networks and routes traffic across the Internet. https://en.wikipedia.org/wiki/IPv6 A media access control address (MAC address) of a device is a unique identifier assigned to network interface controllers for communications at the data link layer of a network segment. https://en.wikipedia.org/wiki/MAC_address A reference to a web resource that specifies its location on a computer network and a mechanism for retrieving it. https://en.wikipedia.org/wiki/URL A network node address type yet to be defined by the specification. "
        enum:
        - IPV4
        - IPV6
        - MAC
        - URL
        - Other
      networkNodeAddressPort:
        type: string
        description: "If needed and not included in the NetworkNodeAddress, the network port type identifies the specific port that communications are performed on. "
      customData:
        $ref: '#/definitions/AccessProfile_customData'
  NetworkNodeAddressId:
    type: string
    description: "The network node Address ID is a unique identifier for the network node address. This could be a mac address, IP V4 or V6 address, generated GUID, etc. "
  NetworkNodeAddressPort:
    type: string
    description: "If needed and not included in the NetworkNodeAddress, the network port type identifies the specific port that communications are performed on. "
  NetworkNodeAddressType:
    type: string
    description: "The fourth version of the Internet Protocol (IP). It is one of the core protocols of standards-based internetworking methods in the Internet, and was the first version deployed for production in the ARPANET in 1983. https://en.wikipedia.org/wiki/IPv4 Most recent version of the Internet Protocol (IP), the communications protocol that provides an identification and location system for computers on networks and routes traffic across the Internet. https://en.wikipedia.org/wiki/IPv6 A media access control address (MAC address) of a device is a unique identifier assigned to network interface controllers for communications at the data link layer of a network segment. https://en.wikipedia.org/wiki/MAC_address A reference to a web resource that specifies its location on a computer network and a mechanism for retrieving it. https://en.wikipedia.org/wiki/URL A network node address type yet to be defined by the specification. "
    enum:
    - IPV4
    - IPV6
    - MAC
    - URL
    - Other
  NetworkNodeAddressValue:
    type: string
    description: "The network node Address value is an identifier for the network node. This could be a mac address, IP V4 or V6 address, etc. Port can be found in the networkNodePort field. "
  NetworkNodeList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      networkNode:
        type: array
        description: 'A network node that participates in the execution of a solution. Network nodes may be either hardware or software based instantiations of nodes. '
        items:
          $ref: '#/definitions/NetworkNode'
  NetworkNodeStatus:
    type: string
    description: 'Status of the node running on the network. '
  NetworkNodeType:
    type: string
    description: 'The networkNode type identifies what type of network node is defined. '
  NetworkNodeFilter:
    type: object
    properties:
      networkIdList:
        $ref: '#/definitions/NetworkNodeFilter_networkIdList'
      networkNodeIdList:
        $ref: '#/definitions/ConfigurationFilter_networkNodeAddressIdList'
      networkNodeStatusList:
        $ref: '#/definitions/NetworkNodeFilter_networkNodeStatusList'
      networkNodeTypeList:
        $ref: '#/definitions/NetworkNodeFilter_networkNodeTypeList'
      networkNodeAddressIdList:
        $ref: '#/definitions/NetworkNodeFilter_networkNodeAddressIdList'
      networkNodeAddressValueList:
        $ref: '#/definitions/NetworkNodeFilter_networkNodeAddressValueList'
      networkNodeAddressScopeIsLocal:
        type: boolean
        description: 'The network node scope of the address property based on standard IPV4 and IPV6 conventions is local. '
      networkNodeAddressTypeList:
        $ref: '#/definitions/NetworkNodeFilter_networkNodeAddressTypeList'
      networkNodeAddressPortList:
        $ref: '#/definitions/NetworkNodeFilter_networkNodeAddressPortList'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
  NetworkNodeMessageDelete:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      networkNodeFilter:
        $ref: '#/definitions/NetworkNodeFilter'
      networkNodeList:
        $ref: '#/definitions/NetworkNodeList'
    description: Delete definition for NetworkNodeMessage
  NetworkNodeMessageGet:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      networkNodeFilter:
        $ref: '#/definitions/NetworkNodeFilter'
    description: Get definition for NetworkNodeMessage
  NetworkNodeMessagePost:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      networkNodeList:
        $ref: '#/definitions/NetworkNodeList'
    description: Post definition for NetworkNodeMessage
  NetworkNodeMessagePut:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      networkNodeFilter:
        $ref: '#/definitions/NetworkNodeFilter'
      networkNodeList:
        $ref: '#/definitions/NetworkNodeList'
    description: Put definition for NetworkNodeMessage
  NetworkNodeMessageResponse:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      networkNodeList:
        $ref: '#/definitions/NetworkNodeList'
    description: Response definition for NetworkNodeMessage
  NoteMessageDelete:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      notesFilter:
        $ref: '#/definitions/NotesFilter'
      detailedNoteList:
        $ref: '#/definitions/DetailedNoteList'
    description: Delete definition for NoteMessage
  NoteMessageGet:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      notesFilter:
        $ref: '#/definitions/NotesFilter'
    description: Get definition for NoteMessage
  NoteMessagePost:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      detailedNoteList:
        $ref: '#/definitions/DetailedNoteList'
    description: Post definition for NoteMessage
  NoteMessagePut:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      notesFilter:
        $ref: '#/definitions/NotesFilter'
      detailedNoteList:
        $ref: '#/definitions/DetailedNoteList'
    description: Put definition for NoteMessage
  NoteMessageResponse:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      detailedNoteList:
        $ref: '#/definitions/DetailedNoteList'
    description: Response definition for NoteMessage
  DetailedNote:
    type: object
    properties:
      referenceIdChoice:
        $ref: '#/definitions/DetailedNote_referenceIdChoice'
      commonNoteData:
        $ref: '#/definitions/DetailedNote_commonNoteData'
    description: 'An application contains the details of a consumer who is becoming a customer of a financial institution (if they are not already). It also includes the details of the products requested. '
  DetailedNoteList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      detailedNote:
        type: array
        description: 'Collection of detailed note data definition. '
        items:
          $ref: '#/definitions/DetailedNote'
    description: 'Collection of detailed note data definition. '
  NotesFilter:
    type: object
    properties:
      noteIdList:
        $ref: '#/definitions/NotesFilter_noteIdList'
      recordType:
        type: string
        description: 'Enumeration of the different types of top-level records. '
        enum:
        - Account
        - Application
        - Loan
        - Portfolio
        - Deposit
        - ProductServiceRequest
        - Relationship
        - Request
        - Activity
        - Transaction
        - Transfer
        - TransferOccurrence
        - TransferRecurring
      noteCodelist:
        $ref: '#/definitions/NotesFilter_noteCodelist'
      noteCreatorList:
        $ref: '#/definitions/NotesFilter_noteCreatorList'
      accountIdList:
        $ref: '#/definitions/AccountFilter_accountIdList'
      accountStatusList:
        $ref: '#/definitions/AccountFilter_accountStatusList'
      applicationIdList:
        $ref: '#/definitions/ApplicationFilter_applicationIdList'
      partyIdList:
        $ref: '#/definitions/Account_partyIdList'
      relationshipIdList:
        $ref: '#/definitions/AccountFilter_relationshipIdList'
      productServiceRequestIdList:
        $ref: '#/definitions/FieldFilter_productServiceRequestIdList'
      activityIdList:
        $ref: '#/definitions/ActivityFilter_activityIdList'
      transactionIdList:
        $ref: '#/definitions/HoldFilter_transactionIdList'
      noteCreatedDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
      accountIdentificationList:
        $ref: '#/definitions/AccountFilter_accountIdentificationList'
    description: 'The list of filter options for services requesting note data. The options can be used in combination or by themselves. It is up to the data source to either return or affect the data requested or return a standard error identifying why the request was rejected. '
  OverdraftPriority:
    type: object
    properties:
      accountId:
        type: string
        description: 'The account ID is a persistent and unique identifier for the account. It must be unique for all users across the institution and remain the same over the life of the account. '
      accountType:
        type: string
        description: "Checking account, i.e., checks can be written against the account. Money market accounts can be included here or in money markets.  Its up to the institution. Savings and club accounts.  This can optionally include CDs, but its up to the institution. Auto loans, etc. Loans that are NOT lines of credit or credit cards. Loan behind the credit card.  Note the actual card information in the card object. Loan that is a line of credit but NOT a credit card. Loan that is made in exchange for taking title of property. Investment accounts such as brokerage and this can optionally include CDs and/or money markets, but its up to the institution. This account is a special type of checking account connected to a pre-paid card. Other account type. Loan that is made in installments. Loan is typically unsecured. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Installment. Loan that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Commercial. Line of Credit that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of CommercialLineOfCredit. A general ledger account of the financial institution. A loan account type that has not been prevously defined. This enumeration is considered deprecated. Recommend using account type loan and subAccount of OtherLoan. "
        enum:
        - Checking
        - Savings
        - Loan
        - CreditCard
        - LineOfCredit
        - Mortgage
        - Investment
        - PrePaidCard
        - Other
        - Installment
        - CommercialLoan
        - CommercialLineOfCredit
        - GeneralLedger
        - OtherLoan
      accountSubType:
        type: string
        description: 'The account subtype identifies the specific account type that the back end system will recognize. '
      overdraftPriorityAccountList:
        $ref: '#/definitions/OverdraftPriority_overdraftPriorityAccountList'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
  OverdraftPriorityAccount:
    type: object
    properties:
      overdraftPriorityId:
        type: string
        description: 'The overdraft priority ID is a persistent and unique identifier for each entry in an accounts overdraft priority list. '
      priority:
        type: integer
        description: 'Indicates the numeric priority (in ascending order) of accounts to be used as sources of overdraft protection. '
      accountId:
        type: string
        description: 'The account ID is a persistent and unique identifier for the account. It must be unique for all users across the institution and remain the same over the life of the account. '
      accountType:
        type: string
        description: "Checking account, i.e., checks can be written against the account. Money market accounts can be included here or in money markets.  Its up to the institution. Savings and club accounts.  This can optionally include CDs, but its up to the institution. Auto loans, etc. Loans that are NOT lines of credit or credit cards. Loan behind the credit card.  Note the actual card information in the card object. Loan that is a line of credit but NOT a credit card. Loan that is made in exchange for taking title of property. Investment accounts such as brokerage and this can optionally include CDs and/or money markets, but its up to the institution. This account is a special type of checking account connected to a pre-paid card. Other account type. Loan that is made in installments. Loan is typically unsecured. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Installment. Loan that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Commercial. Line of Credit that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of CommercialLineOfCredit. A general ledger account of the financial institution. A loan account type that has not been prevously defined. This enumeration is considered deprecated. Recommend using account type loan and subAccount of OtherLoan. "
        enum:
        - Checking
        - Savings
        - Loan
        - CreditCard
        - LineOfCredit
        - Mortgage
        - Investment
        - PrePaidCard
        - Other
        - Installment
        - CommercialLoan
        - CommercialLineOfCredit
        - GeneralLedger
        - OtherLoan
      accountSubType:
        type: string
        description: 'The account subtype identifies the specific account type that the back end system will recognize. '
    description: "An entry in an accounts overdraft priority list, i.e. where should funds be pulled from to cover the overdraft and its order based on priority. "
  OverdraftPriorityId:
    type: string
    description: 'The overdraft priority ID is a persistent and unique identifier for each entry in an accounts overdraft priority list. '
  OverdraftPriorityList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      overdraftPriority:
        type: array
        description: 'Establishes the overdraft priority. '
        items:
          $ref: '#/definitions/OverdraftPriority'
  Priority:
    type: integer
    description: 'Indicates the numeric priority (in ascending order) of accounts to be used as sources of overdraft protection. '
  OverdraftPriorityListFilter:
    type: object
    properties:
      accountId:
        type: string
        description: 'The account ID is a persistent and unique identifier for the account. It must be unique for all users across the institution and remain the same over the life of the account. '
      accountStatusList:
        $ref: '#/definitions/AccountFilter_accountStatusList'
      overdraftPriorityIdList:
        $ref: '#/definitions/OverdraftPriorityListFilter_overdraftPriorityIdList'
      priorityList:
        $ref: '#/definitions/OverdraftPriorityListFilter_priorityList'
      overdraftFromAccountIdList:
        $ref: '#/definitions/AccountFilter_accountIdList'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
      accountIdentificationList:
        $ref: '#/definitions/AccountFilter_accountIdentificationList'
    description: 'The list of filter options for services requesting overdraft priority list data. The options can be used in combination or by themselves.  It is up to the data source to either return or affect the data requested or return a standard error identifying why the request was rejected. '
  OverdraftPriorityMessageDelete:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      overdraftPriorityFilter:
        $ref: '#/definitions/OverdraftPriorityListFilter'
      overdraftPriorityList:
        $ref: '#/definitions/OverdraftPriorityList'
    description: Delete definition for OverdraftPriorityMessage
  OverdraftPriorityMessageGet:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      overdraftPriorityFilter:
        $ref: '#/definitions/OverdraftPriorityListFilter'
    description: Get definition for OverdraftPriorityMessage
  OverdraftPriorityMessagePost:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      overdraftPriorityList:
        $ref: '#/definitions/OverdraftPriorityList'
    description: Post definition for OverdraftPriorityMessage
  OverdraftPriorityMessagePut:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      overdraftPriorityFilter:
        $ref: '#/definitions/OverdraftPriorityListFilter'
      overdraftPriorityList:
        $ref: '#/definitions/OverdraftPriorityList'
    description: Put definition for OverdraftPriorityMessage
  OverdraftPriorityMessageResponse:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      overdraftPriorityList:
        $ref: '#/definitions/OverdraftPriorityList'
    description: Response definition for OverdraftPriorityMessage
  AdditionalIncome:
    type: object
    properties:
      amount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      frequency:
        type: string
        description: 'The frequency of the income. '
        enum:
        - AmortizedSchedule
        - Annual
        - AtMaturity
        - Bimonthly
        - Biweekly
        - BiweeklySkipFirst
        - BiweeklySkipLast
        - Daily
        - EventTrigger
        - Hourly
        - Immediate
        - Monthly
        - None
        - OneTime
        - Other
        - PerUse
        - Quarterly
        - SemiAnnual
        - SemiMonthly
        - Triannual
        - Weekly
        - WeeklySkipFirst
        - WeeklySkipLast
        - XDays
        - XMonths
        - XYears
      otherFrequencyType:
        type: string
        description: 'Free form text that describes the frequency type "Other" when it is set in the frequency element. '
      excludeIncomeFromCalculations:
        type: boolean
        description: "By default, income details are included in any applicable calculations. "
      customData:
        $ref: '#/definitions/AccessProfile_customData'
      source:
        type: string
        description: 'The source of the additional income. '
    description: "Describes additional non-standard sources of income (child support, investments, e-bay, etc.). "
  Citizenship:
    type: object
    properties:
      citizenship:
        type: string
        description: ISO 3166-1  Year 2006 /xs:documentation
        enum:
        - AD
        - AE
        - AF
        - AG
        - AI
        - AL
        - AM
        - AN
        - AO
        - AQ
        - AR
        - AS
        - AT
        - AU
        - AW
        - AX
        - AZ
        - BA
        - BB
        - BD
        - BE
        - BF
        - BG
        - BH
        - BI
        - BJ
        - BL
        - BM
        - BN
        - BO
        - BR
        - BS
        - BT
        - BV
        - BW
        - BY
        - BZ
        - CA
        - CC
        - CD
        - CF
        - CG
        - CH
        - CI
        - CK
        - CL
        - CM
        - CN
        - CO
        - CR
        - CU
        - CV
        - CX
        - CY
        - CZ
        - DE
        - DJ
        - DK
        - DM
        - DO
        - DZ
        - EC
        - EE
        - EG
        - EH
        - ER
        - ES
        - ET
        - FI
        - FJ
        - FK
        - FM
        - FO
        - FR
        - GA
        - GB
        - GD
        - GE
        - GF
        - GG
        - GH
        - GI
        - GL
        - GM
        - GN
        - GP
        - GQ
        - GR
        - GS
        - GT
        - GU
        - GW
        - GY
        - HK
        - HM
        - HN
        - HR
        - HT
        - HU
        - ID
        - IE
        - IL
        - IM
        - IN
        - IO
        - IQ
        - IR
        - IS
        - IT
        - JE
        - JM
        - JO
        - JP
        - KE
        - KG
        - KH
        - KI
        - KM
        - KN
        - KP
        - KR
        - KW
        - KY
        - KZ
        - LA
        - LB
        - LC
        - LI
        - LK
        - LR
        - LS
        - LT
        - LU
        - LV
        - LY
        - MA
        - MC
        - MD
        - ME
        - MF
        - MG
        - MH
        - MK
        - ML
        - MM
        - MN
        - MO
        - MP
        - MQ
        - MR
        - MS
        - MT
        - MU
        - MV
        - MW
        - MX
        - MY
        - MZ
        - NA
        - NC
        - NE
        - NF
        - NG
        - NI
        - NL
        - "NO"
        - NP
        - NR
        - NU
        - NZ
        - OM
        - PA
        - PE
        - PF
        - PG
        - PH
        - PK
        - PL
        - PM
        - PN
        - PR
        - PS
        - PT
        - PW
        - PY
        - QA
        - RE
        - RO
        - RS
        - RU
        - RW
        - SA
        - SB
        - SC
        - SD
        - SE
        - SG
        - SH
        - SI
        - SJ
        - SK
        - SL
        - SM
        - SN
        - SO
        - SR
        - ST
        - SV
        - SY
        - SZ
        - TC
        - TD
        - TF
        - TG
        - TH
        - TJ
        - TK
        - TL
        - TM
        - TN
        - TO
        - TR
        - TT
        - TV
        - TW
        - TZ
        - UA
        - UG
        - UM
        - US
        - UY
        - UZ
        - VA
        - VC
        - VE
        - VG
        - VI
        - VN
        - VU
        - WF
        - WS
        - YE
        - YT
        - ZA
        - ZM
        - ZW
      wasCitizenshipCertified:
        type: boolean
        description: 'Result of the answer to a question regarding whether the person certified that they are a citizen of the country that was selected. '
      customData:
        $ref: '#/definitions/AccessProfile_customData'
    description: 'Country code and certified flag for each country of which the party identifies as being a citizen. '
  DoingBusinessAs:
    type: object
    properties:
      doingBusinessAsId:
        type: string
        description: 'Doing business as ID used to uniquely identify each Doing Business As (DBA) description. '
      doingBusinessAsName:
        type: string
        description: 'Name that the business is Doing Business As. '
      customData:
        $ref: '#/definitions/AccessProfile_customData'
  EligibilityRequirementMet:
    type: object
    properties:
      requirementId:
        type: string
        description: "Identifier for the type of eligibility requirement that the party met. For most financial institutions, this might be a select employee group, a community identifier or some other field of membership criteria identifier. "
      referenceDescription:
        type: string
        description: "Description of how the party met eligibility requirement or additional information beyond the Reference ID (such as a geographical reference, etc.). "
      customData:
        $ref: '#/definitions/AccessProfile_customData'
  Employment:
    type: object
    properties:
      employmentId:
        type: string
        description: 'Unique identifier for the employment record used as a way of identifying this record within the system. '
      employerPartyId:
        type: string
        description: 'The party ID is a persistent and unique identifier for the party not related to the accounts they own but tied to that person or organization. It should be unique for all parties across the institution and remain the same over the life of the relationship with the financial institution. '
      employerName:
        type: string
        description: 'The employer name. '
      employmentStartDate:
        type: string
        format: date
        description: 'The employment start date. '
      employmentEndDate:
        type: string
        format: date
        description: 'The employment end date. '
      timeAtEmployer:
        type: string
        format: duration
        description: "The duration spent at the employer as calculated by the employment start and end dates. The time interval is specified in the following form \"PnYnMnDTnHnMnS\" where: P indicates the period (required) nY indicates the number of years nM indicates the number of months nD indicates the number of days Example: P5Y2M10D would indicate five years, two months and 10 days. "
      employeeOccupation:
        type: string
        description: 'The position that the individual holds in the business. '
      employerAddress:
        type: array
        description: 'The employers address. '
        items:
          $ref: '#/definitions/Address'
      employerPhone:
        type: array
        description: 'Contains details describing phone-specific employer data elements. '
        items:
          $ref: '#/definitions/Phone'
      employerStatus:
        type: string
        description: "Represents available individual employer status values, as in currently or previously employed by an employer. "
        enum:
        - Current
        - Previous
      type:
        type: string
        description: "Represents available individual employment type values, as in full or part time. "
        enum:
        - FullTime
        - PartTime
      employmentIncome:
        $ref: '#/definitions/Employment_employmentIncome'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
    description: 'Employment/employer details related to an individual. '
  IdentificationDocument:
    type: object
    properties:
      idDocumentIdentifer:
        type: string
        description: "The actual identifier assigned by the state, government or other institution to the document. Examples would be a driverâ€™s license or passport number. "
      idDocumentType:
        $ref: '#/definitions/IdentificationDocument_idDocumentType'
      idIssuedBy:
        type: string
        description: "State of issuance, country of issuance, etc. "
      idIssueDate:
        type: string
        format: date
        description: "Date that the ID was issued, if there is one. Note: This is different than the effective date of the document. "
      idExpirationDate:
        type: string
        format: date
        description: "Expiration printed on the ID, if there is one. Note: This is different than the expiration of the document.  "
      idDisplayOrder:
        type: integer
        format: nonNegativeInteger
        description: 'The order in which this document will be displayed when multiple documents exist and are brought up on the screen. '
      idVerifyDateTime:
        type: string
        format: datetime
        description: 'The date the identification type/document was verified. The date/time should be ISO 8601 UTC format. yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      documentId:
        type: string
        description: "The document ID is a persistent and unique identifier for the document not related to the party, relationship or accounts that the document is for. It should be unique for all documents across the institution and remain the same over the life of the document within the financial institution. "
  Liability:
    type: object
    properties:
      description:
        type: string
        description: 'The liability description. '
      payment:
        $ref: '#/definitions/Account_accountEscheatAmount'
      paymentFrequency:
        type: string
        description: "The liability payment frequency, i.e. monthly, weekly, etc. "
        enum:
        - AmortizedSchedule
        - Annual
        - AtMaturity
        - Bimonthly
        - Biweekly
        - BiweeklySkipFirst
        - BiweeklySkipLast
        - Daily
        - EventTrigger
        - Hourly
        - Immediate
        - Monthly
        - None
        - OneTime
        - Other
        - PerUse
        - Quarterly
        - SemiAnnual
        - SemiMonthly
        - Triannual
        - Weekly
        - WeeklySkipFirst
        - WeeklySkipLast
        - XDays
        - XMonths
        - XYears
      balance:
        $ref: '#/definitions/Account_accountEscheatAmount'
      excludeLiabilityFromCalculations:
        type: boolean
        description: "By default, liabilities are included in any applicable calculations. "
      customData:
        $ref: '#/definitions/AccessProfile_customData'
    description: 'Details related to liability. '
  OrganizationName:
    type: string
    description: 'Standard/legal name of the organization. Completed if party type is Organization. '
  OrganizationSubType:
    type: string
    description: "Organization sub type is the textual representation of what kind of organization it is. Completed if party type is Organization. For example: FinancialInstitution, Vendor, CUSO, Bank, Government Agency, etc. It is up to the endpoints to determine what they will pass in sub type. "
  OrganizationType:
    type: string
    description: "A business that legally has no separate existence from its owner. Income and losses are taxed on the individuals personal income tax return. Legal form of company that provides limited liability to its owners in the vast majority of United States jurisdictions. A nominate contract between individuals who, in a spirit of cooperation, agree to carry on an enterprise; contribute to it by combining property, knowledge or activities; and share its profit. An association of individuals, created by law or under authority of law, having a continuous existence independent of the existences of its members, and powers and liabilities distinct from those of its members. A not for profit organization is a type of organization that does not earn profits for its owners. All of the money earned by or donated to a not for profit organization is used in pursuing the organizations objectives. Typically not for profit organizations are charities or other types of public service organizations. Generally, not for profit organizations can apply for a tax exempt status so that the organization is not subject to most forms of taxation. Donations made to a tax exempt not for profit organization may also be tax-deductible for the donor. Taken from investopedia.com. An organization composed of people who voluntarily meet on a regular basis for a mutual purpose other than educational, religious, charitable, or financial pursuits. A club is any kind of group that has members who meet for a social, literary, or political purpose, such as health clubs, country clubs, book clubs, and womens associations. The term club is not a legal term per se, but a group that organizes itself as a club must comply with any laws governing its organization and otherwise be cognizant of the legal ramifications in undertaking to organize itself in this manner. Taken from legal-dictionary.thefreedictionary.com "
    enum:
    - SoleProprietorship
    - Llc
    - Partnership
    - Corporation
    - NotForProfit
    - Club
  Party:
    type: object
    properties:
      id:
        type: string
        description: 'The party ID is a persistent and unique identifier for the party not related to the accounts they own but tied to that person or organization. It should be unique for all parties across the institution and remain the same over the life of the relationship with the financial institution. '
      taxInformationList:
        $ref: '#/definitions/Party_taxInformationList'
      type:
        type: string
        description: "The party type is the textual representation of what the party record represents. If Organization is Noted, then certain fields like first and last name wont apply. "
        enum:
        - Individual
        - Organization
        - Trust
        - Estate
      partyStatus:
        type: string
        description: 'The party status is the textual representation of the status of the party within the system. This field is an string as status may be difficult to pin down to a specific enumeration list. '
      partySubStatus:
        type: string
        description: 'The party sub status as to why the party is in a particular status. '
      characteristics:
        $ref: '#/definitions/Party_characteristics'
      identificationDocumentList:
        $ref: '#/definitions/Party_identificationDocumentList'
      eligibilityRequirementMetList:
        $ref: '#/definitions/Party_eligibilityRequirementMetList'
      contactIdList:
        $ref: '#/definitions/Activity_activityRelatedTo_contactIdList'
      contactList:
        $ref: '#/definitions/InvestmentParty_investmentContactList'
      fiUserIdList:
        $ref: '#/definitions/CredentialGroupFilter_fiUserIdList'
      householdId:
        type: string
        description: 'Calculated and stored by the back end core system or some other marketing system.  This ID is used to reduce mailing costs during marketing campaigns to avoid sending duplicate materials to parties residing at the same address. '
      partyDateCreated:
        type: string
        format: date
        description: 'DEPRECATED in next major release due to name and data type correction. Date the party was created in the source system. The date/time should be ISO 8601 UTC format. yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      partyDateTimeCreated:
        type: string
        format: datetime
        description: 'Date and time the party was created in the source system. The date/time should be ISO 8601 UTC format. yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      partyCreatedBy:
        type: string
        description: 'The unique identifier created by the system and or the user for identification. '
      partyDateModified:
        type: string
        format: date
        description: 'DEPRECATED in next major release due to name and data type correction. Date the party data was modified in the source system. The date/time should be ISO 8601 UTC format. yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      partyDateTimeModified:
        type: string
        format: datetime
        description: 'Date and time the party data was modified in the source system. The date/time should be ISO 8601 UTC format. yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      partyModifiedBy:
        type: string
        description: 'The unique identifier created by the system and or the user for identification. '
      partyDateDeleted:
        type: string
        format: date
        description: 'DEPRECATED in next major release due to name and data type correction. Date the party data was deleted or mark as inactive in the source system. The date/time should be ISO 8601 UTC format. yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      partyDateTimeDeleted:
        type: string
        format: datetime
        description: 'Date the party data was deleted or mark as inactive in the source system. The date/time should be ISO 8601 UTC format. yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      partyDeletedBy:
        type: string
        description: 'The unique identifier created by the system and or the user for identification. '
      noteList:
        $ref: '#/definitions/Account_accountNoteList'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
      nonresidentAlienCertificationtype:
        type: string
        description: "Indicates whether IRS Form W-8BEN (for individuals), Form W-8BEN-E (for entities), Form W-8ECI, Form W-8EXP, or Form W-8IMY was filed for this party. "
      nonresidentAlienCertificationDateTime:
        type: string
        format: datetime
        description: 'Date the party signed the IRS Form W-8 Certificate of Foreign Status to certify non-resident alien status. The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      nonresidentAlienLimitationOnBenefits:
        type: string
        description: 'Limitation on benefits category that qualifies the taxpayer for the requested treaty benefits. '
      nonresidentAlienSpecialWithholdingStatus:
        type: string
        description: 'Specifies if a claim has been made for a tax treaty benefit. No special withholding rate or exemption. Claimed special withholding rate applies see nonresidentAlienSpecialWithholdingRate. Special exemption from withholding. '
        enum:
        - None
        - Claimed
        - Exempt
      nonresidentAlienSpecialWithholdingRate:
        type: number
        description: "Special withholding rate that is claimed by the party when filing IRS Form W-8BEN Certificate of Foreign Status of Beneficial Owner for United States Tax Withholding. NonresidentAlienSpecialWithholdingStatus is set as Claimed. Value is formatted as a percentile. A passed value of 4.5 is equivalent to 0.045 actual. 4.500 may be displayed as 4.500% or 4.5% depending on the user interface. Decimals available: 999.999 "
    description: "The party object defines all the fields necessary to define a person, credit union member, business or vendor related to a financial institution. The ID uniquely identifies the party within the financial institution. "
  PartyId:
    type: string
    description: 'The party ID is a persistent and unique identifier for the party not related to the accounts they own but tied to that person or organization. It should be unique for all parties across the institution and remain the same over the life of the relationship with the financial institution. '
  PartyList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      party:
        type: array
        items:
          $ref: '#/definitions/Party'
    description: "The parties collection/array contains all the parties, for instance, that the credential set is authorized to access at the Institution based on applied filters. "
  PartyStatus:
    type: string
  PartySubStatus:
    type: string
  PartyType:
    type: string
    enum:
    - Individual
    - Organization
    - Trust
    - Estate
  TaxId:
    type: string
    description: "Individual Social Security Number (SSN), Individual Tax Payer Number (TIN), the organizational Employer Identification Number (EIN), or other international Tax ID. "
  TaxInformation:
    type: object
    properties:
      taxId:
        type: string
        description: "Individual Social Security Number (SSN), Individual Tax Payer Number (TIN), the organizational Employer Identification Number (EIN), or other international Tax ID. "
      taxIdEncrypted:
        type: boolean
        description: "If true, indicates that the tax ID was encrypted. Encryption method is agreed upon by application end point providers.  Assume itâ€™s NOT encrypted if this flag is not provided. The message context will be used by the service to understand which client is calling the service and know which encryption algorithm to apply. "
      taxIdType:
        type: string
        description: 'Identifies what type of tax ID is in the taxId field.  Standard IRS codes plus two foreign codes. http://www.irs.gov/Individuals/International-Taxpayers/Taxpayer-Identification-Numbers-(TIN) '
        enum:
        - SocialSecurityNumber
        - EmployerIdentificationNumber
        - IndividualTaxpayerIdentificationNumber
        - TaxpayerIdentificationNumberForPendingUSAdoptions
        - PreparerTaxpayerIdentificationNumber
        - ForeignNational
        - ForeignNumberNoTIN
        - Other
        - SocialInsuranceNumber
      otherTaxIdType:
        type: string
        description: 'Description of other tax id when taxIdType is equal to Other. '
      reportingFlag:
        type: boolean
        description: "Whether the financial income for this party should be reported to the U.S. government (IRS) when related to an account in a way which requires reporting (for example, primary, joint ownership). Defaults to true if not specified. "
      verifiedTaxIdFlag:
        type: boolean
        description: 'The tax ID has been verified by the IRS as valid. '
      taxIdWarningCount:
        type: integer
        format: nonNegativeInteger
        description: 'Number of times that the IRS has notified the FI that there are issues with the tax ID. This is not used in initial creation but can be used for later processing. '
      backupWithholdingFlag:
        type: boolean
        description: 'This tax ID is subject to backup withholding. '
      backupWithholdingReason:
        type: string
        description: 'The reason that the tax ID is subject to backup withholding. '
      backupWithholdingExemptionReason:
        type: string
        description: 'The reason that the tax ID is NOT subject to backup withholding. '
        enum:
        - ExceptFromWithholding
        - NotNotifiedByIrs
        - IrsNotifiedNoLongSubject
      backupWithholdingEffectiveDate:
        type: string
        format: date
        description: 'The date the tax ID has submitted their backup withholding information. The date/time should be ISO 8601 UTC format. yyyy-mm-dd (2011-03-28) format is supported. '
      customData:
        $ref: '#/definitions/AccessProfile_customData'
      withholdingsInfoList:
        $ref: '#/definitions/Account_withholdingsInfoList'
      taxIdExpirationDateTime:
        type: string
        format: datetime
        description: 'Date that a tax id will expire as being valid. Example usage US federal government - An Individual Taxpayer Identification Number ITIN will expire if not used on a federal income tax return for ANY year during a period of 5 consecutive years. The date/time should be ISO 8601 UTC format. yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
  PartyAssociation:
    type: object
    properties:
      partyAssociationId:
        type: string
        description: 'The party association ID is a persistent and unique identifier for the party association. It should be unique for all parties across the institution and remain the same over the life of the relationship with the financial institution. '
      parentPartyId:
        type: string
        description: 'The party ID is a persistent and unique identifier for the party not related to the accounts they own but tied to that person or organization. It should be unique for all parties across the institution and remain the same over the life of the relationship with the financial institution. '
      childPartyId:
        type: string
        description: 'The party ID is a persistent and unique identifier for the party not related to the accounts they own but tied to that person or organization. It should be unique for all parties across the institution and remain the same over the life of the relationship with the financial institution. '
      partyAssociationType:
        $ref: '#/definitions/PartyAssociation_partyAssociationType'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
    description: "The party association object defines all the fields necessary to define an association between an individual organization, trust or estate.  This allows the financial institution to better serve the clients because it better understands how each party relates with another.  This also helps in identifying risks associated with their clients such as the liability of a partnership in an organization. The party association ID uniquely identifies the party association within the financial institution. "
  PartyAssociationId:
    type: string
    description: 'The party association ID is a persistent and unique identifier for the party association. It should be unique for all parties across the institution and remain the same over the life of the relationship with the financial institution. '
  PartyAssociationList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      partyAssociation:
        type: array
        items:
          $ref: '#/definitions/PartyAssociation'
    description: "The party association list collection/array contains all the party associations, for instance, that the credential set is authorized to access at the Institution based on applied filters. "
  PartyAssociationType:
    type: object
    properties:
      partner:
        $ref: '#/definitions/PartyAssociation_partyAssociationType_partner'
      officerManager:
        $ref: '#/definitions/PartyAssociation_partyAssociationType_officerManager'
      agent:
        $ref: '#/definitions/DepositParty_depositPartyRelationshipType_agent'
      nextOfKin:
        $ref: '#/definitions/PartyAssociation_partyAssociationType_nextOfKin'
      trustor:
        $ref: '#/definitions/PartyAssociation_partyAssociationType_trustor'
      financialInstitution:
        $ref: '#/definitions/PartyAssociation_partyAssociationType_financialInstitution'
      vendor:
        $ref: '#/definitions/PartyAssociation_partyAssociationType_vendor'
    description: 'The party association type identifies how the parent party relates to the child party. '
  PartyAssociationFilter:
    type: object
    properties:
      partyAssociationIdList:
        $ref: '#/definitions/PartyAssociationFilter_partyAssociationIdList'
      parentPartyIdList:
        $ref: '#/definitions/Account_partyIdList'
      childPartyIdList:
        $ref: '#/definitions/Account_partyIdList'
      partyAssociationTypeList:
        $ref: '#/definitions/PartyAssociationFilter_partyAssociationTypeList'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
    description: 'The list of filter options for services requesting party association data.  The options can be used in combination or by themselves.  It is up to the data source to either return or affect the data requested or return a standard error identifying why the request was rejected. '
  PartyAssociationMessageDelete:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      partyAssociationFilter:
        $ref: '#/definitions/PartyAssociationFilter'
      partyAssociationList:
        $ref: '#/definitions/PartyAssociationList'
    description: Delete definition for PartyAssociationMessage
  PartyAssociationMessageGet:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      partyAssociationFilter:
        $ref: '#/definitions/PartyAssociationFilter'
    description: Get definition for PartyAssociationMessage
  PartyAssociationMessagePost:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      partyAssociationList:
        $ref: '#/definitions/PartyAssociationList'
    description: Post definition for PartyAssociationMessage
  PartyAssociationMessagePut:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      partyAssociationFilter:
        $ref: '#/definitions/PartyAssociationFilter'
      partyAssociationList:
        $ref: '#/definitions/PartyAssociationList'
    description: Put definition for PartyAssociationMessage
  PartyAssociationMessageResponse:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      partyAssociationList:
        $ref: '#/definitions/PartyAssociationList'
    description: Response definition for PartyAssociationMessage
  PartyFilter:
    type: object
    properties:
      partyIdList:
        $ref: '#/definitions/Account_partyIdList'
      relationshipIdList:
        $ref: '#/definitions/AccountFilter_relationshipIdList'
      contactIdList:
        $ref: '#/definitions/Activity_activityRelatedTo_contactIdList'
      accountIdList:
        $ref: '#/definitions/AccountFilter_accountIdList'
      accountStatusList:
        $ref: '#/definitions/AccountFilter_accountStatusList'
      accountAccountTypeList:
        $ref: '#/definitions/PartyFilter_accountAccountTypeList'
      taxIdList:
        $ref: '#/definitions/ContactFilter_taxIdList'
      partyTypeList:
        $ref: '#/definitions/FeeScheduleFilter_partyTypeList'
      partyStatusList:
        $ref: '#/definitions/PartyFilter_partyStatusList'
      partySubStatusList:
        $ref: '#/definitions/PartyFilter_partySubStatusList'
      includeNotesFlag:
        type: boolean
        description: "If this is not provided, it will not return notes. If it is provided and its true, it will return all active non-expired notes. "
      personNameList:
        $ref: '#/definitions/PartyFilter_personNameList'
      organizationNameList:
        $ref: '#/definitions/PartyFilter_organizationNameList'
      organizationTypeList:
        $ref: '#/definitions/PartyFilter_organizationTypeList'
      organizationSubTypeList:
        $ref: '#/definitions/PartyFilter_organizationSubTypeList'
      contactList:
        $ref: '#/definitions/InvestmentParty_investmentContactList'
      partyDateCreatedDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
      partyCreatedByList:
        $ref: '#/definitions/CredentialGroupFilter_userIdList'
      partyDateModifiedDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
      partyModifiedByList:
        $ref: '#/definitions/CredentialGroupFilter_userIdList'
      partyDateDeletedDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
      accountIdentificationList:
        $ref: '#/definitions/AccountFilter_accountIdentificationList'
    description: 'The list of filter options for services requesting party data.  The options can be used in combination or by themselves. It is up to the data source to either return or affect the data requested or return a standard error identifying why the request was rejected. '
  PartyMessageDelete:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      partyFilter:
        $ref: '#/definitions/PartyFilter'
      partyList:
        $ref: '#/definitions/PartyList'
    description: Delete definition for PartyMessage
  PartyMessageGet:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      partyFilter:
        $ref: '#/definitions/PartyFilter'
    description: Get definition for PartyMessage
  PartyMessagePost:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      partyList:
        $ref: '#/definitions/PartyList'
    description: Post definition for PartyMessage
  PartyMessagePut:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      partyFilter:
        $ref: '#/definitions/PartyFilter'
      partyList:
        $ref: '#/definitions/PartyList'
    description: Put definition for PartyMessage
  PartyMessageResponse:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      partyList:
        $ref: '#/definitions/PartyList'
    description: Response definition for PartyMessage
  Permission:
    type: object
    properties:
      actor:
        $ref: '#/definitions/AccessProfile_actor'
      action:
        type: string
        description: "The feature that the user is permitted to use, or prevented from using, and is extensible using the \"custom:\" prefix. CUFX-compatible client may ignore unrecognized extended actions. "
      resource:
        $ref: '#/definitions/Permission_resource'
      maxLimits:
        $ref: '#/definitions/Permission_maxLimits'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
  PermissionList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      permission:
        type: array
        description: 'An action the actor is permitted to perform. '
        items:
          $ref: '#/definitions/Permission'
  PermissionListFilter:
    type: object
    properties:
      actorList:
        $ref: '#/definitions/AccessProfileFilter_actorList'
      actors:
        type: array
        description: "The users, parties, or other authenticated entities to search for. This implementation is deprecated. Please use actorList. "
        items:
          $ref: '#/definitions/Actor'
      actionList:
        type: string
        description: "The feature that the user is permitted to use, or prevented from using, and is extensible using the \"custom:\" prefix. CUFX-compatible client may ignore unrecognized extended actions. "
      resources:
        $ref: '#/definitions/PermissionListFilter_resources'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
  PermissionListMessageDelete:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      permissionListFilter:
        $ref: '#/definitions/PermissionListFilter'
      permissionList:
        $ref: '#/definitions/PermissionList'
    description: Delete definition for PermissionListMessage
  PermissionListMessageGet:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      permissionListFilter:
        $ref: '#/definitions/PermissionListFilter'
    description: Get definition for PermissionListMessage
  PermissionListMessagePost:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      permissionList:
        $ref: '#/definitions/PermissionList'
    description: Post definition for PermissionListMessage
  PermissionListMessagePut:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      permissionListFilter:
        $ref: '#/definitions/PermissionListFilter'
      permissionList:
        $ref: '#/definitions/PermissionList'
    description: Put definition for PermissionListMessage
  PermissionListMessageResponse:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      permissionList:
        $ref: '#/definitions/PermissionList'
    description: Response definition for PermissionListMessage
  Preference:
    type: object
    properties:
      preferenceId:
        type: string
        description: "Unique identifier for the preference.  This is not provided as an input, but as an output after the preference has been created. "
      partyIdList:
        $ref: '#/definitions/Account_partyIdList'
      relationshipIdList:
        $ref: '#/definitions/AccountFilter_relationshipIdList'
      accountIdList:
        $ref: '#/definitions/AccountFilter_accountIdList'
      cardIdList:
        $ref: '#/definitions/CardFilter_cardIdList'
      contactIdList:
        $ref: '#/definitions/Activity_activityRelatedTo_contactIdList'
      deliveryChannel:
        type: string
        description: "When a person calls in or walks up to a teller, sometimes they are asked for a codeword to verify their identity. "
        enum:
        - LiveSupport
        - ATM
        - Email
        - IVR
        - Kiosk
        - Mail
        - Mobile
        - OnlineBanking
        - Other
        - Phone
        - SMS
      preferenceType:
        type: string
        description: "Type of preference.  Additions to this list can be submitted to the CUFX committee. Whether the member has opted in to receive coverage of overdrawn accounts (look at status to see if it is Active), so that the FI pays the overdrawn account to a certain limit. If member has opted in and there is a member-requested total courtesy payment limit, look at that value. See sub type for specific type of EAlert and how to interpret the value and other preference fields. Determines if party(ies) wishes to receive eStatements. If value is True then they receive an eStatement.  If value is False or record does not exist, they do not receive eStatements. See the EAlertSubType StatementAvailable to determine if party wants to be alerted when statement is available. Determines if party(ies) wishes to receive eTaxForms or paper tax forms. If value is True then they receive an eTaxForm.  If value is False or record does not exist, they do not receive eTaxForms. See the EAlertSubType TaxFormAvailable to determine if party wants to be alerted when tax form is available. Determines if party(ies) wishes to receive eNotices or paper notices. If value is True then they receive an eNotice.  If value is False or record does not exist, they do not receive eNotices. Determines if party(ies) wishes to receive eReceipts or paper receipts. If value is True then they receive an eReceipt.  If value is False or record does not exist, they do not receive eReceipts. Determines if party(ies) wishes to be enrolled in text banking. If value is True then they are enrolled.  If value is False or record does not exist, they are not enrolled. Determines if party(ies) wishes to receive the newsletter (i.e. opted-in or -out). No sub types apply. Value is set to True or False depending upon preference.  False is assumed if not present. If this preference is present and active, a Newsletter can be sent when available. Determines how the party, if specified on relationships, cards, or accounts, would like to communicated to. Value would be boolean True if they want to be communicated to for general operation changes, such as new branch openings, outages, etc.  False can be specified but it is also assumed if not present.  No subTypes apply. The contact ID related to this preference is the specific contact that should be used for communicating to the party. If this preference is present and active, communication should go to this contact point specified. Determines if party on specified relationships, cards, or accounts would like to receive marketing material. Value would be boolean True if they want marketing material or false if party has opted out of marketing material. False can be specified, but it is assumed if not present.  No subTypes apply. The contact ID related to this preference is the specific contact that should be used for communicating to the party. If this preference is present and active, communication should go to this contact point specified. The value contains a textual description as to when the party prefers to be contacted.  No sub types apply. The preferred language with which the party(ies) wishes to communicate.  No sub types apply. Value values are IANA â€“ language codes. http://www.iana.org/assignments/language-subtag-registry http://www.w3.org/International/questions/qa-lang-2or3.en.php If this type is specified and the value is not present, the value will assumed to be equal to en-us unless the value field is specified. If this type is not specified, then en-us (US English) is assumed. The website stylesheet preferred is contained in the value field.  No sub types apply. The mobile stylesheet preferred is contained in the value field.  No sub types apply. See sub type for the specific type of email contact format that should be used. A preference associated to the amount of time a session remains active. The value field holds the number of seconds that a session stays active. A preference associated to widgets being displayed within a web site, mobile, etc. See the WidgetSubType for specifics on displaying the widget within the delivery channel. Determines if party(ies) wishes to receive paper statements would typically be used in conjunction with eStatements option if party(ies) would like to receive both paper and eStatements. If value is True then they receive paper statements. If value is False or record does not exist, they do not receive paper statements, and have opted to receive eStatements. Determines if party(ies) wishes to be enrolled in member-to-member transfers within the same financial institution. If value is True then they are enrolled.  If value is False or record does not exist, they are not enrolled. Determines if party(ies) wishes to be enrolled in person-to-person transfers/payments across financial institutions. If value is True then they are enrolled.  If value is False or record does not exist, they are not enrolled. The value contains information that can be interpreted by the end points.  The data to drive the preference is most likely in customData name/value pairs. Determines if party(ies) wishes to stop or inhibit solicitations. If value is True then solicitation is prohibited.  If value is False or record does not exist then solicitation activity can occur. "
        enum:
        - CourtesyPayment
        - EAlert
        - EStatement
        - ETaxForms
        - ENotice
        - EReceipt
        - EnrolledInTextBanking
        - Newsletter
        - Communication
        - Marketing
        - ContactHours
        - Language
        - WebsiteFormatStylesheet
        - MobileSiteFormatStylesheet
        - EmailFormat
        - Timeout
        - Widget
        - PaperStatement
        - M2MTransfersEnabled
        - P2PTransfersEnabled
        - Other
        - NoSolicitation
      subType:
        $ref: '#/definitions/Preference_subType'
      lastChangedDateTime:
        type: string
        format: datetime
        description: 'Date that the preference was last changed.  Typically read-only. The date/time should be ISO 8601 UTC format. yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      preferenceStatus:
        type: string
        description: "The preference status can either be a Template, Inactive or Active. If Inactive then the preference record should be ignored.  This is helpful for retaining values if a preference is temporarily inactivated but the current values should be retained for future use. If Template, then this indicates that the preference is available for consumption by all parties. Once the party creates the preference, it would be saved with the account information, etc. to relate it to the accounts, parties, relationships, and cards appropriate for the party. If Active, then preference should be used when determining actions to take for the party, relationship, etc. If Inactive, then the preference record should be ignored.  This is helpful for retaining values if a preference is temporarily inactivated but the current values should be retained for future use. "
        enum:
        - Template
        - Active
        - Inactive
      value:
        type: string
        description: "The value specified for the preference.  This can either be a numeric, boolean, date/time or text value depending upon the type and sub type of the preference. For preference status of Template, this value represents the default value if provided. "
      valueDataType:
        type: string
        description: 'Data type values. '
        enum:
        - string
        - integer
        - date
        - dateTime
        - boolean
        - long
        - double
        - float
        - decimal
      preferenceFrequency:
        type: string
        description: 'The preference frequency rate. '
        enum:
        - AmortizedSchedule
        - Annual
        - AtMaturity
        - Bimonthly
        - Biweekly
        - BiweeklySkipFirst
        - BiweeklySkipLast
        - Daily
        - EventTrigger
        - Hourly
        - Immediate
        - Monthly
        - None
        - OneTime
        - Other
        - PerUse
        - Quarterly
        - SemiAnnual
        - SemiMonthly
        - Triannual
        - Weekly
        - WeeklySkipFirst
        - WeeklySkipLast
        - XDays
        - XMonths
        - XYears
      alertCustomText:
        type: string
        description: "When type is EAlert and subType is ScheduledMessage, additional custom text to send in an alert. For preference status of Template, this value represents the default value if provided. "
      whereToContactIdList:
        $ref: '#/definitions/Activity_activityRelatedTo_contactIdList'
      actionableAlert:
        type: boolean
        description: "Valid only for preference records of EAlert type. Determines if the alert, when sent to the party, is expecting a response back from the party. For example, if a party receives an alert that states that their loan is overdue, it could ask a question that the user needs to respond to in order to make the payment.  An additional example might be if a transaction went through that appears to be fraudulent, the alert could expect a response back from the party to allow the posting to occur. This field is typically not managed by the party but is set by the system. "
      widgetName:
        type: string
        description: "When the preference is of type Widget, this pulls all the preferences related to a specific widget together for the party on the accounts, etc. "
      customData:
        $ref: '#/definitions/AccessProfile_customData'
      accountIdentificationList:
        $ref: '#/definitions/AccountFilter_accountIdentificationList'
    description: "The preference object defines all the fields necessary to define a person, business or vendor related to a financial institution. The ID uniquely identifies the party within the financial institution. "
  PreferenceId:
    type: string
    description: "Unique identifier for the preference.  This is not provided as an input, but as an output after the preference has been created. "
  PreferenceList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      preference:
        type: array
        description: 'Collection of fields for a preference. '
        items:
          $ref: '#/definitions/Preference'
    description: "The parties collection/array contains all the parties, for instance, that the credential set is authorized to access at the Institution based on applied filters. "
  PreferenceSetting:
    type: object
    properties:
      preferenceId:
        type: string
        description: "Unique identifier for the preference.  This is not provided as an input, but as an output after the preference has been created. "
      deliveryChannel:
        type: string
        description: "When a person calls in or walks up to a teller, sometimes they are asked for a codeword to verify their identity. "
        enum:
        - LiveSupport
        - ATM
        - Email
        - IVR
        - Kiosk
        - Mail
        - Mobile
        - OnlineBanking
        - Other
        - Phone
        - SMS
      preferenceType:
        type: string
        description: "Type of preference.  Additions to this list can be submitted to the CUFX committee. Whether the member has opted in to receive coverage of overdrawn accounts (look at status to see if it is Active), so that the FI pays the overdrawn account to a certain limit. If member has opted in and there is a member-requested total courtesy payment limit, look at that value. See sub type for specific type of EAlert and how to interpret the value and other preference fields. Determines if party(ies) wishes to receive eStatements. If value is True then they receive an eStatement.  If value is False or record does not exist, they do not receive eStatements. See the EAlertSubType StatementAvailable to determine if party wants to be alerted when statement is available. Determines if party(ies) wishes to receive eTaxForms or paper tax forms. If value is True then they receive an eTaxForm.  If value is False or record does not exist, they do not receive eTaxForms. See the EAlertSubType TaxFormAvailable to determine if party wants to be alerted when tax form is available. Determines if party(ies) wishes to receive eNotices or paper notices. If value is True then they receive an eNotice.  If value is False or record does not exist, they do not receive eNotices. Determines if party(ies) wishes to receive eReceipts or paper receipts. If value is True then they receive an eReceipt.  If value is False or record does not exist, they do not receive eReceipts. Determines if party(ies) wishes to be enrolled in text banking. If value is True then they are enrolled.  If value is False or record does not exist, they are not enrolled. Determines if party(ies) wishes to receive the newsletter (i.e. opted-in or -out). No sub types apply. Value is set to True or False depending upon preference.  False is assumed if not present. If this preference is present and active, a Newsletter can be sent when available. Determines how the party, if specified on relationships, cards, or accounts, would like to communicated to. Value would be boolean True if they want to be communicated to for general operation changes, such as new branch openings, outages, etc.  False can be specified but it is also assumed if not present.  No subTypes apply. The contact ID related to this preference is the specific contact that should be used for communicating to the party. If this preference is present and active, communication should go to this contact point specified. Determines if party on specified relationships, cards, or accounts would like to receive marketing material. Value would be boolean True if they want marketing material or false if party has opted out of marketing material. False can be specified, but it is assumed if not present.  No subTypes apply. The contact ID related to this preference is the specific contact that should be used for communicating to the party. If this preference is present and active, communication should go to this contact point specified. The value contains a textual description as to when the party prefers to be contacted.  No sub types apply. The preferred language with which the party(ies) wishes to communicate.  No sub types apply. Value values are IANA â€“ language codes. http://www.iana.org/assignments/language-subtag-registry http://www.w3.org/International/questions/qa-lang-2or3.en.php If this type is specified and the value is not present, the value will assumed to be equal to en-us unless the value field is specified. If this type is not specified, then en-us (US English) is assumed. The website stylesheet preferred is contained in the value field.  No sub types apply. The mobile stylesheet preferred is contained in the value field.  No sub types apply. See sub type for the specific type of email contact format that should be used. A preference associated to the amount of time a session remains active. The value field holds the number of seconds that a session stays active. A preference associated to widgets being displayed within a web site, mobile, etc. See the WidgetSubType for specifics on displaying the widget within the delivery channel. Determines if party(ies) wishes to receive paper statements would typically be used in conjunction with eStatements option if party(ies) would like to receive both paper and eStatements. If value is True then they receive paper statements. If value is False or record does not exist, they do not receive paper statements, and have opted to receive eStatements. Determines if party(ies) wishes to be enrolled in member-to-member transfers within the same financial institution. If value is True then they are enrolled.  If value is False or record does not exist, they are not enrolled. Determines if party(ies) wishes to be enrolled in person-to-person transfers/payments across financial institutions. If value is True then they are enrolled.  If value is False or record does not exist, they are not enrolled. The value contains information that can be interpreted by the end points.  The data to drive the preference is most likely in customData name/value pairs. Determines if party(ies) wishes to stop or inhibit solicitations. If value is True then solicitation is prohibited.  If value is False or record does not exist then solicitation activity can occur. "
        enum:
        - CourtesyPayment
        - EAlert
        - EStatement
        - ETaxForms
        - ENotice
        - EReceipt
        - EnrolledInTextBanking
        - Newsletter
        - Communication
        - Marketing
        - ContactHours
        - Language
        - WebsiteFormatStylesheet
        - MobileSiteFormatStylesheet
        - EmailFormat
        - Timeout
        - Widget
        - PaperStatement
        - M2MTransfersEnabled
        - P2PTransfersEnabled
        - Other
        - NoSolicitation
      preferenceSettingSubType:
        $ref: '#/definitions/Preference_subType'
      preferenceValue:
        type: string
        description: "The value specified for the preference.  This can either be a numeric, boolean, date/time or text value depending upon the type and sub type of the preference. For preference status of Template, this value represents the default value if provided. "
      preferenceValueDataType:
        type: string
        description: 'Data type values. '
        enum:
        - string
        - integer
        - date
        - dateTime
        - boolean
        - long
        - double
        - float
        - decimal
      preferenceStatus:
        type: string
        description: "The preference status can either be a Template, Inactive or Active. If Inactive then the preference record should be ignored.  This is helpful for retaining values if a preference is temporarily inactivated but the current values should be retained for future use. If Template, then this indicates that the preference is available for consumption by all parties. Once the party creates the preference, it would be saved with the account information, etc. to relate it to the accounts, parties, relationships, and cards appropriate for the party. If Active, then preference should be used when determining actions to take for the party, relationship, etc. If Inactive, then the preference record should be ignored.  This is helpful for retaining values if a preference is temporarily inactivated but the current values should be retained for future use. "
        enum:
        - Template
        - Active
        - Inactive
      preferenceFrequency:
        type: string
        description: 'The preference frequency rate. '
        enum:
        - AmortizedSchedule
        - Annual
        - AtMaturity
        - Bimonthly
        - Biweekly
        - BiweeklySkipFirst
        - BiweeklySkipLast
        - Daily
        - EventTrigger
        - Hourly
        - Immediate
        - Monthly
        - None
        - OneTime
        - Other
        - PerUse
        - Quarterly
        - SemiAnnual
        - SemiMonthly
        - Triannual
        - Weekly
        - WeeklySkipFirst
        - WeeklySkipLast
        - XDays
        - XMonths
        - XYears
      alertCustomText:
        type: string
        description: "When type is EAlert and subType is ScheduledMessage, additional custom text to send in an alert. For preference status of Template, this value represents the default value if provided. "
      whereToContactIdList:
        $ref: '#/definitions/Activity_activityRelatedTo_contactIdList'
      actionableAlert:
        type: boolean
        description: "Valid only for preference records of EAlert type. Determines if the alert, when sent to the party, is expecting a response back from the party. For example, if a party receives an alert that states that their loan is overdue, it could ask a question that the user needs to respond to in order to make the payment.  An additional example might be if a transaction went through that appears to be fraudulent, the alert could expect a response back from the party to allow the posting to occur. This field is typically not managed by the party but is set by the system. "
      widgetName:
        type: string
        description: "When the preference is of type Widget, this pulls all the preferences related to a specific widget together for the party on the accounts, etc. "
    description: 'The preference setting related to the object. '
  PreferenceStatus:
    type: string
    description: "The preference status can either be a Template, Inactive or Active. If Inactive then the preference record should be ignored.  This is helpful for retaining values if a preference is temporarily inactivated but the current values should be retained for future use. If Template, then this indicates that the preference is available for consumption by all parties. Once the party creates the preference, it would be saved with the account information, etc. to relate it to the accounts, parties, relationships, and cards appropriate for the party. If Active, then preference should be used when determining actions to take for the party, relationship, etc. If Inactive, then the preference record should be ignored.  This is helpful for retaining values if a preference is temporarily inactivated but the current values should be retained for future use. "
    enum:
    - Template
    - Active
    - Inactive
  PreferenceType:
    type: string
    description: "Type of preference.  Additions to this list can be submitted to the CUFX committee. Whether the member has opted in to receive coverage of overdrawn accounts (look at status to see if it is Active), so that the FI pays the overdrawn account to a certain limit. If member has opted in and there is a member-requested total courtesy payment limit, look at that value. See sub type for specific type of EAlert and how to interpret the value and other preference fields. Determines if party(ies) wishes to receive eStatements. If value is True then they receive an eStatement.  If value is False or record does not exist, they do not receive eStatements. See the EAlertSubType StatementAvailable to determine if party wants to be alerted when statement is available. Determines if party(ies) wishes to receive eTaxForms or paper tax forms. If value is True then they receive an eTaxForm.  If value is False or record does not exist, they do not receive eTaxForms. See the EAlertSubType TaxFormAvailable to determine if party wants to be alerted when tax form is available. Determines if party(ies) wishes to receive eNotices or paper notices. If value is True then they receive an eNotice.  If value is False or record does not exist, they do not receive eNotices. Determines if party(ies) wishes to receive eReceipts or paper receipts. If value is True then they receive an eReceipt.  If value is False or record does not exist, they do not receive eReceipts. Determines if party(ies) wishes to be enrolled in text banking. If value is True then they are enrolled.  If value is False or record does not exist, they are not enrolled. Determines if party(ies) wishes to receive the newsletter (i.e. opted-in or -out). No sub types apply. Value is set to True or False depending upon preference.  False is assumed if not present. If this preference is present and active, a Newsletter can be sent when available. Determines how the party, if specified on relationships, cards, or accounts, would like to communicated to. Value would be boolean True if they want to be communicated to for general operation changes, such as new branch openings, outages, etc.  False can be specified but it is also assumed if not present.  No subTypes apply. The contact ID related to this preference is the specific contact that should be used for communicating to the party. If this preference is present and active, communication should go to this contact point specified. Determines if party on specified relationships, cards, or accounts would like to receive marketing material. Value would be boolean True if they want marketing material or false if party has opted out of marketing material. False can be specified, but it is assumed if not present.  No subTypes apply. The contact ID related to this preference is the specific contact that should be used for communicating to the party. If this preference is present and active, communication should go to this contact point specified. The value contains a textual description as to when the party prefers to be contacted.  No sub types apply. The preferred language with which the party(ies) wishes to communicate.  No sub types apply. Value values are IANA â€“ language codes. http://www.iana.org/assignments/language-subtag-registry http://www.w3.org/International/questions/qa-lang-2or3.en.php If this type is specified and the value is not present, the value will assumed to be equal to en-us unless the value field is specified. If this type is not specified, then en-us (US English) is assumed. The website stylesheet preferred is contained in the value field.  No sub types apply. The mobile stylesheet preferred is contained in the value field.  No sub types apply. See sub type for the specific type of email contact format that should be used. A preference associated to the amount of time a session remains active. The value field holds the number of seconds that a session stays active. A preference associated to widgets being displayed within a web site, mobile, etc. See the WidgetSubType for specifics on displaying the widget within the delivery channel. Determines if party(ies) wishes to receive paper statements would typically be used in conjunction with eStatements option if party(ies) would like to receive both paper and eStatements. If value is True then they receive paper statements. If value is False or record does not exist, they do not receive paper statements, and have opted to receive eStatements. Determines if party(ies) wishes to be enrolled in member-to-member transfers within the same financial institution. If value is True then they are enrolled.  If value is False or record does not exist, they are not enrolled. Determines if party(ies) wishes to be enrolled in person-to-person transfers/payments across financial institutions. If value is True then they are enrolled.  If value is False or record does not exist, they are not enrolled. The value contains information that can be interpreted by the end points.  The data to drive the preference is most likely in customData name/value pairs. Determines if party(ies) wishes to stop or inhibit solicitations. If value is True then solicitation is prohibited.  If value is False or record does not exist then solicitation activity can occur. "
    enum:
    - CourtesyPayment
    - EAlert
    - EStatement
    - ETaxForms
    - ENotice
    - EReceipt
    - EnrolledInTextBanking
    - Newsletter
    - Communication
    - Marketing
    - ContactHours
    - Language
    - WebsiteFormatStylesheet
    - MobileSiteFormatStylesheet
    - EmailFormat
    - Timeout
    - Widget
    - PaperStatement
    - M2MTransfersEnabled
    - P2PTransfersEnabled
    - Other
    - NoSolicitation
  SubType:
    type: object
    properties:
      eAlertSubType:
        type: string
        description: "An address change was made on a related account (either through party, relationship, card or account). If this alert is present and active, it should be acted upon if event occurs.  The value field is ignored. A transaction or authorization on a related account (either through party, relationship, card or account) caused a loan balance to approach the credit limit by the amount in the value field. For example if value field was 100.00 and credit limit was 500.00 and the transaction or authorization changed the balance from 350.00 to 410.00 an alert would occur. An ATM withdrawal on a related account (either through party, relationship, card or account) exceeded the amount in the value field. An ATM Deposit on a related account (either through party, relationship, card or account) exceeded the amount in the value field. An automated transfer on a related account (either through party, relationship, card or account) exceeded the amount in the value field. A balance on a related account (either through party, relationship, card or account) is below the amount in the value field. A balance on a related account (either through party, relationship, card or account) exceeded the amount in the value field. A balance on a related account (either through party, relationship, card or account) is on a regular schedule for notification. As defined by preferenceFrequency. A balance on a related account (either through party, relationship, card or account) had its value modified. A bill pay payment on a related account (either through party, relationship, card or account) exceeded the amount in the value field. A bill pay payee was added on a related account (either through party, relationship, card or account). If this alert is present and active, it should be acted upon if event occurs.  The value field is ignored. A bill pay payment was rejected on a related account (either through party, relationship, card or account). If this alert is present and active, it should be acted upon if event occurs.  The value field is ignored. A bill pay payment was paid on a related account (either through party, relationship, card or account). If this alert is present and active, it should be acted upon if event occurs.  The value field is ignored. A check number was cleared within a range of checks on a related account (either through party, relationship, card or account).  The value has the range of checks with the bottom and top checks separated by a dash (-) that are being monitored. A check withdrawal on a related account (either through party, relationship, card or account) exceeded the amount in the value field. A counter withdrawal on a related account (either through party, relationship, card or account) exceeded the amount in the value field. A courtesy payment occurring on a related account (either through party, relationship, card or account) exceeded the amount in the value field.  Typically the value will be 0.00 because the user may wish to be alerted on any courtesy payment, but the model is flexible in that it can be made be any value. A courtesy payment occurring on a related account (either through party, relationship, card or account) is below the amount in the value field.  This is useful for parties that are trying to manage smaller payments that are causing courtesy payments. A credit card authorization was declined on a related account (either through party, relationship, card or account). Typically the value field will be zero which will cause all declines to be alerted. A credit card authorization on a related account (either through party, relationship, card or account) exceeded the amount in the value field. A credit card authorization occurred at a fuel dispenser on a related account (either through party, relationship, card or account) exceeded the amount in the value field.  Typically the value will be zero which will cause an alert for all fuel dispensing attempts. An international credit card authorization on a related account (either through party, relationship, card or account) exceeded the amount in the value field. A credit card online authorization on a related account (either through party, relationship, card or account) exceeded the amount in the value field. An out-of-state credit card authorization on a related account (either through party, relationship, card or account) exceeded the amount in the value field. Typically the value will be zero which will cause all out-of-state authorizations to be alerted. A credit card reversal/refund/credit on a related account (either through party, relationship, card or account) exceeded the amount in the value field. A debit card authorization was declined on a related account (either through party, relationship, card or account). Typically the value will be zero which will cause all declines to be alerted. A debit card authorization on a related account (either through party, relationship, card or account) exceeded the amount in the value field. A debit card authorization occurred at a fuel dispenser on a related account (either through party, relationship, card or account) exceeded the amount in the value field. Typically the value will be zero which will cause all fuel dispensing attempts to be alerted. An international debit card authorization on a related account (either through party, relationship, card or account) exceeded the amount in the value field. A debit card online authorization on a related account (either through party, relationship, card or account) exceeded the amount in the value field. An out-of-state debit card authorization on a related account (either through party, relationship, card or account) exceeded the amount in the value field. Typically the value will be zero which will cause all out-of-state authorizations to be alerted. A debit card reversal/refund or credit on a related account (either through party, relationship, card or account) exceeded the amount in the value field. A deposit on a related account (either through party, relationship, card or account) was returned to the entity that originated the deposit. If this alert is present and active, it should be acted upon if event occurs.  The value field is ignored. A deposit on a related account (either through party, relationship, card or account) exceeded the amount in the value field. A direct deposit on a related account (either through party, relationship, card or account) exceeded the amount in the value field. A direct deposit on a related account (either through party, relationship, card or account) is below the amount in the value field. An email address change was made on a related account (either through party, relationship, card or account). If this alert is present and active, it should be acted upon if event occurs.  The value field is ignored. An external transfer to another FI (not a bill pay or wire transfer) on a related account (either through party, relationship, card or account) exceeded the amount in the value field. Potential fraud was found on a related account (either through party, relationship, card or account). If this alert is present and active, it should be acted upon if event occurs.  The value field is ignored. An incoming wire on a related account (either through party, relationship, card or account) exceeded the amount in the value field. Insufficient funds were available to pay a check on a related account (either through party, relationship, card or account). If this alert is present and active, it should be acted upon if event occurs.  The value field is ignored. A hold that was placed on a related account (either through party, relationship, card or account) exceeded the amount in the value field. A hold that was placed on a related account (either through party, relationship, card or account) and exceeded the amount in the value field was subsequently removed. A phone number change was made on a related account (either through party, relationship, card or account). If this alert is present and active, it should be acted upon if event occurs.  The value field is ignored. A loan payment is currently due on a related account (either through party, relationship, card or account). A loan payment is overdue on a related account (either through party, relationship, card or account). by the number of days in the value field. Optionally with frequency of notification. A login through a remote channel was successful on a related account (either through party, relationship, card or account). If this alert is present and active, it should be acted upon if event occurs.  The value field is ignored. A login through a remote channel was attempted but failed on a related account (either through party, relationship, card or account). If this alert is present and active, it should be acted upon if event occurs.  The value field is ignored. A name was changed on a related account (either through party, relationship, card or account). If this alert is present and active, it should be acted upon if event occurs.  The value field is ignored. A name was changed on a related account (either through party, relationship, card or account). If this alert is present and active, it should be acted upon if event occurs.  The value field is ignored. A notification that the CU has sent a secure message to the party. The value field is ignored. An outgoing wire on a related account (either through party, relationship, card or account) exceeded the amount in the value field. Password reset was attempted and was successful on a related account (either through party, relationship, card or account). If this alert is present and active, it should be acted upon if event occurs.  The value field is ignored. A password reset was attempted but failed on a related account (either through party, relationship, card or account). If this alert is present and active, it should be acted upon if event occurs.  The value field is ignored. A payment is currently due on a related account (either through party, relationship, card or account). A payment is due on a related account (either through party, relationship, card or account) within the number of days in the value field. A personal identification number (PIN; typically 4 digits) was changed on a related account (either through party, relationship, card or account). If this alert is present and active, it should be acted upon if event occurrs.  The value field is ignored. A preference value was changed on a related account (either through party, relationship, card or account). If this alert is present and active, it should be acted upon if event occurrs.  The value field is ignored. The user set up a message to be sent (either through party, relationship, card or account). The value in this EAlert sub type is a date/time for the message to be sent.  This can be used for scheduling birthday reminders, etc. by the user.  The text to be sent is in the alertCustomText field. A scheduled payment failed on a related account (either through party, relationship, card or account). If this alert is present and active, it should be acted upon if event occurs.  The value field is ignored. A scheduled payment was stopped on a related account (either through party, relationship, card or account). If this alert is present and active, it should be acted upon if event occurs.  The value field is ignored. A specific check number was cleared on a related account (either through party, relationship, card or account). The value has the specific check number that is being monitored for clearance. An SSN was changed on a related account (either through party, relationship, card or account). If this alert is present and active, it should be acted upon if event occurs.  The value field is ignored. Party wishes to be contacted using the associated contact channel when there are system issues such as scheduled outages, unexpected outages, etc. If this alert is present and active, it should be acted upon if event occurs.  The value field is ignored. A statement is available on a related account (either through party, relationship, card or account). If this alert is present and active, it should be acted upon if event occurs.  The value field is ignored. A transaction on a related account (either through party, relationship, card or account) is below the amount in the value field. A transaction on a related account (either through party, relationship, card or account) exceeded the amount in the value field. A tax form is available on a related account (either through party, relationship, card or account). If this alert is present and active, it should be acted upon if event occurs.  The value field is ignored. "
        enum:
        - AddressChanged
        - ApproachingCreditLimit
        - AtmWithdrawalExceeds
        - AtmDepositExceeds
        - AutomatedTransferExceeds
        - BalanceBelow
        - BalanceExceeds
        - BalanceScheduled
        - BalanceUpdated
        - BillPayExceeds
        - BillPayPayeeAdded
        - BillPayPaymentRejected
        - BillPayPaymentPaid
        - CheckNumberWithinRangeHasCleared
        - CheckWithdrawalExceeds
        - CounterWithdrawalExceeds
        - CourtesyPayExceeds
        - CourtesyPayBelow
        - CreditCardAuthorizationDeclined
        - CreditCardAuthorizationExceeds
        - CreditCardFuelDispenserAuthorizationExceeds
        - CreditCardInternationalAuthorizationExceeds
        - CreditCardOnlineAuthorizationExceeds
        - CreditCardOutOfStateAuthorizationExceeds
        - CreditCardRefundExceeds
        - DebitCardAuthorizationDeclined
        - DebitCardAuthorizationExceeds
        - DebitCardFuelDispenserAuthorizationExceeds
        - DebitCardInternationalAuthorizationExceeds
        - DebitCardOnlineAuthorizationExceeds
        - DebitCardOutOfStateAuthorizationExceeds
        - DebitCardRefundExceeds
        - DepositedFundsHaveBeenReturned
        - DepositExceeds
        - DirectDepositExceeds
        - DirectDepositBelow
        - EmailAddressChanged
        - ExternalTransferExceeds
        - PotentialFraud
        - IncomingWireExceeds
        - InsufficientFundsToPayCheck
        - HoldPlacedOnAccountExceeded
        - HoldThatExceededWasRemovedFromAccount
        - PhoneNumberChanged
        - LoanPaymentDue
        - LoanPaymentOverDue
        - LoginOccurred
        - LoginFailed
        - NameChangeAttempted
        - NameChangeOccurred
        - NotifySecureMessage
        - OutgoingWireExceeds
        - PasswordResetSuccess
        - PasswordResetFailure
        - PaymentDue
        - PaymentDueInXDays
        - PinChanged
        - PreferenceChanged
        - ScheduledMessage
        - ScheduledPaymentHasFailed
        - ScheduledPaymentHasStopped
        - SpecificCheckNumberHasCleared
        - SsnChanged
        - SystemNotification
        - StatementAvailable
        - TransactionBelow
        - TransactionExceeds
        - TaxFormAvailable
      emailFormatSubType:
        type: string
        description: 'Any emails should be forwarded using html formats. Any emails should be forwarded using text formats. '
        enum:
        - Html
        - Text
      widgetSubType:
        type: string
        description: "What is the display status of the widget. The value field will contain one of of several values. Hide - party has selected to hide this widget from view completely.  Up to the end user application on how a party might unhide a widget. AutoShow - party has selected to hide this widget unless for example the cursor is moved over the area of the screen that reveals the widget.  Order of widgets in autoshow area is controlled by DisplayOrder value.  Up to application on how to hide the widget. AlwaysOnTop - Display this widget above all other widgets. Docked - Display this widget in an area of the screen selected by the party but controlled by the application. Order of widgets in docked area is controlled by DisplayOrder value. The order in which the party wishes to display the widget versus other widgets selected by the party. The order is stored in the value field. The value will be an non-negative integer between 0 and the total number of widgets available for display. If value is not available/specified, the widget display order is up to the application to determine. The value holds the party selected string of characters that represent the keyboard characters to concurrently press to activate a widget. The value holds the name of the page on which the widget should display.  If widget should display on multiple pages, each will require an additional preference instance. "
        enum:
        - DisplayStatus
        - DisplayOrder
        - ShortCutKey
        - DisplayPage
    description: "Sub type of preference if applicable.  Additions to this list can be submitted to the CUFX committee.  Intended choice - Due to cross language serialization issues the choice construct has been removed. It is the responsibility of the implementer to add programmatic logic for this complex type to detect, handle and or error when population of more than one element is present. "
  WidgetName:
    type: string
    description: "When the preference is of type Widget, this pulls all the preferences related to a specific widget together for the party on the accounts, etc. "
  PreferenceFilter:
    type: object
    properties:
      preferenceIdList:
        $ref: '#/definitions/PreferenceFilter_preferenceIdList'
      partyIdList:
        $ref: '#/definitions/Account_partyIdList'
      relationshipIdList:
        $ref: '#/definitions/AccountFilter_relationshipIdList'
      accountIdList:
        $ref: '#/definitions/AccountFilter_accountIdList'
      accountStatusList:
        $ref: '#/definitions/AccountFilter_accountStatusList'
      cardIdList:
        $ref: '#/definitions/CardFilter_cardIdList'
      contactIdList:
        $ref: '#/definitions/Activity_activityRelatedTo_contactIdList'
      preferenceTypeList:
        $ref: '#/definitions/PreferenceFilter_preferenceTypeList'
      preferenceSubTypeList:
        $ref: '#/definitions/PreferenceFilter_preferenceSubTypeList'
      preferenceStatusList:
        $ref: '#/definitions/PreferenceFilter_preferenceStatusList'
      widgetNameList:
        $ref: '#/definitions/PreferenceFilter_widgetNameList'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
      accountIdentificationList:
        $ref: '#/definitions/AccountFilter_accountIdentificationList'
    description: 'The list of filter options for services requesting preference data.  The options can be used in combination or by themselves.  It is up to the data source to either return or affect the data requested or return a standard error identifying why the request was rejected. '
  PreferenceMessageDelete:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      preferenceFilter:
        $ref: '#/definitions/PreferenceFilter'
      preferenceList:
        $ref: '#/definitions/PreferenceList'
    description: Delete definition for PreferenceMessage
  PreferenceMessageGet:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      preferenceFilter:
        $ref: '#/definitions/PreferenceFilter'
    description: Get definition for PreferenceMessage
  PreferenceMessagePost:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      preferenceList:
        $ref: '#/definitions/PreferenceList'
    description: Post definition for PreferenceMessage
  PreferenceMessagePut:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      preferenceFilter:
        $ref: '#/definitions/PreferenceFilter'
      preferenceList:
        $ref: '#/definitions/PreferenceList'
    description: Put definition for PreferenceMessage
  PreferenceMessageResponse:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      preferenceList:
        $ref: '#/definitions/PreferenceList'
    description: Response definition for PreferenceMessage
  InterestRate:
    type: object
    properties:
      interestRateId:
        type: string
        description: 'Unique identifier for the interest rate. '
      interestPointsRewardsProgram:
        type: boolean
        description: 'Indicates whether this interest rate is only paid if the product is part of a points rewards program. '
      introductoryRate:
        type: boolean
        description: 'Indicates whether this is an introductory/promotional rate for the product offering. '
      balanceConsolidationRate:
        type: boolean
        description: 'Indicates whether this is a balance consolidation rate for the product offering. Applicable to loans and lines of credit. '
      riskRate:
        type: boolean
        description: 'Indicates whether this is a risk-based rate for the product offering. '
      riskRateClassificationMinimum:
        type: string
        description: "If this is a risk-based rate for the product offering, this is the risk classification minimum requirement to acquire or maintain this rate. For example: C Paper "
      riskRateClassificationMaximum:
        type: string
        description: "If this is a risk-based rate for the product offering, this is the risk classification maximum requirement to acquire or maintain this rate. For example: A Paper. "
      interestRateDescription:
        type: string
        description: 'Description for the interest rate. '
      interestRateCriteria:
        type: string
        description: "This is free form description of the criteria as to when the interest rate applies. This is not used for processing, but as additional documentation beyond the interest rate description field. "
      minimumBalance:
        $ref: '#/definitions/Account_accountEscheatAmount'
      maximumBalance:
        $ref: '#/definitions/Account_accountEscheatAmount'
      term:
        type: string
        format: duration
        description: "The term needed to qualify for rate, using ISO 8601 duration format: P3M is three months, P90D is ninety days. "
      effectiveDateTime:
        type: string
        format: datetime
        description: "<xs:annotation> <xs:documentation> The date/time that the interest rate becomes effective. If this value is not specified or is in the past, then the interest rate is currently effective, unless the expiration date/time has also passed. If this value is in the future, then the interest rate is not effective. "
      expirationDateTime:
        type: string
        format: datetime
        description: "<xs:annotation> <xs:documentation> The date/time that the interest rate becomes ineffective. If this value is not specified or is in the future, then the interest rate is currently effective, unless the effective date/time is also in the future. If this value is in the past, then the interest rate is not effective. "
      interestRate:
        type: number
        description: 'Interest rate charged for a loan product or earned by a deposit or investment product. Determines the amount charged each time period based on the period. '
      annualPercentageRate:
        type: number
        format: decimal
        description: "Calculated annual percentage rate (APR). Is the interest rate for a whole year (annualized). Value is formatted as a percentile. A passed value of 4.5 is equivalent to 0.045 actual. 4.500 may be displayed as 4.500% or 4.5% depending on the user interface. Decimals available: 999.999 "
    description: 'Defines the interest rate fields for a product offering at the institution level. '
  ProductId:
    type: string
    description: 'Product ID is a unique identifier for the product. '
  ProductOffering:
    type: object
    properties:
      productId:
        type: string
        description: 'Product ID is a unique identifier for the product. '
      productType:
        type: string
        description: "Checking account, i.e., checks can be written against the account. Money market accounts can be included here or in money markets.  Its up to the institution. Savings and club accounts.  This can optionally include CDs, but its up to the institution. Auto loans, etc. Loans that are NOT lines of credit or credit cards. Loan behind the credit card.  Note the actual card information in the card object. Loan that is a line of credit but NOT a credit card. Loan that is made in exchange for taking title of property. Investment accounts such as brokerage and this can optionally include CDs and/or money markets, but its up to the institution. This account is a special type of checking account connected to a pre-paid card. Other account type. Loan that is made in installments. Loan is typically unsecured. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Installment. Loan that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Commercial. Line of Credit that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of CommercialLineOfCredit. A general ledger account of the financial institution. A loan account type that has not been prevously defined. This enumeration is considered deprecated. Recommend using account type loan and subAccount of OtherLoan. "
        enum:
        - Checking
        - Savings
        - Loan
        - CreditCard
        - LineOfCredit
        - Mortgage
        - Investment
        - PrePaidCard
        - Other
        - Installment
        - CommercialLoan
        - CommercialLineOfCredit
        - GeneralLedger
        - OtherLoan
      productSubType:
        type: string
        description: 'Product sub type identifies how the product will be identified in the back end system. '
      systemProductKeys:
        $ref: '#/definitions/AccessProfile_customData'
      description:
        type: string
        description: "Description of the product, i.e. Visa Classic, MasterCard Gold, Electronic Checking, New Auto, etc. "
      pointsRewardsProgram:
        type: boolean
        description: "If true, this product offering is part of a points rewards program. "
      interestRateList:
        $ref: '#/definitions/ProductOffering_interestRateList'
      brand:
        type: string
        description: "The company that sponsors the card (i.e. Visa, MasterCard, American Express, etc.). Only applies to card-based products. "
      customData:
        $ref: '#/definitions/AccessProfile_customData'
  ProductOfferingList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      productOffering:
        type: array
        description: 'Collection of fields that define a specific product offering at the institution level. '
        items:
          $ref: '#/definitions/ProductOffering'
    description: 'The product offering collection/array contains all the possible product types for an instance that the credential set is authorized to access at the institution based on applied filters. '
  ProductSubType:
    type: string
    description: 'Product sub type identifies how the product will be identified in the back end system. '
  ProductOfferingFilter:
    type: object
    properties:
      productIdList:
        $ref: '#/definitions/PermissionListFilter_resources_productIdList'
      productTypeList:
        $ref: '#/definitions/ApplicationFilter_productTypeList'
      productSubTypeList:
        $ref: '#/definitions/ProductOfferingFilter_productSubTypeList'
      introductoryRate:
        type: boolean
        description: 'This filters to include rates with this introductory/promotional boolean value. Does not filter based on introductory rate if omitted. '
      balanceConsolidationRate:
        type: boolean
        description: 'This filters to include rates with this balance consolidation boolean value. Does not filter based on introductory rate if omitted. '
      riskRate:
        type: boolean
        description: 'This filters to include rates with this risk-based boolean value. Does not filter based on introductory rate if omitted. '
      interestRateEffectiveDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
      interestRateExpirationDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
      minTerm:
        type: string
        format: duration
        description: "The minimum term that should be used when filtering for a term, using ISO 8601 duration format: P3M is three months, P90D is ninety days.  The value is assumed to be P0D (zero days) if omitted. "
      maxTerm:
        type: string
        format: duration
        description: "The maximum term that should be used when filtering for a term, using ISO 8601 duration format: P3M is three months, P90D is ninety days.  The value is assumed to be P0D (zero days) if omitted. "
      pointsRewardsProgram:
        type: boolean
        description: "If provided and true, only product offerings that are part of a points rewards program will be returned.  If provided and false, only product offerings that are NOT part of a points rewards program will be returned.  If not provided, then no filtering will occur based on the pointsRewardsProgram. "
      brand:
        type: string
        description: "If provided, only the product offerings that match the company that sponsors the card (i.e. Visa, MasterCard, American Express, etc.) will be returned.  If not provided, then no filtering by brand will occur. Only applies to credit and debit card product offerings. "
      riskRateClassification:
        type: string
        description: "If provided, it will only return risk interest rates where riskRateClassificationMinimum is below or equal to this provided value and the riskRateClassificationMaximum is above or equal to this value. "
      customData:
        $ref: '#/definitions/AccessProfile_customData'
    description: 'The list of filter options for services requesting data about product offerings.  The options can be used in combination or by themselves.  It is up to the data source to either return the data requested or return a standard error identifying why the request was rejected. '
  ProductOfferingMessageDelete:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      productOfferingFilter:
        $ref: '#/definitions/ProductOfferingFilter'
      productOfferingList:
        $ref: '#/definitions/ProductOfferingList'
    description: Delete definition for ProductOfferingMessage
  ProductOfferingMessageGet:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      productOfferingFilter:
        $ref: '#/definitions/ProductOfferingFilter'
    description: Get definition for ProductOfferingMessage
  ProductOfferingMessagePost:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      productOfferingList:
        $ref: '#/definitions/ProductOfferingList'
    description: Post definition for ProductOfferingMessage
  ProductOfferingMessagePut:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      productOfferingFilter:
        $ref: '#/definitions/ProductOfferingFilter'
      productOfferingList:
        $ref: '#/definitions/ProductOfferingList'
    description: Put definition for ProductOfferingMessage
  ProductOfferingMessageResponse:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      productOfferingList:
        $ref: '#/definitions/ProductOfferingList'
    description: Response definition for ProductOfferingMessage
  ProductServiceEnrollment:
    type: object
    properties:
      productServiceEnrollmentId:
        type: string
        description: 'Identifier of the productServiceEnrollment. '
      requestItem:
        $ref: '#/definitions/ProductServiceEnrollment_requestItem'
      fieldList:
        $ref: '#/definitions/ProductServiceEnrollment_fieldList'
      party:
        $ref: '#/definitions/Party'
      productServiceEnrollmentRequestDate:
        type: string
        format: datetime
        description: 'The date time on which the productServiceEnrollment was requested '
      productServiceEnrollmentApprovedDate:
        type: string
        format: datetime
        description: 'The date time on which the productServiceEnrollment was approved. '
      productServiceEnrollmentStatus:
        type: string
        description: 'The product service enrollment status. '
      customData:
        $ref: '#/definitions/AccessProfile_customData'
  ProductServiceEnrollmentId:
    type: string
    description: 'Identifier of the productServiceEnrollment. '
  ProductServiceEnrollmentList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      productServiceEnrollment:
        type: array
        description: 'Product service enrollment data. '
        items:
          $ref: '#/definitions/ProductServiceEnrollment'
    description: 'List of product or service enrollments. '
  ProductServiceEnrollmentStatus:
    type: string
    description: 'The product service enrollment status. '
  ProductServiceEnrollmentFilter:
    type: object
    properties:
      productServiceEnrollmentIdList:
        $ref: '#/definitions/ProductServiceEnrollmentFilter_productServiceEnrollmentIdList'
      productServiceRequestIdList:
        $ref: '#/definitions/FieldFilter_productServiceRequestIdList'
      partyIdList:
        $ref: '#/definitions/Account_partyIdList'
      productServiceEnrollmentStatusList:
        $ref: '#/definitions/ProductServiceEnrollmentFilter_productServiceEnrollmentStatusList'
      productServiceEnrollmentRequestDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
      productServiceEnrollmentApprovedDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
    description: 'The list of filter options for product and service enrollment.  The options can be used in combination or by themselves.  It is up to the data source to either return the data requested or return a standard error identifying why the request was rejected. '
  ProductServiceEnrollmentMessageDelete:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      productServiceEnrollmentFilter:
        $ref: '#/definitions/ProductServiceEnrollmentFilter'
      productServiceEnrollmentList:
        $ref: '#/definitions/ProductServiceEnrollmentList'
    description: Delete definition for ProductServiceEnrollmentMessage
  ProductServiceEnrollmentMessageGet:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      productServiceEnrollmentFilter:
        $ref: '#/definitions/ProductServiceEnrollmentFilter'
    description: Get definition for ProductServiceEnrollmentMessage
  ProductServiceEnrollmentMessagePost:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      productServiceEnrollmentList:
        $ref: '#/definitions/ProductServiceEnrollmentList'
    description: Post definition for ProductServiceEnrollmentMessage
  ProductServiceEnrollmentMessagePut:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      productServiceEnrollmentFilter:
        $ref: '#/definitions/ProductServiceEnrollmentFilter'
      productServiceEnrollmentList:
        $ref: '#/definitions/ProductServiceEnrollmentList'
    description: Put definition for ProductServiceEnrollmentMessage
  ProductServiceEnrollmentMessageResponse:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      productServiceEnrollmentList:
        $ref: '#/definitions/ProductServiceEnrollmentList'
    description: Response definition for ProductServiceEnrollmentMessage
  ProductServiceRequest:
    type: object
    properties:
      productServiceRequestId:
        type: string
        description: 'The product service request ID is a persistent and unique identifier for the product service request.  It should be unique for all product service requests across the institution and remain the same over the life of the product service request within the financial institution. '
      requestList:
        $ref: '#/definitions/ProductServiceRequest_requestList'
      source:
        type: string
        description: "What channel did this product service request originate from, for example but not limited to website, new member application, walk up, partner web site, business development, marketing, etc. "
      status:
        type: string
        description: 'Status of the product service request to indicate how the product service request is progressing from a workflow standpoint. The product service request is new and has not been handled by internal teams. The product service request has been allocated to a resource to get back to the party. The internal resource has contacted the product service request and is negotiating with the party. The internal resource has proposed a product or service to the party and is waiting on an answer from the party. The party has tentatively accepted the proposal but has not officially committed to the offer. The party has accepted the proposal and committed to the offer. The process is complete for the product service request. The party has rejected the proposal and is not interested in further proposals.  The process is complete for the product service request. Some other status not covered above. '
        enum:
        - New
        - Assigned
        - InDiscussion
        - InProposal
        - VerbalCommitment
        - Converted
        - Lost
        - Other
      createDateTime:
        type: string
        format: datetime
        description: "The UTC date/time that the product service request was created in the system.  The date/time should be ISO 8601 UTC format: yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. "
      productServiceRequestRelatedTo:
        $ref: '#/definitions/Activity_activityRelatedTo'
      productServiceRequestNoteList:
        $ref: '#/definitions/Account_accountNoteList'
      productServiceRequestCustomData:
        $ref: '#/definitions/AccessProfile_customData'
    description: 'The product service request object defines all the fields necessary to define that an existing or potential party is interested in a particular product or service. The product service request can migrate through several statuses as the product service request progresses. To enroll in a product or service please see Application.xsd or ProductServiceEnrollment.xsd. '
  ProductServiceRequestId:
    type: string
    description: 'The product service request ID is a persistent and unique identifier for the product service request.  It should be unique for all product service requests across the institution and remain the same over the life of the product service request within the financial institution. '
  ProductServiceRequestList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      productServiceRequest:
        type: array
        description: 'Collection of fields for a product service request. '
        items:
          $ref: '#/definitions/ProductServiceRequest'
    description: "The product service request list collection/array contains all the product service requests, for instance, that the credential set is authorized to access at the Institution based on applied filters. "
  ProductServiceStatus:
    type: string
    description: 'Status of the product service request to indicate how the product service request is progressing from a workflow standpoint. The product service request is new and has not been handled by internal teams. The product service request has been allocated to a resource to get back to the party. The internal resource has contacted the product service request and is negotiating with the party. The internal resource has proposed a product or service to the party and is waiting on an answer from the party. The party has tentatively accepted the proposal but has not officially committed to the offer. The party has accepted the proposal and committed to the offer. The process is complete for the product service request. The party has rejected the proposal and is not interested in further proposals.  The process is complete for the product service request. Some other status not covered above. '
    enum:
    - New
    - Assigned
    - InDiscussion
    - InProposal
    - VerbalCommitment
    - Converted
    - Lost
    - Other
  Request:
    type: object
    properties:
      requestId:
        type: string
        description: 'Unique identifier for the request. '
      requestItem:
        $ref: '#/definitions/ProductServiceEnrollment_requestItem'
      requestStatus:
        type: string
        description: 'Status of the activity within request to indicate how the activity is progressing from a workflow standpoint. The activity is new and has not been handled by internal teams. The activity  has been allocated to a resource but no time has been spent on the activity. The activity is being actively being worked on. The activity is in progress but has stalled due to some issue. The details of why its being held up will be in the notes related to the request/activity. The activity has been completed. The activity has been cancelled. The activity is intentionally on hold. The details of why it is on hold will be in the notes related to the request/activity. '
        enum:
        - New
        - Assigned
        - InProgressActive
        - InProgressInactive
        - Completed
        - Cancelled
        - OnHold
      requestedDateTime:
        type: string
        format: datetime
        description: "UTC date and time when activity was requested.  In most cases this will be the same as the product service request create date unless this request was subsequently added. The date/time should be ISO 8601 UTC format: yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. "
      dueDateTime:
        type: string
        format: datetime
        description: "UTC date and time when request is due.  This will most likely be the due date of the last activity related to the request. The date/time should be ISO 8601 UTC format: yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. "
      startDateTime:
        type: string
        format: datetime
        description: "UTC date and time when request was started to be serviced. The date/time should be ISO 8601 UTC format: yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. "
      completedDateTime:
        type: string
        format: datetime
        description: "UTC date and time when request was completed.  THis is most likely when the last activity was completed related to the request. The date/time should be ISO 8601 UTC format: yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. "
      requestNoteList:
        $ref: '#/definitions/Account_accountNoteList'
      requestRelatedTo:
        $ref: '#/definitions/Activity_activityRelatedTo'
      activityList:
        $ref: '#/definitions/Request_activityList'
      secureMessageList:
        $ref: '#/definitions/Request_secureMessageList'
      documentList:
        $ref: '#/definitions/DocumentFilter_documentIdList'
      requestCustomData:
        $ref: '#/definitions/AccessProfile_customData'
    description: "An individual request thats part of a larger request of products, services, etc. that the member is requesting. "
  ProductServiceRequestFilter:
    type: object
    properties:
      productServiceRequestIdList:
        $ref: '#/definitions/FieldFilter_productServiceRequestIdList'
      relationshipIdList:
        $ref: '#/definitions/AccountFilter_relationshipIdList'
      accountIdList:
        $ref: '#/definitions/AccountFilter_accountIdList'
      accountStatusList:
        $ref: '#/definitions/AccountFilter_accountStatusList'
      partyIdList:
        $ref: '#/definitions/Account_partyIdList'
      contactIdList:
        $ref: '#/definitions/Activity_activityRelatedTo_contactIdList'
      secureMessageIdList:
        $ref: '#/definitions/ProductServiceRequestFilter_secureMessageIdList'
      productServiceRequestStatusList:
        $ref: '#/definitions/ProductServiceRequestFilter_productServiceRequestStatusList'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
      accountIdentificationList:
        $ref: '#/definitions/AccountFilter_accountIdentificationList'
    description: 'The list of filter options for services requesting product service request data.  The options can be used in combination or by themselves.  It is up to the data source to either return or affect the data requested or return a standard error identifying why the request was rejected. '
  ProductServiceRequestMessageDelete:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      productServiceRequestFilter:
        $ref: '#/definitions/ProductServiceRequestFilter'
      productServiceRequestList:
        $ref: '#/definitions/ProductServiceRequestList'
    description: Delete definition for ProductServiceRequestMessage
  ProductServiceRequestMessageGet:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      productServiceRequestFilter:
        $ref: '#/definitions/ProductServiceRequestFilter'
    description: Get definition for ProductServiceRequestMessage
  ProductServiceRequestMessagePost:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      productServiceRequestList:
        $ref: '#/definitions/ProductServiceRequestList'
    description: Post definition for ProductServiceRequestMessage
  ProductServiceRequestMessagePut:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      productServiceRequestFilter:
        $ref: '#/definitions/ProductServiceRequestFilter'
      productServiceRequestList:
        $ref: '#/definitions/ProductServiceRequestList'
    description: Put definition for ProductServiceRequestMessage
  ProductServiceRequestMessageResponse:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      productServiceRequestList:
        $ref: '#/definitions/ProductServiceRequestList'
    description: Response definition for ProductServiceRequestMessage
  RegisteredDevice:
    type: object
    properties:
      deviceId:
        type: string
        description: 'The registered device identification string.  The application should ensure that this is unique across all accounts. '
      partyIdList:
        $ref: '#/definitions/Account_partyIdList'
      relationshipIdList:
        $ref: '#/definitions/AccountFilter_relationshipIdList'
      accountIdList:
        $ref: '#/definitions/AccountFilter_accountIdList'
      encryptedFlag:
        type: boolean
        description: "If True, indicates that the device ID was encrypted. Encryption method is agreed upon by application end point providers.  Assume itâ€™s NOT encrypted if this flag is not provided. The message context will be used by the service to understand which client is calling the service to know which encryption algorithm to apply. "
      isRegisteredFlag:
        type: boolean
        description: "If True, indicates that the device ID is registered with the institution. This will normally be True as the non-existence of the record means unregistered. However, this gives the flexibility to store devices that have at some point been registered but are now unregistered. "
      customData:
        $ref: '#/definitions/AccessProfile_customData'
      accountIdentificationList:
        $ref: '#/definitions/AccountFilter_accountIdentificationList'
    description: "The registered device to be created, read, updated or deleted. "
  RegisteredDeviceList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      registeredDevice:
        type: array
        description: "The registered device to be created, read, updated or deleted. "
        items:
          $ref: '#/definitions/RegisteredDevice'
    description: "The collection/array list contains all the devices to be created, read, updated or deleted. "
  RegisteredDeviceFilter:
    type: object
    properties:
      deviceIDList:
        $ref: '#/definitions/RegisteredDeviceFilter_deviceIDList'
      partyIdList:
        $ref: '#/definitions/Account_partyIdList'
      relationshipIdList:
        $ref: '#/definitions/AccountFilter_relationshipIdList'
      accountIdList:
        $ref: '#/definitions/AccountFilter_accountIdList'
      accountStatusList:
        $ref: '#/definitions/AccountFilter_accountStatusList'
      encryptedFlag:
        type: boolean
        description: "If True, indicates that the device ID was encrypted. Encryption method is agreed upon by application end point providers.  Assume itâ€™s NOT encrypted if this flag is not provided. The message context will be used by the service to understand which client is calling the service to know which encryption algorithm to apply. "
      customData:
        $ref: '#/definitions/AccessProfile_customData'
      accountIdentificationList:
        $ref: '#/definitions/AccountFilter_accountIdentificationList'
    description: "The collection/array contains all the devices to be created, read, updated or deleted with this registered device request. "
  RegisteredDeviceMessageDelete:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      registeredDeviceFilter:
        $ref: '#/definitions/RegisteredDeviceFilter'
      registeredDeviceList:
        $ref: '#/definitions/RegisteredDeviceList'
    description: Delete definition for RegisteredDeviceMessage
  RegisteredDeviceMessageGet:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      registeredDeviceFilter:
        $ref: '#/definitions/RegisteredDeviceFilter'
    description: Get definition for RegisteredDeviceMessage
  RegisteredDeviceMessagePost:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      registeredDeviceList:
        $ref: '#/definitions/RegisteredDeviceList'
    description: Post definition for RegisteredDeviceMessage
  RegisteredDeviceMessagePut:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      registeredDeviceFilter:
        $ref: '#/definitions/RegisteredDeviceFilter'
      registeredDeviceList:
        $ref: '#/definitions/RegisteredDeviceList'
    description: Put definition for RegisteredDeviceMessage
  RegisteredDeviceMessageResponse:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      registeredDeviceList:
        $ref: '#/definitions/RegisteredDeviceList'
    description: Response definition for RegisteredDeviceMessage
  Relationship:
    type: object
    properties:
      relationshipId:
        type: string
        description: 'The relationship ID is a persistent and unique identifier for the relationship. It should be unique for all relationships across the institution and remain the same over the life of the relationship with the financial institution. '
      dateCreated:
        type: string
        format: date
        description: 'Date of the creation of the relationship (i.e. membership date). '
      dateRelationshipEnded:
        type: string
        format: date
        description: 'End date of the relationship. '
      rewardsCode:
        type: string
        description: 'A code that represents a level of rewards that this relationship has access to based on all of the products and services used by the relationship. '
      relationshipPartyList:
        $ref: '#/definitions/Relationship_relationshipPartyList'
      accountIdList:
        $ref: '#/definitions/AccountFilter_accountIdList'
      relationshipStatus:
        type: string
        description: 'Status of the Relationship. '
        enum:
        - Active
        - Closed
        - Deceased
        - Inactive
        - Prospect
        - Restricted
      relationshipCreatedBy:
        type: string
        description: 'The unique identifier created by the system and or the user for identification. '
      relationshipDateTimeModified:
        type: string
        format: datetime
        description: 'Date and time the relationship data was modified in the source system. The date/time should be ISO 8601 UTC format. yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      relationshipModifiedBy:
        type: string
        description: 'The unique identifier created by the system and or the user for identification. '
      relationshipDateTimeDeleted:
        type: string
        format: datetime
        description: 'Date the relationship data was deleted or mark as inactive in the source system. The date/time should be ISO 8601 UTC format. yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      relationshipDeletedBy:
        type: string
        description: 'The unique identifier created by the system and or the user for identification. '
      customData:
        $ref: '#/definitions/AccessProfile_customData'
      accountIdentificationList:
        $ref: '#/definitions/AccountFilter_accountIdentificationList'
    description: "A grouping of related accounts tied to one or more parties that have an account relationship with the financial institution.  Some financial institutions may call this a membership, parent account or other term. "
  RelationshipId:
    type: string
    description: 'The relationship ID is a persistent and unique identifier for the relationship. It should be unique for all relationships across the institution and remain the same over the life of the relationship with the financial institution. '
  RelationshipList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      relationship:
        type: array
        description: "The relationships collection/array contains all the relationships, for instance, that the credential set is authorized to access at the Institution based on applied filters. "
        items:
          $ref: '#/definitions/Relationship'
  RelationshipParty:
    type: object
    properties:
      id:
        type: string
        description: 'The party ID is a persistent and unique identifier for the party not related to the accounts they own but tied to that person or organization. It should be unique for all parties across the institution and remain the same over the life of the relationship with the financial institution. '
      party:
        $ref: '#/definitions/Party'
      partyRelationshipType:
        $ref: '#/definitions/RelationshipParty_partyRelationshipType'
      ssnOverride:
        type: boolean
        description: "The partyâ€™s SSN should be used rather the primaryâ€™s SSN when reporting to the IRS. Only used if party relationship type is NOT PRIMARY.  Only one of these can appear on a relationship or an account, if applicable. "
      contactIdList:
        $ref: '#/definitions/Activity_activityRelatedTo_contactIdList'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
      noteList:
        $ref: '#/definitions/Account_accountNoteList'
    description: 'A collection of fields required to relate this relationship with the identified parties and what level of ownership they have on the underlying accounts within the relationship. '
  RelationshipStatus:
    type: string
    enum:
    - Active
    - Closed
    - Deceased
    - Inactive
    - Prospect
    - Restricted
  RelationshipFilter:
    type: object
    properties:
      partyIdList:
        $ref: '#/definitions/Account_partyIdList'
      relationshipIdList:
        $ref: '#/definitions/AccountFilter_relationshipIdList'
      accountIdList:
        $ref: '#/definitions/AccountFilter_accountIdList'
      accountStatusList:
        $ref: '#/definitions/AccountFilter_accountStatusList'
      contactIdList:
        $ref: '#/definitions/Activity_activityRelatedTo_contactIdList'
      relationshipStatusList:
        $ref: '#/definitions/RelationshipFilter_relationshipStatusList'
      includeNotesFlag:
        type: boolean
        description: "If this is not provided, it will not return notes. If it is provided and its true, it will return all active non-expired notes. "
      customData:
        $ref: '#/definitions/AccessProfile_customData'
      accountIdentificationList:
        $ref: '#/definitions/AccountFilter_accountIdentificationList'
    description: 'The list of filter options for services requesting relationship data.  The options can be used in combination or by themselves.  It is up to the data source to either return or affect the data requested or return a standard error identifying why the request was rejected. '
  RelationshipMessageDelete:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      relationshipFilter:
        $ref: '#/definitions/RelationshipFilter'
      relationshipList:
        $ref: '#/definitions/RelationshipList'
    description: Delete definition for RelationshipMessage
  RelationshipMessageGet:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      relationshipFilter:
        $ref: '#/definitions/RelationshipFilter'
    description: Get definition for RelationshipMessage
  RelationshipMessagePost:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      relationshipList:
        $ref: '#/definitions/RelationshipList'
    description: Post definition for RelationshipMessage
  RelationshipMessagePut:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      relationshipFilter:
        $ref: '#/definitions/RelationshipFilter'
      relationshipList:
        $ref: '#/definitions/RelationshipList'
    description: Put definition for RelationshipMessage
  RelationshipMessageResponse:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      relationshipList:
        $ref: '#/definitions/RelationshipList'
    description: Response definition for RelationshipMessage
  ImageValidationIssue:
    type: string
    description: "An enumeration of possible image validation issues. CAR read OK, but the amount does not match the amount specified in the remote deposit request. NOTE: Enumeration deprecated for intended removal in v5.0. Use enum AmountMismatch. The check image has folded corners. Excess skew in the check image. Check image was too dark. Check image was too light. The check image file size was below the minimize required size. The check image file size was above the maximum allowed size. The check image height or width is too small. The check image height or width is too great. The check image noise was too great. The check image date was not usable. The check image payee was not usable. The check image signature was not usable. The check image payor was not usable. The check image MICR was not usable. An unknown or unsupported image type was provided The endorsement on the back of the item is not detected. The amount contained in the image does not match the value requested for processing. The image is missing for validation. The image quality is too low. An unknown image validation issue. Other image validation issue. To further describe this issue, use the corresponding imageValidationIssueOther field. "
    enum:
    - CARMismatchFailed
    - FoldedCorners
    - ExcessSkew
    - TooDark
    - TooLight
    - BelowMinSize
    - AboveMaxSize
    - UndersizedImage
    - OversizedImage
    - SpotNoise
    - DateUsability
    - PayeeUsability
    - SignatureUsability
    - PayorUsability
    - MICRUsability
    - ImageFormat
    - EndorsementUsability
    - AmountMismatch
    - Missing
    - ImageQuality
    - Unknown
    - Other
  RemoteDeposit:
    type: object
    properties:
      action:
        type: string
        description: "An enumeration of possible actions Create a new session for this remote deposit session, if the amounts are to be provided, this would be passed with this Action Submit one or more of the images associated to the request The remote deposit request is currently under review, and is not currently approved. "
        enum:
        - CreateSession
        - SubmitImage
        - Commit
      remoteDepositId:
        type: string
        description: 'The RemoteDeposit ID is a persistent and unique identifier for the party not related to the accounts they own but tied to that person or organization. It should be unique for all parties across the institution and remain the same over the life of the relationship with the financial institution. '
      clientReferenceId:
        type: string
        description: 'A unique identifier created by the client system identifying this remote deposit '
      vendorReferenceId:
        type: string
        description: 'A unique identifier created by the vendor for this remote deposit request instance '
      checkNumber:
        type: string
        description: 'The number on the face of the check indicating the id of that check in a series. '
      routingTransitNumber:
        type: string
        description: 'Routing/transit number of the financial institution of the deposit item. '
      micrCheckAccountNumber:
        type: string
        description: 'The account number portion of a draft or line of credit MICR line. '
      amount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      userEnteredAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      immediatelyAvailableAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      remoteDepositFeeList:
        $ref: '#/definitions/RemoteDeposit_remoteDepositFeeList'
      businessDaysHeld:
        type: integer
        format: positiveInteger
        description: 'Number of business days for which a deposit will be held. '
      cropped:
        type: boolean
        description: "If set to true, it indicates that the image has already been cropped. If its false, it indicates that the image is not already cropped. "
      frontImage:
        $ref: '#/definitions/RemoteDeposit_frontImage'
      backImage:
        $ref: '#/definitions/RemoteDeposit_frontImage'
      accountId:
        type: string
        description: 'The account ID is a persistent and unique identifier for the account. It must be unique for all users across the institution and remain the same over the life of the account. '
      accountType:
        type: string
        description: "Checking account, i.e., checks can be written against the account. Money market accounts can be included here or in money markets.  Its up to the institution. Savings and club accounts.  This can optionally include CDs, but its up to the institution. Auto loans, etc. Loans that are NOT lines of credit or credit cards. Loan behind the credit card.  Note the actual card information in the card object. Loan that is a line of credit but NOT a credit card. Loan that is made in exchange for taking title of property. Investment accounts such as brokerage and this can optionally include CDs and/or money markets, but its up to the institution. This account is a special type of checking account connected to a pre-paid card. Other account type. Loan that is made in installments. Loan is typically unsecured. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Installment. Loan that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Commercial. Line of Credit that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of CommercialLineOfCredit. A general ledger account of the financial institution. A loan account type that has not been prevously defined. This enumeration is considered deprecated. Recommend using account type loan and subAccount of OtherLoan. "
        enum:
        - Checking
        - Savings
        - Loan
        - CreditCard
        - LineOfCredit
        - Mortgage
        - Investment
        - PrePaidCard
        - Other
        - Installment
        - CommercialLoan
        - CommercialLineOfCredit
        - GeneralLedger
        - OtherLoan
      accountSubType:
        type: string
        description: 'The account subtype identifies the specific account type that the back end system will recognize. '
      status:
        type: string
        description: "An enumeration of possible statuses for a remote deposit capture request. The user exceeded their deposit limit. The remote deposit image request was approved. The remote deposit request is currently under review, and is not currently approved. The remote deposit request was declined because the user is currently restricted from using this service. The remote deposit image request was declined because of image validation issues.  See the image validation issues list attribute for a list of the specific issues. This item has already been submitted to the target system. An unknown reference id was provided The remote deposit request is currently awaiting review, and is not currently approved. The remote deposit request is in a suspended state, and is not currently approved. The remote deposit request is in an undefined state. The remote deposit has exceeded risk confidence thresholds. The remote deposit request was declined because the user is unknown. The remote deposit request was declined because the target account is invalid. The remote deposit request requires a user confirmation before continuing. "
        enum:
        - ExceedsDepositLimit
        - Approved
        - UnderReview
        - DeclinedEligibility
        - DeclinedImageValidationIssue
        - DuplicateItem
        - InvalidReferenceId
        - PendingReview
        - Suspended
        - Unknown
        - UnacceptableRisk
        - UnknownUser
        - InvalidAccount
        - ConfirmationRequired
      imageValidationIssueList:
        $ref: '#/definitions/RemoteDeposit_imageValidationIssueList'
      remoteDepositNoteList:
        $ref: '#/definitions/Account_accountNoteList'
      submittedDateTime:
        type: string
        format: datetime
        description: 'The date and time that the deposit item was submitted for review. The date/time should be ISO 8601 UTC format. yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      lastUpdateDateTime:
        type: string
        format: datetime
        description: 'The date and time that the deposit item was last updated or modified The date/time should be ISO 8601 UTC format. yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      customData:
        $ref: '#/definitions/AccessProfile_customData'
    description: "The remote deposit request data element contains all the attributes to submit a remote deposit to a CUFX remote deposit provider (such as Vertifi, BluePoint, etc.) for a decision on whether the deposit will be approved and eventually made into the members account. "
  RemoteDepositAction:
    type: string
    description: "An enumeration of possible actions Create a new session for this remote deposit session, if the amounts are to be provided, this would be passed with this Action Submit one or more of the images associated to the request The remote deposit request is currently under review, and is not currently approved. "
    enum:
    - CreateSession
    - SubmitImage
    - Commit
  RemoteDepositId:
    type: string
    description: 'The RemoteDeposit ID is a persistent and unique identifier for the party not related to the accounts they own but tied to that person or organization. It should be unique for all parties across the institution and remain the same over the life of the relationship with the financial institution. '
  RemoteDepositList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      remoteDeposit:
        type: array
        description: 'Details related to a remote deposit item. '
        items:
          $ref: '#/definitions/RemoteDeposit'
    description: 'Collection of remote deposit request items. '
  RemoteDepositStatus:
    type: string
    description: "An enumeration of possible statuses for a remote deposit capture request. The user exceeded their deposit limit. The remote deposit image request was approved. The remote deposit request is currently under review, and is not currently approved. The remote deposit request was declined because the user is currently restricted from using this service. The remote deposit image request was declined because of image validation issues.  See the image validation issues list attribute for a list of the specific issues. This item has already been submitted to the target system. An unknown reference id was provided The remote deposit request is currently awaiting review, and is not currently approved. The remote deposit request is in a suspended state, and is not currently approved. The remote deposit request is in an undefined state. The remote deposit has exceeded risk confidence thresholds. The remote deposit request was declined because the user is unknown. The remote deposit request was declined because the target account is invalid. The remote deposit request requires a user confirmation before continuing. "
    enum:
    - ExceedsDepositLimit
    - Approved
    - UnderReview
    - DeclinedEligibility
    - DeclinedImageValidationIssue
    - DuplicateItem
    - InvalidReferenceId
    - PendingReview
    - Suspended
    - Unknown
    - UnacceptableRisk
    - UnknownUser
    - InvalidAccount
    - ConfirmationRequired
  RemoteDepositFilter:
    type: object
    properties:
      remoteDepositIdList:
        $ref: '#/definitions/RemoteDepositFilter_remoteDepositIdList'
      accountIdList:
        $ref: '#/definitions/AccountFilter_accountIdList'
      accountStatusList:
        $ref: '#/definitions/AccountFilter_accountStatusList'
      partyIdList:
        $ref: '#/definitions/Account_partyIdList'
      statusList:
        $ref: '#/definitions/RemoteDepositFilter_statusList'
      actionList:
        $ref: '#/definitions/RemoteDepositFilter_actionList'
      imageValidationIssueList:
        $ref: '#/definitions/RemoteDeposit_imageValidationIssueList'
      remoteDepositDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
      includeImageOnRead:
        type: string
        description: 'An enumeration of possible image types Indicates to not return an image as part of the request. Return front images as part of the request. Return back images as part of the request. Return front and back images as part of the request. '
        enum:
        - ArtifactIdOnly
        - FrontImage
        - BackImage
        - BothFrontBackImage
      customData:
        $ref: '#/definitions/AccessProfile_customData'
      accountIdentificationList:
        $ref: '#/definitions/AccountFilter_accountIdentificationList'
    description: 'The list of filter options for services requesting RemoteDeposit data. The options can be used in combination or by themselves. It is up to the data source to either return or affect the data requested or return a standard error identifying why the request was rejected. '
  RemoteDepositMessageDelete:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      remoteDepositFilter:
        $ref: '#/definitions/RemoteDepositFilter'
      remoteDepositList:
        $ref: '#/definitions/RemoteDepositList'
    description: Delete definition for RemoteDepositMessage
  RemoteDepositMessageGet:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      remoteDepositFilter:
        $ref: '#/definitions/RemoteDepositFilter'
    description: Get definition for RemoteDepositMessage
  RemoteDepositMessagePost:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      remoteDepositList:
        $ref: '#/definitions/RemoteDepositList'
    description: Post definition for RemoteDepositMessage
  RemoteDepositMessagePut:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      remoteDepositFilter:
        $ref: '#/definitions/RemoteDepositFilter'
      remoteDepositList:
        $ref: '#/definitions/RemoteDepositList'
    description: Put definition for RemoteDepositMessage
  RemoteDepositMessageResponse:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      remoteDepositList:
        $ref: '#/definitions/RemoteDepositList'
    description: Response definition for RemoteDepositMessage
  SecureMessage:
    type: object
    properties:
      secureMessageId:
        type: string
        description: "The secure message ID is a persistent and unique identifier for the secure message that is not related to the party, relationship or accounts that the secure message is for.  It should be unique for all secure messages across the institution and remain the same over the life of the secure message within the financial institution. "
      previousSecureMessageId:
        type: string
        description: "The secure message ID is a persistent and unique identifier for the secure message that is not related to the party, relationship or accounts that the secure message is for.  It should be unique for all secure messages across the institution and remain the same over the life of the secure message within the financial institution. "
      threadId:
        type: string
        description: 'The unique ID associated with a message or a group of messages. '
      subjectLine:
        type: string
        description: 'Each secure message has a subject line supplied by the creator of the secure message. '
      messageFromList:
        $ref: '#/definitions/SecureMessage_messageFromList'
      messageToList:
        $ref: '#/definitions/SecureMessage_messageFromList'
      carbonCopyList:
        $ref: '#/definitions/SecureMessage_messageFromList'
      blindCarbonCopyList:
        $ref: '#/definitions/SecureMessage_messageFromList'
      replyToList:
        $ref: '#/definitions/SecureMessage_messageFromList'
      type:
        type: string
        description: "Type of secure message or secure message template, such as Product Offer, Notice, etc. Contains information about an alert due to an event that occurred. The party requested an alert for when this event occurs. Contains general information about a product or service. Contains a legal notice to the party(ies) that is required to be sent when an event happens on their associated accounts. Contains a product offering which may include confidential information. Contains information about a meeting request. Contains information on current or new services.  May contain information about the next steps that the FI is executing or that the party is supposed to perform. Documents contained within this type of message require an electronic or wet signature. This value can be used when no other statuses relate to the particular secure message. What the secure message is can be found using the secure message subject line. "
        enum:
        - Alert
        - GeneralMessage
        - Notice
        - ProductOffering
        - ScheduleMeeting
        - ServiceUpdate
        - SignatureRequired
        - Other
      currentStatus:
        type: string
        description: "Current status of the secure message, i.e. a template or in the process of being sent, viewed, returned (see signature type to determine if it was signed or not when returned), etc. The secure message has not yet been filled with information and can be used for any party, account or relationship as a template. The secure message has been created but not sent to the receiver. The secure message has been placed in an outbox to send, but has not been sent. The secure message has been sent to the intended receiver. The secureMessage has been read by the intended receiver. The secure message had a new message created in response to this message. The secure message was forwarded to another receiver.  Typically, a new secure message would be created for the new receiver to view. The secure message was archived. The secure message has been created and sent, but it has not been read by the recipient(s). The secure message was created and sent, but delivery to the recipient(s) failed. The secure message was sent.  The secure message had an associated expiration date. The expiration date has passed, so the secure message has expired. "
        enum:
        - Template
        - Draft
        - Outbox
        - Sent
        - Read
        - Replied
        - Forwarded
        - Archived
        - Unread
        - Failed
        - Expired
      statusLog:
        $ref: '#/definitions/SecureMessage_statusLog'
      body:
        type: string
        description: 'The actual content of the message. '
      bodyFormat:
        type: string
        description: 'The format of the body content. The body contains full HTML markup. The body contains raw text in ASCII format. '
        enum:
        - Html
        - Text
      documentIdList:
        $ref: '#/definitions/DocumentFilter_documentIdList'
      doNotDeliverBeforeDateTime:
        type: string
        format: datetime
        description: "The date and time that the secure message should be sent if put on a delayed delivery schedule. The date/time should be ISO 8601 UTC format: yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. "
      expirationDateTime:
        type: string
        format: datetime
        description: 'The date and time that the secure message expires and should be removed from view. It is up to the end point to determine what to do with the message if it has expired. The date/time should be ISO 8601 UTC format. yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) and yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      requestId:
        type: string
        description: 'Unique identifier for the request. '
      allowReply:
        type: boolean
        description: 'A boolean to indicate that a response is permitted. When false a response message should be not be sent. When not specified the value is assumed to be true. '
      customData:
        $ref: '#/definitions/AccessProfile_customData'
    description: "The secure message defines the information sent and then received by two or more parties. It also relates secure messages to the sending and receiving party(ies), and potentially to the relationship and/or account(s) to which the secure message is bound. "
  SecureMessageId:
    type: string
    description: "The secure message ID is a persistent and unique identifier for the secure message that is not related to the party, relationship or accounts that the secure message is for.  It should be unique for all secure messages across the institution and remain the same over the life of the secure message within the financial institution. "
  SecureMessageList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      secureMessage:
        type: array
        description: "The secure message defines the information sent and then received by two or more parties. It also relates secure messages to the sending and receiving party(ies), and potentially to the relationship and/or account(s) to which the secure message is bound.  The information and message statuses below are in the context of the user that is viewing the message. "
        items:
          $ref: '#/definitions/SecureMessage'
    description: "The secure messages collection/array list contains all the secure messages or secure message templates, for instance, that the credential set is authorized to access at the Institution based on applied filters. "
  SecureMessageStatus:
    type: string
    description: "Current status of the secure message, i.e. a template or in the process of being sent, viewed, returned (see signature type to determine if it was signed or not when returned), etc. The secure message has not yet been filled with information and can be used for any party, account or relationship as a template. The secure message has been created but not sent to the receiver. The secure message has been placed in an outbox to send, but has not been sent. The secure message has been sent to the intended receiver. The secureMessage has been read by the intended receiver. The secure message had a new message created in response to this message. The secure message was forwarded to another receiver.  Typically, a new secure message would be created for the new receiver to view. The secure message was archived. The secure message has been created and sent, but it has not been read by the recipient(s). The secure message was created and sent, but delivery to the recipient(s) failed. The secure message was sent.  The secure message had an associated expiration date. The expiration date has passed, so the secure message has expired. "
    enum:
    - Template
    - Draft
    - Outbox
    - Sent
    - Read
    - Replied
    - Forwarded
    - Archived
    - Unread
    - Failed
    - Expired
  SecureMessageType:
    type: string
    description: "Type of secure message or secure message template, such as Product Offer, Notice, etc. Contains information about an alert due to an event that occurred. The party requested an alert for when this event occurs. Contains general information about a product or service. Contains a legal notice to the party(ies) that is required to be sent when an event happens on their associated accounts. Contains a product offering which may include confidential information. Contains information about a meeting request. Contains information on current or new services.  May contain information about the next steps that the FI is executing or that the party is supposed to perform. Documents contained within this type of message require an electronic or wet signature. This value can be used when no other statuses relate to the particular secure message. What the secure message is can be found using the secure message subject line. "
    enum:
    - Alert
    - GeneralMessage
    - Notice
    - ProductOffering
    - ScheduleMeeting
    - ServiceUpdate
    - SignatureRequired
    - Other
  SecureMessageUser:
    type: object
    properties:
      userId:
        type: string
        description: 'The unique identifier created by the system and or the user for identification. '
      processorSessionId:
        type: string
        description: "The processor session ID is a unique identifier for the user, based on the connection to the processor or core system for the message being performed. processorSessionId is depreciated in favor of sessionId in the MessageContext. "
      userIdType:
        type: string
        description: "The user ID is an employee ID for logging into the network. The user ID is a vendor employee ID for logging into the network. The user ID is essentially unknown, i.e. no credentials are required. Business rules will have been applied to either prevent or allow anonymous access to the service in question. The credential group identifier of a Financial Institution party that was used to access the service.  See credential group schema. The system user identifier of a system account that was used to access the service. A security token which was created from an identity provider. The user identification was not one of the above formats. "
        enum:
        - EmployeeId
        - VendorEmployeeId
        - Anonymous
        - FIUserId
        - SystemAccountId
        - SecurityToken
        - Custom
      partyId:
        type: string
        description: 'The party ID is a persistent and unique identifier for the party not related to the accounts they own but tied to that person or organization. It should be unique for all parties across the institution and remain the same over the life of the relationship with the financial institution. '
      customData:
        $ref: '#/definitions/AccessProfile_customData'
      relationshipId:
        type: string
        description: 'The relationship ID is a persistent and unique identifier for the relationship. It should be unique for all relationships across the institution and remain the same over the life of the relationship with the financial institution. '
      accountId:
        type: string
        description: 'The account ID is a persistent and unique identifier for the account. It must be unique for all users across the institution and remain the same over the life of the account. '
      cardId:
        type: string
        description: 'The card ID is a persistent and unique identifier for the card. It must be unique for all users across the institution and remain the same over the life of the card. The card ID should not be the same as the card number embossed on the card. '
    description: "Details related to a secure message receiver or sender. Note that user:User contains the necessary information for identifying internal users, system accounts, external users and external fiUserId accounts. If this information is not present, the party ID, account, relationship, etc. may be the \"receiver.\" If both the user info is available and the info is provided below, then its an AND condition. e.g. The message was sent to fiUserId=cufxuser, partyid=123 on account=12334. "
  StatusLogEntry:
    type: object
    properties:
      status:
        type: string
        description: "Current status of the secure message, i.e. a template or in the process of being sent, viewed, returned (see signature type to determine if it was signed or not when returned), etc. The secure message has not yet been filled with information and can be used for any party, account or relationship as a template. The secure message has been created but not sent to the receiver. The secure message has been placed in an outbox to send, but has not been sent. The secure message has been sent to the intended receiver. The secureMessage has been read by the intended receiver. The secure message had a new message created in response to this message. The secure message was forwarded to another receiver.  Typically, a new secure message would be created for the new receiver to view. The secure message was archived. The secure message has been created and sent, but it has not been read by the recipient(s). The secure message was created and sent, but delivery to the recipient(s) failed. The secure message was sent.  The secure message had an associated expiration date. The expiration date has passed, so the secure message has expired. "
        enum:
        - Template
        - Draft
        - Outbox
        - Sent
        - Read
        - Replied
        - Forwarded
        - Archived
        - Unread
        - Failed
        - Expired
      messageAccessProfileId:
        type: string
        description: 'The unique ID associated with a message or group of messages. '
      statusDateTime:
        type: string
        format: datetime
        description: "The date and time that the secure message was drafted, read, sent, replied, forwarded, etc.  See Status for valid events.  The date/time should be ISO 8601 UTC format. yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) and yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. "
    description: "The dates and times that the secureMessage changed status to drafted, sent, read, replied, forwarded, etc. "
  SubjectLine:
    type: string
    description: 'Each secure message has a subject line supplied by the creator of the secure message. '
  ThreadId:
    type: string
    description: 'The unique ID associated with a message or a group of messages. '
  SecureMessageFilter:
    type: object
    properties:
      secureMessageIdList:
        $ref: '#/definitions/ProductServiceRequestFilter_secureMessageIdList'
      threadIdList:
        $ref: '#/definitions/SecureMessageFilter_threadIdList'
      subjectLineContainsList:
        $ref: '#/definitions/SecureMessageFilter_subjectLineContainsList'
      messageFromList:
        $ref: '#/definitions/SecureMessage_messageFromList'
      messageToList:
        $ref: '#/definitions/SecureMessage_messageFromList'
      carbonCopyList:
        $ref: '#/definitions/SecureMessage_messageFromList'
      blindCarbonCopyList:
        $ref: '#/definitions/SecureMessage_messageFromList'
      replyToList:
        $ref: '#/definitions/SecureMessage_messageFromList'
      secureMessageTypeList:
        $ref: '#/definitions/SecureMessageFilter_secureMessageTypeList'
      currentStatusList:
        $ref: '#/definitions/SecureMessageFilter_currentStatusList'
      statusLogList:
        $ref: '#/definitions/SecureMessageFilter_currentStatusList'
      statusLogDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
      bodyContainsList:
        $ref: '#/definitions/SecureMessageFilter_bodyContainsList'
      returnConversation:
        type: boolean
        description: "If true, all previous messages linked to the messages that matched the search criteria, if available, will be returned.  Based on previousSecureMessageId. "
      documentIDList:
        $ref: '#/definitions/DocumentFilter_documentIdList'
      productServiceRequestIDList:
        $ref: '#/definitions/FieldFilter_productServiceRequestIdList'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
    description: 'The list of filter options for services requesting secure message data.  The options can be used in combination or by themselves.  It is up to the data source to either return or affect the data requested or return a standard error identifying why the request was rejected. '
  SecureMessageMessageDelete:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      secureMessageFilter:
        $ref: '#/definitions/SecureMessageFilter'
      secureMessageList:
        $ref: '#/definitions/SecureMessageList'
    description: Delete definition for SecureMessageMessage
  SecureMessageMessageGet:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      secureMessageFilter:
        $ref: '#/definitions/SecureMessageFilter'
    description: Get definition for SecureMessageMessage
  SecureMessageMessagePost:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      secureMessageList:
        $ref: '#/definitions/SecureMessageList'
    description: Post definition for SecureMessageMessage
  SecureMessageMessagePut:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      secureMessageFilter:
        $ref: '#/definitions/SecureMessageFilter'
      secureMessageList:
        $ref: '#/definitions/SecureMessageList'
    description: Put definition for SecureMessageMessage
  SecureMessageMessageResponse:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      secureMessageList:
        $ref: '#/definitions/SecureMessageList'
    description: Response definition for SecureMessageMessage
  SimpleValidationRequest:
    type: object
    properties:
      validationType:
        type: string
        description: "Validation type specified by the service provider (Exs.: OFAC, CU Loss, etc.). "
      applicant:
        $ref: '#/definitions/SimpleValidationRequest_applicant'
      simpleValidationStatus:
        type: string
        description: 'An enumeration defining possible results of a simple validation. The applicant is valid. The applicant is not valid. It could not be determined if the applicant is valid or not. Validation Request is still being processed â€“ check back at a later time to find out result. There was an error in the validation process. '
        enum:
        - Pass
        - Fail
        - Indeterminate
        - InProcess
        - Error
      validationSubmittedDateTime:
        type: string
        format: datetime
        description: 'The date time that the validation request was submitted. '
      customData:
        $ref: '#/definitions/AccessProfile_customData'
  SimpleValidationRequestList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      simpleValidationRequest:
        type: array
        description: 'Top level element for simple validation request. '
        items:
          $ref: '#/definitions/SimpleValidationRequest'
    description: 'Collection of simple validation requests to support serialization of requests. '
  SimpleValidationStatus:
    type: string
    description: 'An enumeration defining possible results of a simple validation. The applicant is valid. The applicant is not valid. It could not be determined if the applicant is valid or not. Validation Request is still being processed â€“ check back at a later time to find out result. There was an error in the validation process. '
    enum:
    - Pass
    - Fail
    - Indeterminate
    - InProcess
    - Error
  ValidationType:
    type: string
    description: "Validation type specified by the service provider (Exs.: OFAC, CU Loss, etc.). "
  SimpleValidationRequestFilter:
    type: object
    properties:
      applicantIdList:
        $ref: '#/definitions/SimpleValidationRequestFilter_applicantIdList'
      validationTypeList:
        $ref: '#/definitions/SimpleValidationRequestFilter_validationTypeList'
      partyIdList:
        $ref: '#/definitions/Account_partyIdList'
      relationshipIdList:
        $ref: '#/definitions/AccountFilter_relationshipIdList'
      simpleValidationStatusList:
        $ref: '#/definitions/SimpleValidationRequestFilter_simpleValidationStatusList'
      validationSubmittedDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
    description: "The list of access profile IDs that should have their associated access profiles either returned or affected by a read, update or delete account request. "
  SimpleValidationRequestMessageDelete:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      simpleValidationRequestFilter:
        $ref: '#/definitions/SimpleValidationRequestFilter'
      simpleValidationRequestList:
        $ref: '#/definitions/SimpleValidationRequestList'
    description: Delete definition for SimpleValidationRequestMessage
  SimpleValidationRequestMessageGet:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      simpleValidationRequestFilter:
        $ref: '#/definitions/SimpleValidationRequestFilter'
    description: Get definition for SimpleValidationRequestMessage
  SimpleValidationRequestMessagePost:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      simpleValidationRequestList:
        $ref: '#/definitions/SimpleValidationRequestList'
    description: Post definition for SimpleValidationRequestMessage
  SimpleValidationRequestMessagePut:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      simpleValidationRequestFilter:
        $ref: '#/definitions/SimpleValidationRequestFilter'
      simpleValidationRequestList:
        $ref: '#/definitions/SimpleValidationRequestList'
    description: Put definition for SimpleValidationRequestMessage
  SimpleValidationRequestMessageResponse:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      simpleValidationRequestList:
        $ref: '#/definitions/SimpleValidationRequestList'
    description: Response definition for SimpleValidationRequestMessage
  SystemState:
    type: object
    properties:
      systemName:
        type: string
        description: 'The name of the system within the financial institution that is providing the status. '
      systemId:
        type: string
        description: 'The identification value of the system within the financial institution that is providing the status. '
      systemStatus:
        type: string
        description: "Current status of the system, i.e. online, offline, etc. \"Online\" implies the system is available for subsequent requests. \"Offline\" implies the system is not available for subsequent requests. \"MemoPost\" implies that a subset of features is available. For example, the host system may be in MemoPost mode and accept transactions that are processed at a later time. Examples of such features are: intra-CU transfers and stop pay. Examples of features that may not be available during MemoPost are: loan application and change security settings. These examples are provided for demonstration purposes only; the exact feature list will vary depending on each implementation. "
        enum:
        - Online
        - Offline
        - MemoPost
      systemDescription:
        type: string
        description: 'Description of the system. '
      isBusinessDay:
        type: boolean
        description: 'Is the current day a business day. '
      nextBusinessDate:
        type: string
        format: date
        description: 'The next business date past the current date. '
      previousBusinessDate:
        type: string
        format: date
        description: 'The previous business date from the current date. '
      postingDate:
        type: string
        format: date
        description: 'The current posting date of the system. '
      systemCutOffDateTime:
        type: string
        format: datetime
        description: 'The dateTime of the next system cut off. The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      systemStatusCustomData:
        $ref: '#/definitions/AccessProfile_customData'
    description: "This returns the status of the system, commonly used for online systems attempting to determine if the system is available for real-time transactions. "
  SystemStatusList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      systemState:
        type: array
        items:
          $ref: '#/definitions/SystemState'
    description: 'The system status collection/array list contains all the system statuses that are authorized for access at the Institution based on applied filters. '
  SystemStatusFilter:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      systemStatusList:
        $ref: '#/definitions/SystemStatusFilter_systemStatusList'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
    description: 'The list of filter options for services requesting system status data. The options can be used in combination or by themselves. It is up to the data source to either return or affect the data requested or return a standard error identifying why the request was rejected. '
  SystemStatusMessageDelete:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      systemStatusFilter:
        $ref: '#/definitions/SystemStatusFilter'
      systemStatusList:
        $ref: '#/definitions/SystemStatusList'
    description: Delete definition for SystemStatusMessage
  SystemStatusMessageGet:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      systemStatusFilter:
        $ref: '#/definitions/SystemStatusFilter'
    description: Get definition for SystemStatusMessage
  SystemStatusMessagePost:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      systemStatusList:
        $ref: '#/definitions/SystemStatusList'
    description: Post definition for SystemStatusMessage
  SystemStatusMessagePut:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      systemStatusFilter:
        $ref: '#/definitions/SystemStatusFilter'
      systemStatusList:
        $ref: '#/definitions/SystemStatusList'
    description: Put definition for SystemStatusMessage
  SystemStatusMessageResponse:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      systemStatusList:
        $ref: '#/definitions/SystemStatusList'
    description: Response definition for SystemStatusMessage
  Transaction:
    type: object
    properties:
      transactionId:
        type: string
        description: "The transaction ID is a persistent and unique identifier for each transaction. It must be unique within the account as it is used for matching purposes. Transactions should always be returned with the same ID, even if transactional information has changed (type, amount, description, date, etc.) since the previous account data pull. "
      accountId:
        type: string
        description: 'The account ID is a persistent and unique identifier for the account. It must be unique for all users across the institution and remain the same over the life of the account. '
      accountType:
        type: string
        description: "Checking account, i.e., checks can be written against the account. Money market accounts can be included here or in money markets.  Its up to the institution. Savings and club accounts.  This can optionally include CDs, but its up to the institution. Auto loans, etc. Loans that are NOT lines of credit or credit cards. Loan behind the credit card.  Note the actual card information in the card object. Loan that is a line of credit but NOT a credit card. Loan that is made in exchange for taking title of property. Investment accounts such as brokerage and this can optionally include CDs and/or money markets, but its up to the institution. This account is a special type of checking account connected to a pre-paid card. Other account type. Loan that is made in installments. Loan is typically unsecured. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Installment. Loan that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Commercial. Line of Credit that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of CommercialLineOfCredit. A general ledger account of the financial institution. A loan account type that has not been prevously defined. This enumeration is considered deprecated. Recommend using account type loan and subAccount of OtherLoan. "
        enum:
        - Checking
        - Savings
        - Loan
        - CreditCard
        - LineOfCredit
        - Mortgage
        - Investment
        - PrePaidCard
        - Other
        - Installment
        - CommercialLoan
        - CommercialLineOfCredit
        - GeneralLedger
        - OtherLoan
      accountSubType:
        type: string
        description: 'The account subtype identifies the specific account type that the back end system will recognize. '
      type:
        type: string
        description: "The transaction type simply reflects whether the account was debited or credited. For comment-only transactions, the value can be either Debit or Credit and the transaction amount can be null, not return or 0.00. "
        enum:
        - Debit
        - Credit
      amount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      description:
        type: string
        description: 'The description represents the memo of the transaction. '
      checkNumber:
        type: string
        description: 'The number on the face of the check indicating the id of that check in a series. '
      dateTimePosted:
        type: string
        format: datetime
        description: "The date/time posted is the date the transaction was posted to the account. If this date is unavailable, it is acceptable to use the date that the transaction took place.  The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) and yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. "
      dateTimeEffective:
        type: string
        format: datetime
        description: 'The date/time effective is the date on which the transaction took place. The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) and yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      status:
        type: string
        description: "An enumeration of possible statuses for a transaction request. Transaction is posted. Transaction is pending. Transaction was denied. Transaction was Voided. Transaction is on hold. See Hold message for additional information on the hold. Other transaction status, see "
        enum:
        - Posted
        - Pending
        - Denied
        - Void
        - Hold
        - Other
      otherTransactionStatus:
        type: string
        description: 'Free form text that describes the transaction type "Other" when it is set in the status element. '
      postedActualBalance:
        $ref: '#/definitions/Account_accountEscheatAmount'
      postedAvailableBalance:
        $ref: '#/definitions/Account_accountEscheatAmount'
      principalAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      interestAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      transactionFeeList:
        $ref: '#/definitions/Transaction_transactionFeeList'
      merchantCategoryCode:
        type: string
        description: 'A four-digit number used by the payment card industry to classify businesses into market segments by the type of goods or services they provide. The MCC is assigned based on the supplierâ€™s primary line of business. Only applies to debit or credit card purchases. List should be based on standard merchant category codes. '
      category:
        type: string
        description: 'The default or overridden category for personal financial management. '
      source:
        type: string
        description: 'System or delivery channel that was the origination source for the transaction. Automated Clearing House. Automated Teller Machine. Interactive Voice Response. Point Of Sale. '
        enum:
        - Ach
        - Adjustment
        - Atm
        - BalanceTransfer
        - BillPay
        - BulkDeposit
        - Cash
        - Check
        - Fee
        - HomeBanking
        - Insurance
        - InterestEarned
        - InterestPaid
        - InterestRefund
        - Ivr
        - Kiosk
        - MobileBanking
        - Other
        - Payroll
        - PinPurchase
        - POS
        - SharedBranch
        - Signature
        - Wire
        - Withholding
      escrowAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      transactionArtifactId:
        $ref: '#/definitions/Artifact_artifactId'
      transactionArtifactUri:
        type: string
        format: anyURI
        description: 'The URI location of the artifact image. '
      customData:
        $ref: '#/definitions/AccessProfile_customData'
      noteIdList:
        $ref: '#/definitions/NotesFilter_noteIdList'
      entryMethod:
        type: string
        description: "Method used for the entry of the transaction at the source of the transaction. Value may be a code or a description dependent upon the institutional usage. As example entry methods may include but not limited to Manual Entry, Bar Code, Contactless Chip. "
    description: "If there is a start date where provided or required, the transactions collection/array should remain empty if no transactions were posted during the provided date period. In this case, the data provider should still return all other account information. "
  TransactionCategory:
    type: string
    description: 'The default or overridden category for personal financial management. '
  TransactionFee:
    type: object
    properties:
      transactionFeeId:
        type: string
        description: 'Unique ID to identify the transaction fee in the back end system. '
      transactionFeeDateTimePosted:
        type: string
        format: datetime
        description: "The date/time posted is the date the transaction fee was posted to the account. If this date is unavailable, it is acceptable to use the date that the transaction took place.  The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) and yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. If omitted then the transaction fee was posted at the same time as the transaction. "
      transactionfeeAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      transactionFeeCode:
        type: string
        description: 'FI-defined code that identifies the fee in the core system. '
      transactionFeeDescription:
        type: string
        description: 'FI-defined description for the fee. '
    description: 'Details related to transaction fees. '
  TransactionId:
    type: string
    description: "The transaction ID is a persistent and unique identifier for each transaction. It must be unique within the account as it is used for matching purposes. Transactions should always be returned with the same ID, even if transactional information has changed (type, amount, description, date, etc.) since the previous account data pull. "
  TransactionList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      transaction:
        type: array
        items:
          $ref: '#/definitions/Transaction'
    description: 'The transaction collection/array contains all the transactions for the given account. '
  TransactionSource:
    type: string
    description: 'System or delivery channel that was the origination source for the transaction. Automated Clearing House. Automated Teller Machine. Interactive Voice Response. Point Of Sale. '
    enum:
    - Ach
    - Adjustment
    - Atm
    - BalanceTransfer
    - BillPay
    - BulkDeposit
    - Cash
    - Check
    - Fee
    - HomeBanking
    - Insurance
    - InterestEarned
    - InterestPaid
    - InterestRefund
    - Ivr
    - Kiosk
    - MobileBanking
    - Other
    - Payroll
    - PinPurchase
    - POS
    - SharedBranch
    - Signature
    - Wire
    - Withholding
  TransactionStatus:
    type: string
    description: "An enumeration of possible statuses for a transaction request. Transaction is posted. Transaction is pending. Transaction was denied. Transaction was Voided. Transaction is on hold. See Hold message for additional information on the hold. Other transaction status, see "
    enum:
    - Posted
    - Pending
    - Denied
    - Void
    - Hold
    - Other
  TransactionFilter:
    type: object
    properties:
      transactionIdList:
        $ref: '#/definitions/HoldFilter_transactionIdList'
      partyIdList:
        $ref: '#/definitions/Account_partyIdList'
      accountIdList:
        $ref: '#/definitions/AccountFilter_accountIdList'
      accountStatusList:
        $ref: '#/definitions/AccountFilter_accountStatusList'
      transactionType:
        type: string
        description: "The transaction type simply reflects whether the account was debited or credited. For comment-only transactions, the value can be either Debit or Credit and the transaction amount can be null, not return or 0.00. "
        enum:
        - Debit
        - Credit
      transactionStatusList:
        $ref: '#/definitions/TransactionFilter_transactionStatusList'
      transactionMinAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      transactionMaxAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      descriptionContains:
        type: string
        description: 'Apply filter to transactions with a description containing the text in this field. '
      checkNumberList:
        $ref: '#/definitions/TransactionFilter_checkNumberList'
      transactionEffectiveDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
      transactionPostedDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
      categoryList:
        $ref: '#/definitions/TransactionFilter_categoryList'
      sourceList:
        $ref: '#/definitions/TransactionFilter_sourceList'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
      accountIdentificationList:
        $ref: '#/definitions/AccountFilter_accountIdentificationList'
    description: 'The list of filter options for services requesting transaction data. The options can be used in combination or by themselves. It is up to the data source to either return or affect the data requested or return a standard error identifying why the request was rejected. '
  TransactionMessageDelete:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      transactionFilter:
        $ref: '#/definitions/TransactionFilter'
      transactionList:
        $ref: '#/definitions/TransactionList'
    description: Delete definition for TransactionMessage
  TransactionMessageGet:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      transactionFilter:
        $ref: '#/definitions/TransactionFilter'
    description: Get definition for TransactionMessage
  TransactionMessagePost:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      transactionList:
        $ref: '#/definitions/TransactionList'
    description: Post definition for TransactionMessage
  TransactionMessagePut:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      transactionFilter:
        $ref: '#/definitions/TransactionFilter'
      transactionList:
        $ref: '#/definitions/TransactionList'
    description: Put definition for TransactionMessage
  TransactionMessageResponse:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      transactionList:
        $ref: '#/definitions/TransactionList'
    description: Response definition for TransactionMessage
  TransferFilter:
    type: object
    properties:
      occurrenceIdList:
        $ref: '#/definitions/BillPaymentFilter_occurrenceIdList'
      recurringIdList:
        $ref: '#/definitions/BillPaymentFilter_recurringIdList'
      transferCompletedDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
      accountIDList:
        $ref: '#/definitions/AccountFilter_accountIdList'
      accountStatusList:
        $ref: '#/definitions/AccountFilter_accountStatusList'
      partyIdList:
        $ref: '#/definitions/Account_partyIdList'
      relationshipIdList:
        $ref: '#/definitions/AccountFilter_relationshipIdList'
      occurrenceStatusList:
        $ref: '#/definitions/BillPaymentFilter_occurrenceStatusList'
      recurringStatusList:
        $ref: '#/definitions/BillPaymentFilter_recurringStatusList'
      minAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      maxAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      batchIdList:
        $ref: '#/definitions/BillPaymentFilter_batchIdList'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
      accountIdentificationList:
        $ref: '#/definitions/AccountFilter_accountIdentificationList'
      includeNotesFlag:
        type: boolean
        description: "If this is not provided, it will not return notes. If it is provided and its true, it will return all active non-expired notes. "
    description: 'The list of filter options for services requesting transfer history. '
  TransferOccurrence:
    type: object
    properties:
      occurrenceId:
        type: string
        description: 'The occurrence ID to uniquely identify the occurrence of a payment or transfer. '
      recurringId:
        type: string
        description: 'ID to uniquely identify a recurring payment or transfer request. '
      occurrenceAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      occurrenceAmountDetailList:
        $ref: '#/definitions/BillPaymentOccurrence_occurrenceAmountDetailList'
      occurrenceFromAccount:
        $ref: '#/definitions/BillPaymentOccurrence_occurrenceFromAccount'
      occurrenceToAccount:
        $ref: '#/definitions/BillPaymentOccurrence_occurrenceFromAccount'
      occurrenceStatus:
        type: string
        description: "This is the enumeration of statuses for payments or transfers. The payment or transfer is in the process for immediate or future payment and is cancellable by the party since its not InProcess yet. The payment or transfer is in process and is no longer cancellable, but it has not been sent. A payment or transfer was requested to be cancelled by the party but has not yet been cancelled. A payment or transfer has been cancelled at the request of the originating partys financial institution. A payment or transfer has been cancelled at the request of the processor. Example is case of bill pay this would be the bill payment processor. A payment or transfer has been cancelled. Payment or transfer has been sent to the payee but has not been received yet. The payment or transfer transaction has been cleared/completed by the financial institution. The payment or transfer was declined (for instance, in the case that a debit or card was used as the funding source). The funds have been transferred to the payment processor but have not yet arrived at the payment processor. The funds for the payment or transfer have been received by the payment processor but the actual payment hasnt cleared at the payee. The payment or transfer has been held by the payment processor and has not been sent to the payee. The payment or transfer has attempted to clear the financial institution account but there was not enough funds available. Payment or transfer was returned by the payee and not cleared. Payment or transfer was scheduled for recurring payment but has been suspended until taken out of suspended status. "
        enum:
        - Scheduled
        - InProcess
        - CancelRequestedByParty
        - CancelRequestedByFinancialInstitution
        - CancelRequestedByProcessor
        - Cancelled
        - Sent
        - Completed
        - Declined
        - FundsOutbound
        - FundsCleared
        - Held
        - InsufficientFunds
        - Returned
        - Suspended
      fundsWithdrawalType:
        type: string
        description: 'This is the enumeration of statuses for a recurring payment or transfer request . The funds will be pulled out of the account at the time that the payment or transfer request is made each time that the occurrence happens.  For example in a good funds model in bill payment. The funds will be pulled out of the account at the time that the payment or transfer clears the account each time that the occurrence happens.  For example a check. '
        enum:
        - WhenRequested
        - WhenCleared
      occurrenceMemo:
        type: string
        description: 'The memo represents a short description that can be applied to the comment of the transaction or printed on a check. '
      estimatedProcessDateTime:
        type: string
        format: datetime
        description: 'The date on which to process the payment or transfer.  This date can be in the future. The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      createdDateTime:
        type: string
        format: datetime
        description: 'The date that the user submitted the payment or transfer. The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      processingStartedDateTime:
        type: string
        format: datetime
        description: 'The date on which the payment or transfer processing started. The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      processedDateTime:
        type: string
        format: datetime
        description: 'The date on which the payment or transfer was actually processed by the system. The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      completedDateTime:
        type: string
        format: datetime
        description: 'Date on which the core completed the payment or transfer. The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      lastUpdatedDateTime:
        type: string
        format: datetime
        description: 'Date of the last known status of the payment or transfer. The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      occurrenceConfirmationCode:
        type: string
        description: 'Unique confirmation code for the requested payment or transfer. '
      queuedForPosting:
        type: boolean
        description: 'Indicates whether the payment or transfer is pending for posting until system is on-line. '
      note:
        type: string
        description: 'A users "note to self." '
      batchId:
        type: string
        description: 'The BatchId is a persistent and unique identifier for a group of payments or transfers processed at the same time. '
      occurrenceType:
        type: string
        description: "This is the enumeration of transfer occurrence types for a payment or transfer request . Transfer funds between accounts generally an intra-instiution transfer. Transfer funds to a check. For example, member requests a check payable to the member to be mailed to the members home address. Transfer funds to an account at another financial institution for purposes of validating the external account. For example, use with account micro deposits via ACH. "
        enum:
        - AccountToAccount
        - CheckWithdrawal
        - AccountValidation
      customData:
        $ref: '#/definitions/AccessProfile_customData'
      achStandardEntryClass:
        type: string
        description: 'Acknowledgment Entry. Financial EDI Acknowledgment. Accounts Receivable Entry. Back Office Conversion Entry. Corporate Credit Debit Entry. Customer-Initiated Entry. Notification of Change or Refused Notification of Change. Corporate Trade Exchange. Death Notification Entry. Automated Enrollment Entry. International ACH Transaction. Machine Transfer Entry. Point of Purchase Entry. Prearranged Payment and Deposit Entry. Re-Presented Check Entry. Telephone Initiated Entry. Truncated Entry. Truncated Entries Exchange. Internet Initiated Entry. Destroyed Check Entry. '
        enum:
        - ACK
        - ATX
        - ARC
        - BOC
        - CCD
        - CIE
        - COR
        - CTX
        - DNE
        - ENR
        - IAT
        - MTE
        - POP
        - PPD
        - RCK
        - TEL
        - TRC
        - TRX
        - WEB
        - XCK
      fromCard:
        $ref: '#/definitions/TransferOccurrence_fromCard'
      toCard:
        $ref: '#/definitions/TransferOccurrence_fromCard'
      noteList:
        $ref: '#/definitions/Account_accountNoteList'
      achPrenoteIndicator:
        type: boolean
        description: 'ACH Prenote Indicator is set to True when an alert of the transfer will be sent to the receiving institution in advance of the actual transfer. '
    description: 'Single occurrence of the transfer. '
  TransferOccurrenceList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      transferOccurrence:
        type: array
        description: 'Details related to a specific transfer. '
        items:
          $ref: '#/definitions/TransferOccurrence'
    description: 'List of transfers returned from a data pull that was based on applied filters. '
  TransferOccurrenceMessageDelete:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      transferFilter:
        $ref: '#/definitions/TransferFilter'
      transferOccurrenceList:
        $ref: '#/definitions/TransferOccurrenceList'
    description: Delete definition for TransferOccurrenceMessage
  TransferOccurrenceMessageGet:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      transferFilter:
        $ref: '#/definitions/TransferFilter'
    description: Get definition for TransferOccurrenceMessage
  TransferOccurrenceMessagePost:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      transferOccurrenceList:
        $ref: '#/definitions/TransferOccurrenceList'
    description: Post definition for TransferOccurrenceMessage
  TransferOccurrenceMessagePut:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      transferFilter:
        $ref: '#/definitions/TransferFilter'
      transferOccurrenceList:
        $ref: '#/definitions/TransferOccurrenceList'
    description: Put definition for TransferOccurrenceMessage
  TransferOccurrenceMessageResponse:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      transferOccurrenceList:
        $ref: '#/definitions/TransferOccurrenceList'
    description: Response definition for TransferOccurrenceMessage
  TransferRecurring:
    type: object
    properties:
      recurringId:
        type: string
        description: 'ID to uniquely identify a recurring payment or transfer request. '
      recurringAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      recurringAmountDetailList:
        $ref: '#/definitions/BillPaymentOccurrence_occurrenceAmountDetailList'
      recurringFromAccount:
        $ref: '#/definitions/BillPaymentOccurrence_occurrenceFromAccount'
      recurringToAccount:
        $ref: '#/definitions/BillPaymentOccurrence_occurrenceFromAccount'
      recurringStatus:
        type: string
        description: "This is the enumeration of statuses for a recurring payment or transfer request . The payment or transfer request is in process for immediate or future payment and is still cancellable by the party since its not InProcess yet. The recurring payment or transfer request has been scheduled. A recurring payment or transfer request was requested to be cancelled by the party, but has not yet been cancelled. A recurring payment or transfer request was requested to be cancelled by the partys financial institution. A recurring payment or transfer request was requested to be cancelled by the partys payment provider. A recurring payment or transfer request has been cancelled. All recurring payments or transfer requests have been completed. Payment or transfer request was scheduled for recurring payment but has been suspended until taken out of suspended status.  This status might be used if a party wants to keep the payment/transfer request in the system but temporarily stop payment or transfers from occurring. "
        enum:
        - Requested
        - Active
        - CancelRequestedByParty
        - CancelRequestedByFinancialInstitution
        - CancelRequestedByPaymentProvider
        - Cancelled
        - Completed
        - Suspended
      recurringMemo:
        type: string
        description: 'The memo represents a short description that can be applied to each comment of the transaction or printed on a check. '
      isElectronic:
        type: boolean
        description: "True for electronic processing, false for sending a paper check. "
      isOpenEnded:
        type: boolean
        description: 'True for payments with no end date; false if there is an end date for payment. '
      isCompleted:
        type: boolean
        description: 'True if the recurring payment or transfer has not been deleted and the end date has passed; false if the recurring payment or transfer has not been deleted and the end date has not been reached. '
      isUserDeleted:
        type: boolean
        description: 'True if the recurring payment or transfer has been deleted; false if not deleted. '
      createdByFiUserId:
        type: string
        description: "FiUserId is a unique identifier for the credential group and is readable by the person. The person types this into systems to gain access, also using their password, PIN or whatever else is required to gain access. "
      frequency:
        type: string
        description: 'Frequency of the recurring transfer or payment. '
        enum:
        - AmortizedSchedule
        - Annual
        - AtMaturity
        - Bimonthly
        - Biweekly
        - BiweeklySkipFirst
        - BiweeklySkipLast
        - Daily
        - EventTrigger
        - Hourly
        - Immediate
        - Monthly
        - None
        - OneTime
        - Other
        - PerUse
        - Quarterly
        - SemiAnnual
        - SemiMonthly
        - Triannual
        - Weekly
        - WeeklySkipFirst
        - WeeklySkipLast
        - XDays
        - XMonths
        - XYears
      totalPaymentCount:
        type: integer
        description: 'The total number of recurring payments to be made. '
      paymentsLeft:
        type: integer
        description: 'The number of remaining recurring payments to be made. '
      fundsWithdrawalType:
        type: string
        description: 'This is the enumeration of statuses for a recurring payment or transfer request . The funds will be pulled out of the account at the time that the payment or transfer request is made each time that the occurrence happens.  For example in a good funds model in bill payment. The funds will be pulled out of the account at the time that the payment or transfer clears the account each time that the occurrence happens.  For example a check. '
        enum:
        - WhenRequested
        - WhenCleared
      createRequestDateTime:
        type: string
        format: datetime
        description: "The date on which the recurring transfer or payment request was created. The date/time should be ISO 8601 UTC format:  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. "
      firstScheduledDateTime:
        type: string
        format: datetime
        description: 'The first date of recurring payment or transfer. The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      lastModifiedDate:
        type: string
        format: datetime
        description: 'The last modified date of the recurring payment or transfer schedule. The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      nextScheduledDateTime:
        type: string
        format: datetime
        description: 'The next date of the recurring payment or transfer schedule. The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      scheduledEndDateTime:
        type: string
        format: datetime
        description: 'The last possible date and time that a scheduled transfer or payment may be executed. The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      completedDateTime:
        type: string
        format: datetime
        description: 'The date that all the scheduled transfers or payments are completed. The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      recurringConfirmationCode:
        type: string
        description: 'Unique confirmation code for the scheduled recurring transfer or payment. '
      recurringOccurrenceIdList:
        $ref: '#/definitions/BillPaymentFilter_occurrenceIdList'
      initialAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      finalAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
      achStandardEntryClass:
        type: string
        description: 'Acknowledgment Entry. Financial EDI Acknowledgment. Accounts Receivable Entry. Back Office Conversion Entry. Corporate Credit Debit Entry. Customer-Initiated Entry. Notification of Change or Refused Notification of Change. Corporate Trade Exchange. Death Notification Entry. Automated Enrollment Entry. International ACH Transaction. Machine Transfer Entry. Point of Purchase Entry. Prearranged Payment and Deposit Entry. Re-Presented Check Entry. Telephone Initiated Entry. Truncated Entry. Truncated Entries Exchange. Internet Initiated Entry. Destroyed Check Entry. '
        enum:
        - ACK
        - ATX
        - ARC
        - BOC
        - CCD
        - CIE
        - COR
        - CTX
        - DNE
        - ENR
        - IAT
        - MTE
        - POP
        - PPD
        - RCK
        - TEL
        - TRC
        - TRX
        - WEB
        - XCK
      noteList:
        $ref: '#/definitions/Account_accountNoteList'
      achPrenoteIndicator:
        type: boolean
        description: 'ACH Prenote Indicator is set to True when an alert of the transfer will be sent to the receiving institution in advance of the actual transfer. '
    description: 'Single recurring transfer. '
  TransferRecurringList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      transferRecurring:
        type: array
        description: 'Details related to a specific recurring transfer. '
        items:
          $ref: '#/definitions/TransferRecurring'
    description: 'List of recurring transfers returned from a data pull that was based on applied filters. '
  TransferRecurringMessageDelete:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      transferFilter:
        $ref: '#/definitions/TransferFilter'
      transferRecurringList:
        $ref: '#/definitions/TransferRecurringList'
    description: Delete definition for TransferRecurringMessage
  TransferRecurringMessageGet:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      transferFilter:
        $ref: '#/definitions/TransferFilter'
    description: Get definition for TransferRecurringMessage
  TransferRecurringMessagePost:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      transferRecurringList:
        $ref: '#/definitions/TransferRecurringList'
    description: Post definition for TransferRecurringMessage
  TransferRecurringMessagePut:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      transferFilter:
        $ref: '#/definitions/TransferFilter'
      transferRecurringList:
        $ref: '#/definitions/TransferRecurringList'
    description: Put definition for TransferRecurringMessage
  TransferRecurringMessageResponse:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      transferRecurringList:
        $ref: '#/definitions/TransferRecurringList'
    description: Response definition for TransferRecurringMessage
  User:
    type: object
    properties:
      userId:
        type: string
        description: 'The unique identifier created by the system and or the user for identification. '
      processorSessionId:
        type: string
        description: "The processor session ID is a unique identifier for the user, based on the connection to the processor or core system for the message being performed. processorSessionId is depreciated in favor of sessionId in the MessageContext. "
      userIdType:
        type: string
        description: "The user ID is an employee ID for logging into the network. The user ID is a vendor employee ID for logging into the network. The user ID is essentially unknown, i.e. no credentials are required. Business rules will have been applied to either prevent or allow anonymous access to the service in question. The credential group identifier of a Financial Institution party that was used to access the service.  See credential group schema. The system user identifier of a system account that was used to access the service. A security token which was created from an identity provider. The user identification was not one of the above formats. "
        enum:
        - EmployeeId
        - VendorEmployeeId
        - Anonymous
        - FIUserId
        - SystemAccountId
        - SecurityToken
        - Custom
      partyId:
        type: string
        description: 'The party ID is a persistent and unique identifier for the party not related to the accounts they own but tied to that person or organization. It should be unique for all parties across the institution and remain the same over the life of the relationship with the financial institution. '
      customData:
        $ref: '#/definitions/AccessProfile_customData'
  UserIdType:
    type: string
    description: "The user ID is an employee ID for logging into the network. The user ID is a vendor employee ID for logging into the network. The user ID is essentially unknown, i.e. no credentials are required. Business rules will have been applied to either prevent or allow anonymous access to the service in question. The credential group identifier of a Financial Institution party that was used to access the service.  See credential group schema. The system user identifier of a system account that was used to access the service. A security token which was created from an identity provider. The user identification was not one of the above formats. "
    enum:
    - EmployeeId
    - VendorEmployeeId
    - Anonymous
    - FIUserId
    - SystemAccountId
    - SecurityToken
    - Custom
  UserList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      user:
        type: array
        description: 'Collection of user data. '
        items:
          $ref: '#/definitions/User'
  UserFilter:
    type: object
    properties:
      userIdList:
        $ref: '#/definitions/CredentialGroupFilter_userIdList'
      userIdTypeList:
        $ref: '#/definitions/CredentialGroupFilter_userIdTypeList'
      partyIdList:
        $ref: '#/definitions/Account_partyIdList'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
    description: "The list of access profile IDs that should have their associated access profiles either returned or affected by a read, update or delete account request. "
  UserMessageDelete:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      userFilter:
        $ref: '#/definitions/UserFilter'
      userList:
        $ref: '#/definitions/UserList'
    description: Delete definition for UserMessage
  UserMessageGet:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      userFilter:
        $ref: '#/definitions/UserFilter'
    description: Get definition for UserMessage
  UserMessagePost:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      userList:
        $ref: '#/definitions/UserList'
    description: Post definition for UserMessage
  UserMessagePut:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      userFilter:
        $ref: '#/definitions/UserFilter'
      userList:
        $ref: '#/definitions/UserList'
    description: Put definition for UserMessage
  UserMessageResponse:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      userList:
        $ref: '#/definitions/UserList'
    description: Response definition for UserMessage
  Wire:
    type: object
    properties:
      occurrenceId:
        type: string
        description: 'The occurrence ID to uniquely identify the occurrence of a payment or transfer. '
      recurringId:
        type: string
        description: 'ID to uniquely identify a recurring payment or transfer request. '
      occurrenceAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      occurrenceAmountDetailList:
        $ref: '#/definitions/BillPaymentOccurrence_occurrenceAmountDetailList'
      occurrenceFromAccount:
        $ref: '#/definitions/BillPaymentOccurrence_occurrenceFromAccount'
      occurrenceToAccount:
        $ref: '#/definitions/BillPaymentOccurrence_occurrenceFromAccount'
      occurrenceStatus:
        type: string
        description: "This is the enumeration of statuses for payments or transfers. The payment or transfer is in the process for immediate or future payment and is cancellable by the party since its not InProcess yet. The payment or transfer is in process and is no longer cancellable, but it has not been sent. A payment or transfer was requested to be cancelled by the party but has not yet been cancelled. A payment or transfer has been cancelled at the request of the originating partys financial institution. A payment or transfer has been cancelled at the request of the processor. Example is case of bill pay this would be the bill payment processor. A payment or transfer has been cancelled. Payment or transfer has been sent to the payee but has not been received yet. The payment or transfer transaction has been cleared/completed by the financial institution. The payment or transfer was declined (for instance, in the case that a debit or card was used as the funding source). The funds have been transferred to the payment processor but have not yet arrived at the payment processor. The funds for the payment or transfer have been received by the payment processor but the actual payment hasnt cleared at the payee. The payment or transfer has been held by the payment processor and has not been sent to the payee. The payment or transfer has attempted to clear the financial institution account but there was not enough funds available. Payment or transfer was returned by the payee and not cleared. Payment or transfer was scheduled for recurring payment but has been suspended until taken out of suspended status. "
        enum:
        - Scheduled
        - InProcess
        - CancelRequestedByParty
        - CancelRequestedByFinancialInstitution
        - CancelRequestedByProcessor
        - Cancelled
        - Sent
        - Completed
        - Declined
        - FundsOutbound
        - FundsCleared
        - Held
        - InsufficientFunds
        - Returned
        - Suspended
      fundsWithdrawalType:
        type: string
        description: 'This is the enumeration of statuses for a recurring payment or transfer request . The funds will be pulled out of the account at the time that the payment or transfer request is made each time that the occurrence happens.  For example in a good funds model in bill payment. The funds will be pulled out of the account at the time that the payment or transfer clears the account each time that the occurrence happens.  For example a check. '
        enum:
        - WhenRequested
        - WhenCleared
      occurrenceMemo:
        type: string
        description: 'The memo represents a short description that can be applied to the comment of the transaction or printed on a check. '
      estimatedProcessDateTime:
        type: string
        format: datetime
        description: 'The date on which to process the payment or transfer.  This date can be in the future. The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      createdDateTime:
        type: string
        format: datetime
        description: 'The date that the user submitted the payment or transfer. The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      processingStartedDateTime:
        type: string
        format: datetime
        description: 'The date on which the payment or transfer processing started. The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      processedDateTime:
        type: string
        format: datetime
        description: 'The date on which the payment or transfer was actually processed by the system. The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      completedDateTime:
        type: string
        format: datetime
        description: 'Date on which the core completed the payment or transfer. The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      lastUpdatedDateTime:
        type: string
        format: datetime
        description: 'Date of the last known status of the payment or transfer. The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      occurrenceConfirmationCode:
        type: string
        description: 'Unique confirmation code for the requested payment or transfer. '
      queuedForPosting:
        type: boolean
        description: 'Indicates whether the payment or transfer is pending for posting until system is on-line. '
      note:
        type: string
        description: 'A users "note to self." '
      batchId:
        type: string
        description: 'The BatchId is a persistent and unique identifier for a group of payments or transfers processed at the same time. '
      occurrenceType:
        type: string
        description: "This is the enumeration of transfer occurrence types for a payment or transfer request . Transfer funds between accounts generally an intra-instiution transfer. Transfer funds to a check. For example, member requests a check payable to the member to be mailed to the members home address. Transfer funds to an account at another financial institution for purposes of validating the external account. For example, use with account micro deposits via ACH. "
        enum:
        - AccountToAccount
        - CheckWithdrawal
        - AccountValidation
      customData:
        $ref: '#/definitions/AccessProfile_customData'
      achStandardEntryClass:
        type: string
        description: 'Acknowledgment Entry. Financial EDI Acknowledgment. Accounts Receivable Entry. Back Office Conversion Entry. Corporate Credit Debit Entry. Customer-Initiated Entry. Notification of Change or Refused Notification of Change. Corporate Trade Exchange. Death Notification Entry. Automated Enrollment Entry. International ACH Transaction. Machine Transfer Entry. Point of Purchase Entry. Prearranged Payment and Deposit Entry. Re-Presented Check Entry. Telephone Initiated Entry. Truncated Entry. Truncated Entries Exchange. Internet Initiated Entry. Destroyed Check Entry. '
        enum:
        - ACK
        - ATX
        - ARC
        - BOC
        - CCD
        - CIE
        - COR
        - CTX
        - DNE
        - ENR
        - IAT
        - MTE
        - POP
        - PPD
        - RCK
        - TEL
        - TRC
        - TRX
        - WEB
        - XCK
      wireTransferType:
        type: string
        description: 'Wire transfer type. '
        enum:
        - Domestic
        - Foreign
        - Investment
        - Escrow
      wireTransferSpecialInstructions:
        type: string
        description: "Special instructions for wire transfer.  This field, while optional, is required when the wire transfer is of International type and destined for certain foreign nations, according to federal regulations. "
      escrowNumber:
        type: string
        description: 'Escrow number for wire transfer type escrow. '
      escrowOfficerName:
        type: string
        description: 'Escrow officer name for wire transfer type escrow. '
      disclosuresConsented:
        type: boolean
        description: "Any and all disclosures, terms and conditions, etc., have been provided and consented to by the initiator of the wire.  Consent is required by federal regulation for wire transfer type International. "
      beneficiaryName:
        $ref: '#/definitions/Contact_contactPersonName'
      beneficiaryAddress:
        $ref: '#/definitions/Account_externalAccountBankAddress'
  WireList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      wire:
        type: array
        items:
          $ref: '#/definitions/Wire'
    description: 'List of wires. '
  WireTransferType:
    type: string
    enum:
    - Domestic
    - Foreign
    - Investment
    - Escrow
  WireFilter:
    type: object
    properties:
      occurrenceIdList:
        $ref: '#/definitions/BillPaymentFilter_occurrenceIdList'
      recurringIdList:
        $ref: '#/definitions/BillPaymentFilter_recurringIdList'
      transferCompletedDateRange:
        $ref: '#/definitions/AccessProfileFilter_createAccessDateRange'
      accountIDList:
        $ref: '#/definitions/AccountFilter_accountIdList'
      accountStatusList:
        $ref: '#/definitions/AccountFilter_accountStatusList'
      partyIdList:
        $ref: '#/definitions/Account_partyIdList'
      relationshipIdList:
        $ref: '#/definitions/AccountFilter_relationshipIdList'
      occurrenceStatusList:
        $ref: '#/definitions/BillPaymentFilter_occurrenceStatusList'
      recurringStatusList:
        $ref: '#/definitions/BillPaymentFilter_recurringStatusList'
      minAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      maxAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      batchIdList:
        $ref: '#/definitions/BillPaymentFilter_batchIdList'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
      accountIdentificationList:
        $ref: '#/definitions/AccountFilter_accountIdentificationList'
      includeNotesFlag:
        type: boolean
        description: "If this is not provided, it will not return notes. If it is provided and its true, it will return all active non-expired notes. "
      wireTransferTypeList:
        $ref: '#/definitions/WireFilter_wireTransferTypeList'
      escrowNumber:
        type: string
        description: "Wire filter for escrow number that should be returned or affected by a read, update or delete request. "
      escrowOfficerName:
        type: string
        description: "Wire filter for escrow officer name that should be returned or affected by a read, update or delete request. "
      toAccountMicrAccountNumber:
        type: string
        description: 'The account number portion of a draft or line of credit MICR line. '
      toAccountRoutingNumber:
        type: string
        description: 'Routing number for the destination account. See occurrenceToAccount. '
      fromAccountMicrAccountNumber:
        type: string
        description: 'The account number portion of a draft or line of credit MICR line. '
      fromAccountRoutingNumber:
        type: string
        description: 'Routing number of the orgination account. See occurrenceFromAccount. '
      externalAccountSWIFTCode:
        type: string
        description: 'SWIFTCode for wire transfer. '
      externalAccountIBANCode:
        type: string
        description: "IBAN of external institution, used for wire transfers.  This replaces the micrAccountNumber for certain financial institutions in foreign nations, and no routing or SWIFT code is necessary when an IBAN (and potentially bank code, below) is provided to identify the account. "
      externalAccountBankCode:
        type: string
        description: "Bank code, required (in addiiton to other identitiers) for institutions in certain foreign nations, used for wire transfers. "
    description: 'The list of options to filter wire transfers. '
  WireMessageDelete:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      wireFilter:
        $ref: '#/definitions/WireFilter'
      wireList:
        $ref: '#/definitions/WireList'
    description: Delete definition for WireMessage
  WireMessageGet:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      wireFilter:
        $ref: '#/definitions/WireFilter'
    description: Get definition for WireMessage
  WireMessagePost:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      wireList:
        $ref: '#/definitions/WireList'
    description: Post definition for WireMessage
  WireMessagePut:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      wireFilter:
        $ref: '#/definitions/WireFilter'
      wireList:
        $ref: '#/definitions/WireList'
    description: Put definition for WireMessage
  WireMessageResponse:
    type: object
    properties:
      messageContext:
        $ref: '#/definitions/MessageContext'
      wireList:
        $ref: '#/definitions/WireList'
    description: Response definition for WireMessage
  AccessProfileMessage:
    type: object
    properties:
      accessProfileMessage:
        $ref: '#/definitions/AccessProfileMessagePut'
  inline_response_200:
    type: object
    properties:
      accessProfileMessage:
        $ref: '#/definitions/AccessProfileMessageResponse'
  AccessProfileMessage_1:
    type: object
    properties:
      accessProfileMessage:
        $ref: '#/definitions/AccessProfileMessagePost'
  AccessProfileMessage_2:
    type: object
    properties:
      accessProfileMessage:
        $ref: '#/definitions/AccessProfileMessageDelete'
  AccessProfileMessage_3:
    type: object
    properties:
      accessProfileMessage:
        $ref: '#/definitions/AccessProfileMessageGet'
  AccountMessage:
    type: object
    properties:
      accountMessage:
        $ref: '#/definitions/AccountMessagePut'
  inline_response_200_1:
    type: object
    properties:
      accountMessage:
        $ref: '#/definitions/AccountMessageResponse'
  AccountMessage_1:
    type: object
    properties:
      accountMessage:
        $ref: '#/definitions/AccountMessagePost'
  AccountMessage_2:
    type: object
    properties:
      accountMessage:
        $ref: '#/definitions/AccountMessageDelete'
  AccountMessage_3:
    type: object
    properties:
      accountMessage:
        $ref: '#/definitions/AccountMessageGet'
  ActivityMessage:
    type: object
    properties:
      activityMessage:
        $ref: '#/definitions/ActivityMessagePut'
  inline_response_200_2:
    type: object
    properties:
      activityMessage:
        $ref: '#/definitions/ActivityMessageResponse'
  ActivityMessage_1:
    type: object
    properties:
      activityMessage:
        $ref: '#/definitions/ActivityMessagePost'
  ActivityMessage_2:
    type: object
    properties:
      activityMessage:
        $ref: '#/definitions/ActivityMessageDelete'
  ActivityMessage_3:
    type: object
    properties:
      activityMessage:
        $ref: '#/definitions/ActivityMessageGet'
  ApplicationMessage:
    type: object
    properties:
      applicationMessage:
        $ref: '#/definitions/ApplicationMessagePut'
  inline_response_200_3:
    type: object
    properties:
      applicationMessage:
        $ref: '#/definitions/ApplicationMessageResponse'
  ApplicationMessage_1:
    type: object
    properties:
      applicationMessage:
        $ref: '#/definitions/ApplicationMessagePost'
  ApplicationMessage_2:
    type: object
    properties:
      applicationMessage:
        $ref: '#/definitions/ApplicationMessageDelete'
  ApplicationMessage_3:
    type: object
    properties:
      applicationMessage:
        $ref: '#/definitions/ApplicationMessageGet'
  AppMessage:
    type: object
    properties:
      appMessage:
        $ref: '#/definitions/AppMessagePut'
  inline_response_200_4:
    type: object
    properties:
      appMessage:
        $ref: '#/definitions/AppMessageResponse'
  AppMessage_1:
    type: object
    properties:
      appMessage:
        $ref: '#/definitions/AppMessagePost'
  AppMessage_2:
    type: object
    properties:
      appMessage:
        $ref: '#/definitions/AppMessageDelete'
  AppMessage_3:
    type: object
    properties:
      appMessage:
        $ref: '#/definitions/AppMessageGet'
  ArtifactMessage:
    type: object
    properties:
      artifactMessage:
        $ref: '#/definitions/ArtifactMessagePut'
  inline_response_200_5:
    type: object
    properties:
      artifactMessage:
        $ref: '#/definitions/ArtifactMessageResponse'
  ArtifactMessage_1:
    type: object
    properties:
      artifactMessage:
        $ref: '#/definitions/ArtifactMessagePost'
  ArtifactMessage_2:
    type: object
    properties:
      artifactMessage:
        $ref: '#/definitions/ArtifactMessageDelete'
  ArtifactMessage_3:
    type: object
    properties:
      artifactMessage:
        $ref: '#/definitions/ArtifactMessageGet'
  BillMessage:
    type: object
    properties:
      billMessage:
        $ref: '#/definitions/BillMessagePut'
  inline_response_200_6:
    type: object
    properties:
      billMessage:
        $ref: '#/definitions/BillMessageResponse'
  BillMessage_1:
    type: object
    properties:
      billMessage:
        $ref: '#/definitions/BillMessagePost'
  BillMessage_2:
    type: object
    properties:
      billMessage:
        $ref: '#/definitions/BillMessageDelete'
  BillMessage_3:
    type: object
    properties:
      billMessage:
        $ref: '#/definitions/BillMessageGet'
  BillPayeeMessage:
    type: object
    properties:
      billPayeeMessage:
        $ref: '#/definitions/BillPayeeMessagePut'
  inline_response_200_7:
    type: object
    properties:
      billPayeeMessage:
        $ref: '#/definitions/BillPayeeMessageResponse'
  BillPayeeMessage_1:
    type: object
    properties:
      billPayeeMessage:
        $ref: '#/definitions/BillPayeeMessagePost'
  BillPayeeMessage_2:
    type: object
    properties:
      billPayeeMessage:
        $ref: '#/definitions/BillPayeeMessageDelete'
  BillPayeeMessage_3:
    type: object
    properties:
      billPayeeMessage:
        $ref: '#/definitions/BillPayeeMessageGet'
  BillPaymentOccurrenceMessage:
    type: object
    properties:
      billPaymentOccurrenceMessage:
        $ref: '#/definitions/BillPaymentOccurrenceMessagePut'
  inline_response_200_8:
    type: object
    properties:
      billPaymentOccurrenceMessage:
        $ref: '#/definitions/BillPaymentOccurrenceMessageResponse'
  BillPaymentOccurrenceMessage_1:
    type: object
    properties:
      billPaymentOccurrenceMessage:
        $ref: '#/definitions/BillPaymentOccurrenceMessagePost'
  BillPaymentOccurrenceMessage_2:
    type: object
    properties:
      billPaymentOccurrenceMessage:
        $ref: '#/definitions/BillPaymentOccurrenceMessageDelete'
  BillPaymentOccurrenceMessage_3:
    type: object
    properties:
      billPaymentOccurrenceMessage:
        $ref: '#/definitions/BillPaymentOccurrenceMessageGet'
  BillPaymentRecurringMessage:
    type: object
    properties:
      billPaymentRecurringMessage:
        $ref: '#/definitions/BillPaymentRecurringMessagePut'
  inline_response_200_9:
    type: object
    properties:
      billPaymentRecurringMessage:
        $ref: '#/definitions/BillPaymentRecurringMessageResponse'
  BillPaymentRecurringMessage_1:
    type: object
    properties:
      billPaymentRecurringMessage:
        $ref: '#/definitions/BillPaymentRecurringMessagePost'
  BillPaymentRecurringMessage_2:
    type: object
    properties:
      billPaymentRecurringMessage:
        $ref: '#/definitions/BillPaymentRecurringMessageDelete'
  BillPaymentRecurringMessage_3:
    type: object
    properties:
      billPaymentRecurringMessage:
        $ref: '#/definitions/BillPaymentRecurringMessageGet'
  CardMessage:
    type: object
    properties:
      cardMessage:
        $ref: '#/definitions/CardMessagePut'
  inline_response_200_10:
    type: object
    properties:
      cardMessage:
        $ref: '#/definitions/CardMessageResponse'
  CardMessage_1:
    type: object
    properties:
      cardMessage:
        $ref: '#/definitions/CardMessagePost'
  CardMessage_2:
    type: object
    properties:
      cardMessage:
        $ref: '#/definitions/CardMessageDelete'
  CardMessage_3:
    type: object
    properties:
      cardMessage:
        $ref: '#/definitions/CardMessageGet'
  CategoryMessage:
    type: object
    properties:
      categoryMessage:
        $ref: '#/definitions/CategoryMessagePut'
  inline_response_200_11:
    type: object
    properties:
      categoryMessage:
        $ref: '#/definitions/CategoryMessageResponse'
  CategoryMessage_1:
    type: object
    properties:
      categoryMessage:
        $ref: '#/definitions/CategoryMessagePost'
  CategoryMessage_2:
    type: object
    properties:
      categoryMessage:
        $ref: '#/definitions/CategoryMessageDelete'
  CategoryMessage_3:
    type: object
    properties:
      categoryMessage:
        $ref: '#/definitions/CategoryMessageGet'
  CollateralMessage:
    type: object
    properties:
      collateralMessage:
        $ref: '#/definitions/CollateralMessagePut'
  inline_response_200_12:
    type: object
    properties:
      collateralMessage:
        $ref: '#/definitions/CollateralMessageResponse'
  CollateralMessage_1:
    type: object
    properties:
      collateralMessage:
        $ref: '#/definitions/CollateralMessagePost'
  CollateralMessage_2:
    type: object
    properties:
      collateralMessage:
        $ref: '#/definitions/CollateralMessageDelete'
  CollateralMessage_3:
    type: object
    properties:
      collateralMessage:
        $ref: '#/definitions/CollateralMessageGet'
  ConfigurationMessage:
    type: object
    properties:
      configurationMessage:
        $ref: '#/definitions/ConfigurationMessagePut'
  inline_response_200_13:
    type: object
    properties:
      configurationMessage:
        $ref: '#/definitions/ConfigurationMessageResponse'
  ConfigurationMessage_1:
    type: object
    properties:
      configurationMessage:
        $ref: '#/definitions/ConfigurationMessagePost'
  ConfigurationMessage_2:
    type: object
    properties:
      configurationMessage:
        $ref: '#/definitions/ConfigurationMessageDelete'
  ConfigurationMessage_3:
    type: object
    properties:
      configurationMessage:
        $ref: '#/definitions/ConfigurationMessageGet'
  ContactMessage:
    type: object
    properties:
      contactMessage:
        $ref: '#/definitions/ContactMessagePut'
  inline_response_200_14:
    type: object
    properties:
      contactMessage:
        $ref: '#/definitions/ContactMessageResponse'
  ContactMessage_1:
    type: object
    properties:
      contactMessage:
        $ref: '#/definitions/ContactMessagePost'
  ContactMessage_2:
    type: object
    properties:
      contactMessage:
        $ref: '#/definitions/ContactMessageDelete'
  ContactMessage_3:
    type: object
    properties:
      contactMessage:
        $ref: '#/definitions/ContactMessageGet'
  CredentialGroupMessage:
    type: object
    properties:
      credentialGroupMessage:
        $ref: '#/definitions/CredentialGroupMessagePut'
  inline_response_200_15:
    type: object
    properties:
      credentialGroupMessage:
        $ref: '#/definitions/CredentialGroupMessageResponse'
  CredentialGroupMessage_1:
    type: object
    properties:
      credentialGroupMessage:
        $ref: '#/definitions/CredentialGroupMessagePost'
  CredentialGroupMessage_2:
    type: object
    properties:
      credentialGroupMessage:
        $ref: '#/definitions/CredentialGroupMessageDelete'
  CredentialGroupMessage_3:
    type: object
    properties:
      credentialGroupMessage:
        $ref: '#/definitions/CredentialGroupMessageGet'
  CreditReportMessage:
    type: object
    properties:
      creditReportMessage:
        $ref: '#/definitions/CreditReportMessagePut'
  inline_response_200_16:
    type: object
    properties:
      creditReportMessage:
        $ref: '#/definitions/CreditReportMessageResponse'
  CreditReportMessage_1:
    type: object
    properties:
      creditReportMessage:
        $ref: '#/definitions/CreditReportMessagePost'
  CreditReportMessage_2:
    type: object
    properties:
      creditReportMessage:
        $ref: '#/definitions/CreditReportMessageDelete'
  CreditReportMessage_3:
    type: object
    properties:
      creditReportMessage:
        $ref: '#/definitions/CreditReportMessageGet'
  DepositFundingMessage:
    type: object
    properties:
      depositFundingMessage:
        $ref: '#/definitions/DepositFundingMessagePut'
  inline_response_200_17:
    type: object
    properties:
      depositFundingMessage:
        $ref: '#/definitions/DepositFundingMessageResponse'
  DepositFundingMessage_1:
    type: object
    properties:
      depositFundingMessage:
        $ref: '#/definitions/DepositFundingMessagePost'
  DepositFundingMessage_2:
    type: object
    properties:
      depositFundingMessage:
        $ref: '#/definitions/DepositFundingMessageDelete'
  DepositFundingMessage_3:
    type: object
    properties:
      depositFundingMessage:
        $ref: '#/definitions/DepositFundingMessageGet'
  DepositMessage:
    type: object
    properties:
      depositMessage:
        $ref: '#/definitions/DepositMessagePut'
  inline_response_200_18:
    type: object
    properties:
      depositMessage:
        $ref: '#/definitions/DepositMessageResponse'
  DepositMessage_1:
    type: object
    properties:
      depositMessage:
        $ref: '#/definitions/DepositMessagePost'
  DepositMessage_2:
    type: object
    properties:
      depositMessage:
        $ref: '#/definitions/DepositMessageDelete'
  DepositMessage_3:
    type: object
    properties:
      depositMessage:
        $ref: '#/definitions/DepositMessageGet'
  DocumentMessage:
    type: object
    properties:
      documentMessage:
        $ref: '#/definitions/DocumentMessagePut'
  inline_response_200_19:
    type: object
    properties:
      documentMessage:
        $ref: '#/definitions/DocumentMessageResponse'
  DocumentMessage_1:
    type: object
    properties:
      documentMessage:
        $ref: '#/definitions/DocumentMessagePost'
  DocumentMessage_2:
    type: object
    properties:
      documentMessage:
        $ref: '#/definitions/DocumentMessageDelete'
  DocumentMessage_3:
    type: object
    properties:
      documentMessage:
        $ref: '#/definitions/DocumentMessageGet'
  EligibilityRequirementMessage:
    type: object
    properties:
      eligibilityRequirementMessage:
        $ref: '#/definitions/EligibilityRequirementMessagePut'
  inline_response_200_20:
    type: object
    properties:
      eligibilityRequirementMessage:
        $ref: '#/definitions/EligibilityRequirementMessageResponse'
  EligibilityRequirementMessage_1:
    type: object
    properties:
      eligibilityRequirementMessage:
        $ref: '#/definitions/EligibilityRequirementMessagePost'
  EligibilityRequirementMessage_2:
    type: object
    properties:
      eligibilityRequirementMessage:
        $ref: '#/definitions/EligibilityRequirementMessageDelete'
  EligibilityRequirementMessage_3:
    type: object
    properties:
      eligibilityRequirementMessage:
        $ref: '#/definitions/EligibilityRequirementMessageGet'
  FeeScheduleMessage:
    type: object
    properties:
      feeScheduleMessage:
        $ref: '#/definitions/FeeScheduleMessagePut'
  inline_response_200_21:
    type: object
    properties:
      feeScheduleMessage:
        $ref: '#/definitions/FeeScheduleMessageResponse'
  FeeScheduleMessage_1:
    type: object
    properties:
      feeScheduleMessage:
        $ref: '#/definitions/FeeScheduleMessagePost'
  FeeScheduleMessage_2:
    type: object
    properties:
      feeScheduleMessage:
        $ref: '#/definitions/FeeScheduleMessageDelete'
  FeeScheduleMessage_3:
    type: object
    properties:
      feeScheduleMessage:
        $ref: '#/definitions/FeeScheduleMessageGet'
  FieldMessage:
    type: object
    properties:
      fieldMessage:
        $ref: '#/definitions/FieldMessagePut'
  inline_response_200_22:
    type: object
    properties:
      fieldMessage:
        $ref: '#/definitions/FieldMessageResponse'
  FieldMessage_1:
    type: object
    properties:
      fieldMessage:
        $ref: '#/definitions/FieldMessagePost'
  FieldMessage_2:
    type: object
    properties:
      fieldMessage:
        $ref: '#/definitions/FieldMessageDelete'
  FieldMessage_3:
    type: object
    properties:
      fieldMessage:
        $ref: '#/definitions/FieldMessageGet'
  FinancialInstitutionMessage:
    type: object
    properties:
      financialInstitutionMessage:
        $ref: '#/definitions/FinancialInstitutionMessagePut'
  inline_response_200_23:
    type: object
    properties:
      financialInstitutionMessage:
        $ref: '#/definitions/FinancialInstitutionMessageResponse'
  FinancialInstitutionMessage_1:
    type: object
    properties:
      financialInstitutionMessage:
        $ref: '#/definitions/FinancialInstitutionMessagePost'
  FinancialInstitutionMessage_2:
    type: object
    properties:
      financialInstitutionMessage:
        $ref: '#/definitions/FinancialInstitutionMessageDelete'
  FinancialInstitutionMessage_3:
    type: object
    properties:
      financialInstitutionMessage:
        $ref: '#/definitions/FinancialInstitutionMessageGet'
  HoldMessage:
    type: object
    properties:
      holdMessage:
        $ref: '#/definitions/HoldMessagePut'
  inline_response_200_24:
    type: object
    properties:
      holdMessage:
        $ref: '#/definitions/HoldMessageResponse'
  HoldMessage_1:
    type: object
    properties:
      holdMessage:
        $ref: '#/definitions/HoldMessagePost'
  HoldMessage_2:
    type: object
    properties:
      holdMessage:
        $ref: '#/definitions/HoldMessageDelete'
  HoldMessage_3:
    type: object
    properties:
      holdMessage:
        $ref: '#/definitions/HoldMessageGet'
  InvestmentHoldingMessage:
    type: object
    properties:
      investmentHoldingMessage:
        $ref: '#/definitions/InvestmentHoldingMessagePut'
  inline_response_200_25:
    type: object
    properties:
      investmentHoldingMessage:
        $ref: '#/definitions/InvestmentHoldingMessageResponse'
  InvestmentHoldingMessage_1:
    type: object
    properties:
      investmentHoldingMessage:
        $ref: '#/definitions/InvestmentHoldingMessagePost'
  InvestmentHoldingMessage_2:
    type: object
    properties:
      investmentHoldingMessage:
        $ref: '#/definitions/InvestmentHoldingMessageDelete'
  InvestmentHoldingMessage_3:
    type: object
    properties:
      investmentHoldingMessage:
        $ref: '#/definitions/InvestmentHoldingMessageGet'
  InvestmentMessage:
    type: object
    properties:
      investmentMessage:
        $ref: '#/definitions/InvestmentMessagePut'
  inline_response_200_26:
    type: object
    properties:
      investmentMessage:
        $ref: '#/definitions/InvestmentMessageResponse'
  InvestmentMessage_1:
    type: object
    properties:
      investmentMessage:
        $ref: '#/definitions/InvestmentMessagePost'
  InvestmentMessage_2:
    type: object
    properties:
      investmentMessage:
        $ref: '#/definitions/InvestmentMessageDelete'
  InvestmentMessage_3:
    type: object
    properties:
      investmentMessage:
        $ref: '#/definitions/InvestmentMessageGet'
  LoanDisbursementMessage:
    type: object
    properties:
      loanDisbursementMessage:
        $ref: '#/definitions/LoanDisbursementMessagePut'
  inline_response_200_27:
    type: object
    properties:
      loanDisbursementMessage:
        $ref: '#/definitions/LoanDisbursementMessageResponse'
  LoanDisbursementMessage_1:
    type: object
    properties:
      loanDisbursementMessage:
        $ref: '#/definitions/LoanDisbursementMessagePost'
  LoanDisbursementMessage_2:
    type: object
    properties:
      loanDisbursementMessage:
        $ref: '#/definitions/LoanDisbursementMessageDelete'
  LoanDisbursementMessage_3:
    type: object
    properties:
      loanDisbursementMessage:
        $ref: '#/definitions/LoanDisbursementMessageGet'
  LoanMessage:
    type: object
    properties:
      loanMessage:
        $ref: '#/definitions/LoanMessagePut'
  inline_response_200_28:
    type: object
    properties:
      loanMessage:
        $ref: '#/definitions/LoanMessageResponse'
  LoanMessage_1:
    type: object
    properties:
      loanMessage:
        $ref: '#/definitions/LoanMessagePost'
  LoanMessage_2:
    type: object
    properties:
      loanMessage:
        $ref: '#/definitions/LoanMessageDelete'
  LoanMessage_3:
    type: object
    properties:
      loanMessage:
        $ref: '#/definitions/LoanMessageGet'
  LocationMessage:
    type: object
    properties:
      locationMessage:
        $ref: '#/definitions/LocationMessagePut'
  inline_response_200_29:
    type: object
    properties:
      locationMessage:
        $ref: '#/definitions/LocationMessageResponse'
  LocationMessage_1:
    type: object
    properties:
      locationMessage:
        $ref: '#/definitions/LocationMessagePost'
  LocationMessage_2:
    type: object
    properties:
      locationMessage:
        $ref: '#/definitions/LocationMessageDelete'
  LocationMessage_3:
    type: object
    properties:
      locationMessage:
        $ref: '#/definitions/LocationMessageGet'
  MicroDepositFundingMessage:
    type: object
    properties:
      microDepositFundingMessage:
        $ref: '#/definitions/MicroDepositFundingMessagePut'
  inline_response_200_30:
    type: object
    properties:
      microDepositFundingMessage:
        $ref: '#/definitions/MicroDepositFundingMessageResponse'
  MicroDepositFundingMessage_1:
    type: object
    properties:
      microDepositFundingMessage:
        $ref: '#/definitions/MicroDepositFundingMessagePost'
  MicroDepositFundingMessage_2:
    type: object
    properties:
      microDepositFundingMessage:
        $ref: '#/definitions/MicroDepositFundingMessageDelete'
  MicroDepositFundingMessage_3:
    type: object
    properties:
      microDepositFundingMessage:
        $ref: '#/definitions/MicroDepositFundingMessageGet'
  NetworkNodeMessage:
    type: object
    properties:
      networkNodeMessage:
        $ref: '#/definitions/NetworkNodeMessagePut'
  inline_response_200_31:
    type: object
    properties:
      networkNodeMessage:
        $ref: '#/definitions/NetworkNodeMessageResponse'
  NetworkNodeMessage_1:
    type: object
    properties:
      networkNodeMessage:
        $ref: '#/definitions/NetworkNodeMessagePost'
  NetworkNodeMessage_2:
    type: object
    properties:
      networkNodeMessage:
        $ref: '#/definitions/NetworkNodeMessageDelete'
  NetworkNodeMessage_3:
    type: object
    properties:
      networkNodeMessage:
        $ref: '#/definitions/NetworkNodeMessageGet'
  NoteMessage:
    type: object
    properties:
      noteMessage:
        $ref: '#/definitions/NoteMessagePut'
  inline_response_200_32:
    type: object
    properties:
      noteMessage:
        $ref: '#/definitions/NoteMessageResponse'
  NoteMessage_1:
    type: object
    properties:
      noteMessage:
        $ref: '#/definitions/NoteMessagePost'
  NoteMessage_2:
    type: object
    properties:
      noteMessage:
        $ref: '#/definitions/NoteMessageDelete'
  NoteMessage_3:
    type: object
    properties:
      noteMessage:
        $ref: '#/definitions/NoteMessageGet'
  OverdraftPriorityMessage:
    type: object
    properties:
      overdraftPriorityMessage:
        $ref: '#/definitions/OverdraftPriorityMessagePut'
  inline_response_200_33:
    type: object
    properties:
      overdraftPriorityMessage:
        $ref: '#/definitions/OverdraftPriorityMessageResponse'
  OverdraftPriorityMessage_1:
    type: object
    properties:
      overdraftPriorityMessage:
        $ref: '#/definitions/OverdraftPriorityMessagePost'
  OverdraftPriorityMessage_2:
    type: object
    properties:
      overdraftPriorityMessage:
        $ref: '#/definitions/OverdraftPriorityMessageDelete'
  OverdraftPriorityMessage_3:
    type: object
    properties:
      overdraftPriorityMessage:
        $ref: '#/definitions/OverdraftPriorityMessageGet'
  PartyAssociationMessage:
    type: object
    properties:
      partyAssociationMessage:
        $ref: '#/definitions/PartyAssociationMessagePut'
  inline_response_200_34:
    type: object
    properties:
      partyAssociationMessage:
        $ref: '#/definitions/PartyAssociationMessageResponse'
  PartyAssociationMessage_1:
    type: object
    properties:
      partyAssociationMessage:
        $ref: '#/definitions/PartyAssociationMessagePost'
  PartyAssociationMessage_2:
    type: object
    properties:
      partyAssociationMessage:
        $ref: '#/definitions/PartyAssociationMessageDelete'
  PartyAssociationMessage_3:
    type: object
    properties:
      partyAssociationMessage:
        $ref: '#/definitions/PartyAssociationMessageGet'
  PartyMessage:
    type: object
    properties:
      partyMessage:
        $ref: '#/definitions/PartyMessagePut'
  inline_response_200_35:
    type: object
    properties:
      partyMessage:
        $ref: '#/definitions/PartyMessageResponse'
  PartyMessage_1:
    type: object
    properties:
      partyMessage:
        $ref: '#/definitions/PartyMessagePost'
  PartyMessage_2:
    type: object
    properties:
      partyMessage:
        $ref: '#/definitions/PartyMessageDelete'
  PartyMessage_3:
    type: object
    properties:
      partyMessage:
        $ref: '#/definitions/PartyMessageGet'
  PermissionListMessage:
    type: object
    properties:
      permissionListMessage:
        $ref: '#/definitions/PermissionListMessagePut'
  inline_response_200_36:
    type: object
    properties:
      permissionListMessage:
        $ref: '#/definitions/PermissionListMessageResponse'
  PermissionListMessage_1:
    type: object
    properties:
      permissionListMessage:
        $ref: '#/definitions/PermissionListMessagePost'
  PermissionListMessage_2:
    type: object
    properties:
      permissionListMessage:
        $ref: '#/definitions/PermissionListMessageDelete'
  PermissionListMessage_3:
    type: object
    properties:
      permissionListMessage:
        $ref: '#/definitions/PermissionListMessageGet'
  PreferenceMessage:
    type: object
    properties:
      preferenceMessage:
        $ref: '#/definitions/PreferenceMessagePut'
  inline_response_200_37:
    type: object
    properties:
      preferenceMessage:
        $ref: '#/definitions/PreferenceMessageResponse'
  PreferenceMessage_1:
    type: object
    properties:
      preferenceMessage:
        $ref: '#/definitions/PreferenceMessagePost'
  PreferenceMessage_2:
    type: object
    properties:
      preferenceMessage:
        $ref: '#/definitions/PreferenceMessageDelete'
  PreferenceMessage_3:
    type: object
    properties:
      preferenceMessage:
        $ref: '#/definitions/PreferenceMessageGet'
  ProductOfferingMessage:
    type: object
    properties:
      productOfferingMessage:
        $ref: '#/definitions/ProductOfferingMessagePut'
  inline_response_200_38:
    type: object
    properties:
      productOfferingMessage:
        $ref: '#/definitions/ProductOfferingMessageResponse'
  ProductOfferingMessage_1:
    type: object
    properties:
      productOfferingMessage:
        $ref: '#/definitions/ProductOfferingMessagePost'
  ProductOfferingMessage_2:
    type: object
    properties:
      productOfferingMessage:
        $ref: '#/definitions/ProductOfferingMessageDelete'
  ProductOfferingMessage_3:
    type: object
    properties:
      productOfferingMessage:
        $ref: '#/definitions/ProductOfferingMessageGet'
  ProductServiceEnrollmentMessage:
    type: object
    properties:
      productServiceEnrollmentMessage:
        $ref: '#/definitions/ProductServiceEnrollmentMessagePut'
  inline_response_200_39:
    type: object
    properties:
      productServiceEnrollmentMessage:
        $ref: '#/definitions/ProductServiceEnrollmentMessageResponse'
  ProductServiceEnrollmentMessage_1:
    type: object
    properties:
      productServiceEnrollmentMessage:
        $ref: '#/definitions/ProductServiceEnrollmentMessagePost'
  ProductServiceEnrollmentMessage_2:
    type: object
    properties:
      productServiceEnrollmentMessage:
        $ref: '#/definitions/ProductServiceEnrollmentMessageDelete'
  ProductServiceEnrollmentMessage_3:
    type: object
    properties:
      productServiceEnrollmentMessage:
        $ref: '#/definitions/ProductServiceEnrollmentMessageGet'
  ProductServiceRequestMessage:
    type: object
    properties:
      productServiceRequestMessage:
        $ref: '#/definitions/ProductServiceRequestMessagePut'
  inline_response_200_40:
    type: object
    properties:
      productServiceRequestMessage:
        $ref: '#/definitions/ProductServiceRequestMessageResponse'
  ProductServiceRequestMessage_1:
    type: object
    properties:
      productServiceRequestMessage:
        $ref: '#/definitions/ProductServiceRequestMessagePost'
  ProductServiceRequestMessage_2:
    type: object
    properties:
      productServiceRequestMessage:
        $ref: '#/definitions/ProductServiceRequestMessageDelete'
  ProductServiceRequestMessage_3:
    type: object
    properties:
      productServiceRequestMessage:
        $ref: '#/definitions/ProductServiceRequestMessageGet'
  RegisteredDeviceMessage:
    type: object
    properties:
      registeredDeviceMessage:
        $ref: '#/definitions/RegisteredDeviceMessagePut'
  inline_response_200_41:
    type: object
    properties:
      registeredDeviceMessage:
        $ref: '#/definitions/RegisteredDeviceMessageResponse'
  RegisteredDeviceMessage_1:
    type: object
    properties:
      registeredDeviceMessage:
        $ref: '#/definitions/RegisteredDeviceMessagePost'
  RegisteredDeviceMessage_2:
    type: object
    properties:
      registeredDeviceMessage:
        $ref: '#/definitions/RegisteredDeviceMessageDelete'
  RegisteredDeviceMessage_3:
    type: object
    properties:
      registeredDeviceMessage:
        $ref: '#/definitions/RegisteredDeviceMessageGet'
  RelationshipMessage:
    type: object
    properties:
      relationshipMessage:
        $ref: '#/definitions/RelationshipMessagePut'
  inline_response_200_42:
    type: object
    properties:
      relationshipMessage:
        $ref: '#/definitions/RelationshipMessageResponse'
  RelationshipMessage_1:
    type: object
    properties:
      relationshipMessage:
        $ref: '#/definitions/RelationshipMessagePost'
  RelationshipMessage_2:
    type: object
    properties:
      relationshipMessage:
        $ref: '#/definitions/RelationshipMessageDelete'
  RelationshipMessage_3:
    type: object
    properties:
      relationshipMessage:
        $ref: '#/definitions/RelationshipMessageGet'
  RemoteDepositMessage:
    type: object
    properties:
      remoteDepositMessage:
        $ref: '#/definitions/RemoteDepositMessagePut'
  inline_response_200_43:
    type: object
    properties:
      remoteDepositMessage:
        $ref: '#/definitions/RemoteDepositMessageResponse'
  RemoteDepositMessage_1:
    type: object
    properties:
      remoteDepositMessage:
        $ref: '#/definitions/RemoteDepositMessagePost'
  RemoteDepositMessage_2:
    type: object
    properties:
      remoteDepositMessage:
        $ref: '#/definitions/RemoteDepositMessageDelete'
  RemoteDepositMessage_3:
    type: object
    properties:
      remoteDepositMessage:
        $ref: '#/definitions/RemoteDepositMessageGet'
  SecureMessageMessage:
    type: object
    properties:
      secureMessageMessage:
        $ref: '#/definitions/SecureMessageMessagePut'
  inline_response_200_44:
    type: object
    properties:
      secureMessageMessage:
        $ref: '#/definitions/SecureMessageMessageResponse'
  SecureMessageMessage_1:
    type: object
    properties:
      secureMessageMessage:
        $ref: '#/definitions/SecureMessageMessagePost'
  SecureMessageMessage_2:
    type: object
    properties:
      secureMessageMessage:
        $ref: '#/definitions/SecureMessageMessageDelete'
  SecureMessageMessage_3:
    type: object
    properties:
      secureMessageMessage:
        $ref: '#/definitions/SecureMessageMessageGet'
  SimpleValidationRequestMessage:
    type: object
    properties:
      simpleValidationRequestMessage:
        $ref: '#/definitions/SimpleValidationRequestMessagePut'
  inline_response_200_45:
    type: object
    properties:
      simpleValidationRequestMessage:
        $ref: '#/definitions/SimpleValidationRequestMessageResponse'
  SimpleValidationRequestMessage_1:
    type: object
    properties:
      simpleValidationRequestMessage:
        $ref: '#/definitions/SimpleValidationRequestMessagePost'
  SimpleValidationRequestMessage_2:
    type: object
    properties:
      simpleValidationRequestMessage:
        $ref: '#/definitions/SimpleValidationRequestMessageDelete'
  SimpleValidationRequestMessage_3:
    type: object
    properties:
      simpleValidationRequestMessage:
        $ref: '#/definitions/SimpleValidationRequestMessageGet'
  SystemStatusMessage:
    type: object
    properties:
      systemStatusMessage:
        $ref: '#/definitions/SystemStatusMessagePut'
  inline_response_200_46:
    type: object
    properties:
      systemStatusMessage:
        $ref: '#/definitions/SystemStatusMessageResponse'
  SystemStatusMessage_1:
    type: object
    properties:
      systemStatusMessage:
        $ref: '#/definitions/SystemStatusMessagePost'
  SystemStatusMessage_2:
    type: object
    properties:
      systemStatusMessage:
        $ref: '#/definitions/SystemStatusMessageDelete'
  SystemStatusMessage_3:
    type: object
    properties:
      systemStatusMessage:
        $ref: '#/definitions/SystemStatusMessageGet'
  TransactionMessage:
    type: object
    properties:
      transactionMessage:
        $ref: '#/definitions/TransactionMessagePut'
  inline_response_200_47:
    type: object
    properties:
      transactionMessage:
        $ref: '#/definitions/TransactionMessageResponse'
  TransactionMessage_1:
    type: object
    properties:
      transactionMessage:
        $ref: '#/definitions/TransactionMessagePost'
  TransactionMessage_2:
    type: object
    properties:
      transactionMessage:
        $ref: '#/definitions/TransactionMessageDelete'
  TransactionMessage_3:
    type: object
    properties:
      transactionMessage:
        $ref: '#/definitions/TransactionMessageGet'
  TransferOccurrenceMessage:
    type: object
    properties:
      transferOccurrenceMessage:
        $ref: '#/definitions/TransferOccurrenceMessagePut'
  inline_response_200_48:
    type: object
    properties:
      transferOccurrenceMessage:
        $ref: '#/definitions/TransferOccurrenceMessageResponse'
  TransferOccurrenceMessage_1:
    type: object
    properties:
      transferOccurrenceMessage:
        $ref: '#/definitions/TransferOccurrenceMessagePost'
  TransferOccurrenceMessage_2:
    type: object
    properties:
      transferOccurrenceMessage:
        $ref: '#/definitions/TransferOccurrenceMessageDelete'
  TransferOccurrenceMessage_3:
    type: object
    properties:
      transferOccurrenceMessage:
        $ref: '#/definitions/TransferOccurrenceMessageGet'
  TransferRecurringMessage:
    type: object
    properties:
      transferRecurringMessage:
        $ref: '#/definitions/TransferRecurringMessagePut'
  inline_response_200_49:
    type: object
    properties:
      transferRecurringMessage:
        $ref: '#/definitions/TransferRecurringMessageResponse'
  TransferRecurringMessage_1:
    type: object
    properties:
      transferRecurringMessage:
        $ref: '#/definitions/TransferRecurringMessagePost'
  TransferRecurringMessage_2:
    type: object
    properties:
      transferRecurringMessage:
        $ref: '#/definitions/TransferRecurringMessageDelete'
  TransferRecurringMessage_3:
    type: object
    properties:
      transferRecurringMessage:
        $ref: '#/definitions/TransferRecurringMessageGet'
  UserMessage:
    type: object
    properties:
      userMessage:
        $ref: '#/definitions/UserMessagePut'
  inline_response_200_50:
    type: object
    properties:
      userMessage:
        $ref: '#/definitions/UserMessageResponse'
  UserMessage_1:
    type: object
    properties:
      userMessage:
        $ref: '#/definitions/UserMessagePost'
  UserMessage_2:
    type: object
    properties:
      userMessage:
        $ref: '#/definitions/UserMessageDelete'
  UserMessage_3:
    type: object
    properties:
      userMessage:
        $ref: '#/definitions/UserMessageGet'
  WireMessage:
    type: object
    properties:
      wireMessage:
        $ref: '#/definitions/WireMessagePut'
  inline_response_200_51:
    type: object
    properties:
      wireMessage:
        $ref: '#/definitions/WireMessageResponse'
  WireMessage_1:
    type: object
    properties:
      wireMessage:
        $ref: '#/definitions/WireMessagePost'
  WireMessage_2:
    type: object
    properties:
      wireMessage:
        $ref: '#/definitions/WireMessageDelete'
  WireMessage_3:
    type: object
    properties:
      wireMessage:
        $ref: '#/definitions/WireMessageGet'
  AccessProfile_actor:
    type: object
    properties:
      fiUserId:
        type: string
        description: "FiUserId is a unique identifier for the credential group and is readable by the person. The person types this into systems to gain access, also using their password, PIN or whatever else is required to gain access. "
      userId:
        type: string
        description: 'The unique identifier created by the system and or the user for identification. '
      partyId:
        type: string
        description: 'The party ID is a persistent and unique identifier for the party not related to the accounts they own but tied to that person or organization. It should be unique for all parties across the institution and remain the same over the life of the relationship with the financial institution. '
      relationshipId:
        type: string
        description: 'The relationship ID is a persistent and unique identifier for the relationship. It should be unique for all relationships across the institution and remain the same over the life of the relationship with the financial institution. '
    description: "Intended choice- Due to cross language serialization issues the choice construct has been removed. It is the responsibility of the implementer to add programmatic logic for this complex type to detect, handle and or error when population of more than one element is present. "
  AccessProfile_softwareClient:
    type: object
    properties:
      softwareClientId:
        type: string
        description: 'The unique software client information identifier. '
      rawSoftwareClientDetail:
        type: string
        description: "This is a raw footprint of data from the client system that is accessing the application. If the user string is present, this can hold the full/unedited user agent string or other identifying text. Some of the information in this field may be parsed to populate fields below. "
      browserName:
        type: string
        description: "The name of the browser, if a browser is used to run client application. "
      browserVersion:
        type: string
        description: "The version of the browser, if a browser is used to run client application. "
      operatingSystemName:
        type: string
        description: 'The name of the operating system. '
      operatingSystemVersion:
        type: string
        description: 'The version of the operating system. '
    description: "The software client information profile, i.e. user agent information or other software information. "
  AccessProfile_device:
    type: object
    properties:
      deviceId:
        type: string
        description: 'The unique device identifier. '
      deviceType:
        type: string
        description: "A text description of the device or channel used to access application. This may be mobile, personal computer, or other. "
      deviceName:
        type: string
        description: 'The name associated with the device accessing the application. This may be a device name assigned by the operating system. '
      rawDeviceDetail:
        type: string
        description: "This is a raw footprint of data about the device from the client system that is accessing the application. The device might be a tablet, mobile phone, computer, or phone number in the case of IVR system. Some of the information in this field may be parsed to populate fields below. "
      ipAddress:
        type: string
        description: 'IP Address string '
      manufacturer:
        type: string
        description: 'The name associated with the device accessing the application. This may be a device name assigned by the operating system. '
    description: 'The device information profile that is accessing the system information. '
  AccessProfile_customData:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      valuePair:
        type: array
        description: 'Each combination of name and value. '
        items:
          $ref: '#/definitions/ValuePair'
    description: 'The custom data section allows the flexibility to add additional information to the message. This should be utilized as a last resort. Any use should result in requested modifications to the message. '
  AccessProfileFilter_accessProfileIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      accessProfileId:
        type: array
        description: "The access profile ID list is a collection of attributes that describe the device used to access an application. This profile may describe a mobile phone, laptop, personal computer, IVR system, or other. "
        items:
          $ref: '#/definitions/AccessProfileId'
    description: "The access profile collection/array contains all the access profiles, for instance, that the credential set is authorized to access at the Institution based on applied filters. "
  AccessProfileFilter_createAccessDateRange:
    type: object
    properties:
      startDateTime:
        type: string
        format: datetime
        description: 'The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      endDateTime:
        type: string
        format: datetime
        description: 'The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
    description: "Date range is used to search using startDateTime and endDateTime pairs.  If used for transactions, indicates UTC posted date and times unless otherwise specified where the object is implemented. If the range is not supplied and used in a filter, the response returns all records. If startDateTime and endDateTime are specified the result will return only items between the two dates, the startDateTime must be before or the same as the endDateTime. If startDateTime is specified and endDateTime is not specfied the result will return all items after the startDateTime. If startDateTime is not specified and endDateTime is specified the result will return all items before the endDateTime. If neither startDateTime or endDateTime are present, date criteria will not be applied. "
  AccessProfileFilter_actorList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      actor:
        type: array
        description: "The person, place or thing that is accessing the application. "
        items:
          $ref: '#/definitions/Actor'
    description: "The access profile collection/array contains all the actors, for instance, that the credential set is authorized to access at the Institution based on applied filters. "
  Account_accountStatus:
    type: object
    properties:
      depositAccountStatus:
        type: string
        description: "Account status related to deposit account. Account is open and active. Account has been approved, not yet active. Account is charged off. Account is charged off and closed. Account has been closed. Account is closed and ready to be purged. Account is open, but is dormant due to inactivity. Account is escheated. Account is open and Inactive. Account is not open or active, and is incomplete. Account is locked. Account has matured due to conditions being reached. Account is open and active. Account is opening, not yet active. Account is in a status not defined by enumerations. See AccountSubStatus. Account is pending renewal. Account and or account number is reserved from use. Account and or account number is restricted from use. Account unfunded or underfunded. "
        enum:
        - Active
        - Approved
        - ChargedOff
        - ChargeOffClosed
        - Closed
        - ClosedReadyToPurge
        - Dormant
        - Escheated
        - Inactive
        - Incomplete
        - Locked
        - Matured
        - Open
        - Opening
        - Other
        - RenewPending
        - Reserved
        - Restricted
        - Unfunded
      investmentStatus:
        type: string
        description: "Account status related to investment account. Account is open and active. Account has been closed. Account is open, but is dormant due to inactivity. Account is escheated. Account is not open or active, and is incomplete. Account is locked. Account is originating, not yet active. Account is in a status not defined by enumerations. See AccountSubStatus. Account and or account number is restricted from use. Account unfunded or underfunded. Account has matured due to conditions being reached. "
        enum:
        - Active
        - Closed
        - Dormant
        - Escheated
        - Incomplete
        - Locked
        - Originating
        - Other
        - Restricted
        - Unfunded
        - Matured
      loanAccountStatus:
        type: string
        description: "Account status related to loan account. Account is open and active. Account has been approved, not yet active. Account is in charge off. Account has been closed. Account has been closed with remaining balances, open to accepting payments. Account is open, but is dormant due to inactivity. Account is escheated. Account is not open or active, and is Incomplete. Account is in repossession. Account is not active, or open. Loan denied. Account is locked. Account has matured due to conditions being reached. Account is non accrual. Account is originating, not yet active. Account is in a status not defined by enumerations. See AccountSubStatus. Account is has been preallocated, not open or active. Account is pending renewal. Account set up in process, not open or active. Account is in special processing. Account and or account number is restricted from use. Account is not yet funded. "
        enum:
        - Active
        - Approved
        - ChargeOff
        - Closed
        - ClosedRemainingBalances
        - Dormant
        - Escheated
        - Incomplete
        - InRepossession
        - LoanDenied
        - Locked
        - Matured
        - NonAccrual
        - Originating
        - Other
        - Preallocated
        - RenewPending
        - SetupInProcess
        - SpecialProcessing
        - Restricted
        - Unfunded
    description: "Intended choice - Due to cross language serialization issues the choice construct has been removed. It is the responsibility of the implementer to add programmatic logic for this complex type to detect, handle and or error when population of more than one element is present. "
  Account_accountEscheatAmount:
    type: object
    properties:
      value:
        type: number
        description: 'The amount of the money as defined by the currency code. '
      currencyCode:
        type: string
        description: ISO 4217 Year 2008 /xs:documentation
        enum:
        - AED
        - AFN
        - ALL
        - AMD
        - ANG
        - AOA
        - ARS
        - AUD
        - AWG
        - AZN
        - BAM
        - BBD
        - BDT
        - BGN
        - BHD
        - BIF
        - BMD
        - BND
        - BOB
        - BRL
        - BSD
        - BTN
        - BWP
        - BYR
        - BZD
        - CAD
        - CDF
        - CHF
        - CLP
        - CNY
        - COP
        - CRC
        - CUP
        - CVE
        - CZK
        - DJF
        - DKK
        - DOP
        - DZD
        - EEK
        - EGP
        - ERN
        - ETB
        - EUR
        - FJD
        - FKP
        - GBP
        - GEL
        - GHS
        - GIP
        - GMD
        - GNF
        - GTQ
        - GYD
        - GWP
        - HKD
        - HNL
        - HRK
        - HTG
        - HUF
        - IDR
        - ILS
        - INR
        - IQD
        - IRR
        - ISK
        - JMD
        - JOD
        - JPY
        - KES
        - KGS
        - KHR
        - KMF
        - KPW
        - KRW
        - KWD
        - KYD
        - KZT
        - LAK
        - LBP
        - LKR
        - LRD
        - LSL
        - LTL
        - LVL
        - LYD
        - MAD
        - MDL
        - MGA
        - MKD
        - MMK
        - MNT
        - MOP
        - MRO
        - MUR
        - MVR
        - MWK
        - MXN
        - MYR
        - MZN
        - NAD
        - NGN
        - NIO
        - NOK
        - NPR
        - NZD
        - OMR
        - PAB
        - PEN
        - PGK
        - PHP
        - PKR
        - PLN
        - PYG
        - QAR
        - RON
        - RSD
        - RUB
        - RWF
        - SAR
        - SBD
        - SCR
        - SDG
        - SEK
        - SGD
        - SHP
        - SKK
        - SLL
        - SOS
        - SRD
        - STD
        - SVC
        - SYP
        - SZL
        - THB
        - TJS
        - TMM
        - TND
        - TOP
        - TRY
        - TTD
        - TWD
        - TZS
        - UAH
        - UGX
        - USD
        - UYU
        - UZS
        - VEF
        - VND
        - VUV
        - WST
        - XAF
        - XAG
        - XAU
        - XCD
        - XDR
        - XOF
        - XPD
        - XPF
        - XPT
        - YER
        - ZAR
        - ZMK
        - ZWR
      exchangeRate:
        type: number
        description: 'Exchange rate of the foreign currency to the USD (at the time of the transaction involving this Money object). '
    description: 'Standard definition for money values to include both the value and the currency. Currency defaults to USD (United States $) if not specified. '
  Account_externalAccountBankAddress_coordinate:
    type: object
    properties:
      latitude:
        type: number
        description: 'Latitude value. '
      longitude:
        type: number
        description: 'Longitude value. '
  Account_externalAccountBankAddress:
    type: object
    properties:
      line1:
        type: string
        description: 'Street address (Physical Address). '
      line2:
        type: string
        description: "Additional Address Information.  Typically contains additional information such as an apartment number, etc. "
      line3:
        type: string
        description: 'Additional Address Information. '
      line4:
        type: string
        description: 'Additional Address Information. '
      line5:
        type: string
        description: 'Additional Address Information. '
      line6:
        type: string
        description: 'Additional Address Information. '
      line7:
        type: string
        description: 'Additional Address Information. '
      line8:
        type: string
        description: 'Additional Address Information. '
      line9:
        type: string
        description: 'Additional Address Information. '
      line10:
        type: string
        description: 'Additional Address Information. '
      city:
        type: string
        description: 'City where party resides. '
      stateProvince:
        type: string
        description: 'State or province (international) where party resides. '
      postalCode:
        type: string
        description: 'Postal code or zip code where party resides. '
      countryCode:
        type: string
        description: ISO 3166-1  Year 2006 /xs:documentation
        enum:
        - AD
        - AE
        - AF
        - AG
        - AI
        - AL
        - AM
        - AN
        - AO
        - AQ
        - AR
        - AS
        - AT
        - AU
        - AW
        - AX
        - AZ
        - BA
        - BB
        - BD
        - BE
        - BF
        - BG
        - BH
        - BI
        - BJ
        - BL
        - BM
        - BN
        - BO
        - BR
        - BS
        - BT
        - BV
        - BW
        - BY
        - BZ
        - CA
        - CC
        - CD
        - CF
        - CG
        - CH
        - CI
        - CK
        - CL
        - CM
        - CN
        - CO
        - CR
        - CU
        - CV
        - CX
        - CY
        - CZ
        - DE
        - DJ
        - DK
        - DM
        - DO
        - DZ
        - EC
        - EE
        - EG
        - EH
        - ER
        - ES
        - ET
        - FI
        - FJ
        - FK
        - FM
        - FO
        - FR
        - GA
        - GB
        - GD
        - GE
        - GF
        - GG
        - GH
        - GI
        - GL
        - GM
        - GN
        - GP
        - GQ
        - GR
        - GS
        - GT
        - GU
        - GW
        - GY
        - HK
        - HM
        - HN
        - HR
        - HT
        - HU
        - ID
        - IE
        - IL
        - IM
        - IN
        - IO
        - IQ
        - IR
        - IS
        - IT
        - JE
        - JM
        - JO
        - JP
        - KE
        - KG
        - KH
        - KI
        - KM
        - KN
        - KP
        - KR
        - KW
        - KY
        - KZ
        - LA
        - LB
        - LC
        - LI
        - LK
        - LR
        - LS
        - LT
        - LU
        - LV
        - LY
        - MA
        - MC
        - MD
        - ME
        - MF
        - MG
        - MH
        - MK
        - ML
        - MM
        - MN
        - MO
        - MP
        - MQ
        - MR
        - MS
        - MT
        - MU
        - MV
        - MW
        - MX
        - MY
        - MZ
        - NA
        - NC
        - NE
        - NF
        - NG
        - NI
        - NL
        - "NO"
        - NP
        - NR
        - NU
        - NZ
        - OM
        - PA
        - PE
        - PF
        - PG
        - PH
        - PK
        - PL
        - PM
        - PN
        - PR
        - PS
        - PT
        - PW
        - PY
        - QA
        - RE
        - RO
        - RS
        - RU
        - RW
        - SA
        - SB
        - SC
        - SD
        - SE
        - SG
        - SH
        - SI
        - SJ
        - SK
        - SL
        - SM
        - SN
        - SO
        - SR
        - ST
        - SV
        - SY
        - SZ
        - TC
        - TD
        - TF
        - TG
        - TH
        - TJ
        - TK
        - TL
        - TM
        - TN
        - TO
        - TR
        - TT
        - TV
        - TW
        - TZ
        - UA
        - UG
        - UM
        - US
        - UY
        - UZ
        - VA
        - VC
        - VE
        - VG
        - VI
        - VN
        - VU
        - WF
        - WS
        - YE
        - YT
        - ZA
        - ZM
        - ZW
      country:
        type: string
        description: 'Country where party resides. This is typically read-only as it is recommended to be calculated based on the Country Code. Description based on the ISO 3166 2 Character Country Code. Back end systems can translate this to a description from the country code. '
      coordinate:
        $ref: '#/definitions/Account_externalAccountBankAddress_coordinate'
    description: 'Fields related to address contact points. '
  Account_partyIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      partyId:
        type: array
        description: "A party ID that should have its associated parties either returned or affected by a read, update or delete request. "
        items:
          $ref: '#/definitions/PartyId'
    description: "The list of party IDs that should be returned or affected by a read, update or delete request. "
  Account_accountNoteList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      note:
        type: array
        description: 'Details related to a specific note. '
        items:
          $ref: '#/definitions/Note'
    description: "List of notes on account, loan, etc.. "
  Account_meta_loanMeta:
    type: object
    properties:
      interestRate:
        type: number
        description: "Interest rate percent of the loan. Determines the amount charged each time period based on the loan period. Value is formatted as a percentile. A passed value of 4.5 is equivalent to 0.045 actual. 4.500 may be displayed as 4.500% or 4.5% depending on the user interface. Decimals available: 999.999 "
      creditLimit:
        $ref: '#/definitions/Account_accountEscheatAmount'
      annualPercentageRate:
        type: number
        format: decimal
        description: "Calculated annual percentage rate (APR). Is the interest rate for a whole year (annualized). Value is formatted as a percentile. A passed value of 4.5 is equivalent to 0.045 actual. 4.500 may be displayed as 4.500% or 4.5% depending on the user interface. Decimals available: 999.999 "
      rate:
        type: number
        description: "Interest rate that is used for calculations. Most of the time you would only use rate AND APR when there is a split or variable rate. Value is formatted as a percentile. A passed value of 4.5 is equivalent to 0.045 actual. 4.500 may be displayed as 4.500% or 4.5% depending on the user interface. Decimals available: 999.999 "
      minimumPayment:
        $ref: '#/definitions/Account_accountEscheatAmount'
      maturityDate:
        type: string
        format: date
        description: 'The date which a financial instrument matures. The date should be ISO 8601 format yyyy-mm-dd (2011-03-28). '
      originalBalance:
        $ref: '#/definitions/Account_accountEscheatAmount'
      currentDueDate:
        type: string
        format: date
        description: "The date that payment is due for the loan to keep in good standing and avoid penalties. Many times institutions will institute a grace period beyond this date, but this is the published due date. The date should be ISO 8601 format yyyy-mm-dd (2011-03-28). "
      currentPayoffBalance:
        $ref: '#/definitions/Account_accountEscheatAmount'
      interestDue:
        $ref: '#/definitions/Account_accountEscheatAmount'
      paymentFrequencyType:
        type: string
        description: 'The loan payment frequency '
        enum:
        - AmortizedSchedule
        - Annual
        - AtMaturity
        - Bimonthly
        - Biweekly
        - BiweeklySkipFirst
        - BiweeklySkipLast
        - Daily
        - EventTrigger
        - Hourly
        - Immediate
        - Monthly
        - None
        - OneTime
        - Other
        - PerUse
        - Quarterly
        - SemiAnnual
        - SemiMonthly
        - Triannual
        - Weekly
        - WeeklySkipFirst
        - WeeklySkipLast
        - XDays
        - XMonths
        - XYears
      lastPaymentDate:
        type: string
        format: date
        description: 'The date that the last payment was made. The date should be ISO 8601 format yyyy-mm-dd (2011-03-28). '
      lastPaymentAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      ytdInterestPaid:
        $ref: '#/definitions/Account_accountEscheatAmount'
      previousYtdInterestPaid:
        $ref: '#/definitions/Account_accountEscheatAmount'
      latePaymentFee:
        $ref: '#/definitions/Account_accountEscheatAmount'
      pastDueAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      lastStatementDate:
        type: string
        format: date
        description: 'The date of the most recent statement The date should be ISO 8601 format yyyy-mm-dd (2011-03-28). '
      previousStatementDate:
        type: string
        format: date
        description: 'The date of the previous statment The date should be ISO 8601 format yyyy-mm-dd (2011-03-28). '
      lastStatemntBalance:
        $ref: '#/definitions/Account_accountEscheatAmount'
      nextPaymentDate:
        type: string
        format: date
        description: 'The date that the next payment is due. The date should be ISO 8601 format yyyy-mm-dd (2011-03-28). '
      nextPaymentAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
    description: "Auto loans, etc. Loans that are NOT line of credit or credit cards. "
  Account_meta_checkingSavingsMeta:
    type: object
    properties:
      annualPercentageYield:
        type: number
        description: "Annual percentage yield. Is a normalized representation of an interest rate, based on a compounding period of one year. Value is formatted as a percentile. A passed value of 4.5 is equivalent to 0.045 actual. 4.500 may be displayed as 4.500% or 4.5% depending on the user interface. Decimals available: 999.999 "
      overDraftProtectionEnabled:
        type: boolean
        description: 'True if the account is enrolled in overdraft protection '
      overDraftFeesYtd:
        $ref: '#/definitions/Account_accountEscheatAmount'
      ytdInsufficientFundsFees:
        $ref: '#/definitions/Account_accountEscheatAmount'
      mtdInsufficientFundsFees:
        $ref: '#/definitions/Account_accountEscheatAmount'
      ytdInterestEarned:
        $ref: '#/definitions/Account_accountEscheatAmount'
      previousYtdInterestEarned:
        $ref: '#/definitions/Account_accountEscheatAmount'
      lastInterestEarnedDate:
        type: string
        format: date
        description: 'This is the date of the last interest/dividends posted to the account. The date should be ISO 8601 format yyyy-mm-dd (2011-03-28). '
      lastInterestEarnedAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      lastStatementDate:
        type: string
        format: date
        description: 'The date of the most recent statement The date should be ISO 8601 format yyyy-mm-dd (2011-03-28). '
      previousStatementDate:
        type: string
        format: date
        description: 'The date of the previous statment The date should be ISO 8601 format yyyy-mm-dd (2011-03-28). '
      lastTransactionDate:
        type: string
        format: date
        description: 'The date of the most recent transaction. The date should be ISO 8601 format yyyy-mm-dd (2011-03-28). '
      interestRate:
        type: number
        description: "Interest Rate earned by the investment. Determines the amount earned each time period based on the period. Value is formatted as a percentile. A passed value of 4.5 is equivalent to 0.045 actual. 4.500 may be displayed as 4.500% or 4.5% depending on the user interface. Decimals available: 999.999 "
      originalBalance:
        $ref: '#/definitions/Account_accountEscheatAmount'
  Account_meta_creditCardMeta:
    type: object
    properties:
      brand:
        type: string
        description: "The company that sponsors the card (i.e. Visa, MasterCard, American Express, etc.). "
      creditLimit:
        $ref: '#/definitions/Account_accountEscheatAmount'
      minimumPayment:
        $ref: '#/definitions/Account_accountEscheatAmount'
      currentDueDate:
        type: string
        format: date
        description: "The date that payment is due for the loan to keep in good standing and avoid penalties. Many times institutions will institute a grace period beyond this date, but this is the published due date. The date should be ISO 8601 format yyyy-mm-dd (2011-03-28). "
      lastStatementDate:
        type: string
        format: date
        description: 'The date of the most recent statement The date should be ISO 8601 format yyyy-mm-dd (2011-03-28). '
      previousStatementDate:
        type: string
        format: date
        description: 'The date of the previous statment The date should be ISO 8601 format yyyy-mm-dd (2011-03-28). '
      latePaymentFee:
        $ref: '#/definitions/Account_accountEscheatAmount'
      pastDueAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      lastPaymentDate:
        type: string
        format: date
        description: 'The date that the last payment was made. The date should be ISO 8601 format yyyy-mm-dd (2011-03-28). '
      lastPaymentAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      lastStatementBalance:
        $ref: '#/definitions/Account_accountEscheatAmount'
      interestRate:
        type: number
        description: "Interest rate percent of the loan. Determines the amount charged each time period based on the loan period. Value is formatted as a percentile. A passed value of 4.5 is equivalent to 0.045 actual. 4.500 may be displayed as 4.500% or 4.5% depending on the user interface. Decimals available: 999.999 "
      ytdInterestPaid:
        $ref: '#/definitions/Account_accountEscheatAmount'
      previousYtdInterestPaid:
        $ref: '#/definitions/Account_accountEscheatAmount'
      lastTransactionDate:
        type: string
        format: date
        description: 'The date of the most recent transaction. The date should be ISO 8601 format yyyy-mm-dd (2011-03-28). '
      annualPercentageRate:
        type: number
        description: "Calculated annual percentage rate (APR). Is the interest rate for a whole year (annualized). Value is formatted as a percentile. A passed value of 4.5 is equivalent to 0.045 actual. 4.500 may be displayed as 4.500% or 4.5% depending on the user interface. Decimals available: 999.999 "
      interestDue:
        $ref: '#/definitions/Account_accountEscheatAmount'
  Account_meta_investmentMeta:
    type: object
    properties:
      startingBalance:
        $ref: '#/definitions/Account_accountEscheatAmount'
      maturityDate:
        type: string
        format: date
        description: 'The date which a financial instrument matures. The date should be ISO 8601 format yyyy-mm-dd (2011-03-28). '
      interestRate:
        type: number
        description: "Interest Rate earned by the investment. Determines the amount earned each time period based on the period. Value is formatted as a percentile. A passed value of 4.5 is equivalent to 0.045 actual. 4.500 may be displayed as 4.500% or 4.5% depending on the user interface. Decimals available: 999.999 "
      compoundingFrequency:
        type: string
        description: "How often the interest is paid.  This field is open text but some examples might be daily, monthly, etc. Deprecated - Use Account-interestPostingFrequency. Planned removal in release v5.0. "
      ytdInterestEarned:
        $ref: '#/definitions/Account_accountEscheatAmount'
      previousYtdInterestEarned:
        $ref: '#/definitions/Account_accountEscheatAmount'
      lastInterestEarnedDate:
        type: string
        format: date
        description: 'This is the date of the last interest/dividends posted to the account. The date should be ISO 8601 format yyyy-mm-dd (2011-03-28). '
      lastInterestEarnedAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      lastStatementDate:
        type: string
        format: date
        description: 'The date of the most recent statement The date should be ISO 8601 format yyyy-mm-dd (2011-03-28). '
      previousStatementDate:
        type: string
        format: date
        description: 'The date of the previous statment The date should be ISO 8601 format yyyy-mm-dd (2011-03-28). '
      lastTransactionDate:
        type: string
        format: date
        description: 'The date of the most recent transaction. The date should be ISO 8601 format yyyy-mm-dd (2011-03-28). '
      annualPercentageYield:
        type: number
        description: "Annual percentage yield. Is a normalized representation of an interest rate, based on a compounding period of one year. Value is formatted as a percentile. A passed value of 4.5 is equivalent to 0.045 actual. 4.500 may be displayed as 4.500% or 4.5% depending on the user interface. Decimals available: 999.999 "
  Account_meta_lineOfCreditMeta:
    type: object
    properties:
      interestRate:
        type: number
        description: "Interest rate charged to the line of credit. Determines the amount charged each time period based on the period. Value is formatted as a percentile. A passed value of 4.5 is equivalent to 0.045 actual. 4.500 may be displayed as 4.500% or 4.5% depending on the user interface. Decimals available: 999.999 "
      originalBalance:
        $ref: '#/definitions/Account_accountEscheatAmount'
      creditLimit:
        $ref: '#/definitions/Account_accountEscheatAmount'
      minimumPayment:
        $ref: '#/definitions/Account_accountEscheatAmount'
      currentDueDate:
        type: string
        format: date
        description: "The date that payment is due for the line of credit to keep in good standing and avoid penalties. Many times institutions will institute a grace period beyond this date, but this is the published due date. The date should be ISO 8601 format yyyy-mm-dd (2011-03-28). "
      currentPayoffBalance:
        $ref: '#/definitions/Account_accountEscheatAmount'
      latePaymentFee:
        $ref: '#/definitions/Account_accountEscheatAmount'
      interestDue:
        $ref: '#/definitions/Account_accountEscheatAmount'
      pastDueAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      ytdInterestPaid:
        $ref: '#/definitions/Account_accountEscheatAmount'
      previousYtdInterestPaid:
        $ref: '#/definitions/Account_accountEscheatAmount'
      lastPaymentDate:
        type: string
        format: date
        description: 'The date that the last payment was made. The date should be ISO 8601 format yyyy-mm-dd (2011-03-28). '
      lastPaymentAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      paymentFrequencyType:
        type: string
        description: 'The loan payment frequency '
        enum:
        - AmortizedSchedule
        - Annual
        - AtMaturity
        - Bimonthly
        - Biweekly
        - BiweeklySkipFirst
        - BiweeklySkipLast
        - Daily
        - EventTrigger
        - Hourly
        - Immediate
        - Monthly
        - None
        - OneTime
        - Other
        - PerUse
        - Quarterly
        - SemiAnnual
        - SemiMonthly
        - Triannual
        - Weekly
        - WeeklySkipFirst
        - WeeklySkipLast
        - XDays
        - XMonths
        - XYears
      lastStatementDate:
        type: string
        format: date
        description: 'The date of the most recent statement The date should be ISO 8601 format yyyy-mm-dd (2011-03-28). '
      previousStatementDate:
        type: string
        format: date
        description: 'The date of the previous statment The date should be ISO 8601 format yyyy-mm-dd (2011-03-28). '
      lastTransactionDate:
        type: string
        format: date
        description: 'The date of the most recent transaction. The date should be ISO 8601 format yyyy-mm-dd (2011-03-28). '
      annualPercentageRate:
        type: number
        description: "Calculated annual percentage rate (APR). Is the interest rate for a whole year (annualized). Value is formatted as a percentile. A passed value of 4.5 is equivalent to 0.045 actual. 4.500 may be displayed as 4.500% or 4.5% depending on the user interface. Decimals available: 999.999 "
      nextPaymentDate:
        type: string
        format: date
        description: 'The date that the next payment is due. The date should be ISO 8601 format yyyy-mm-dd (2011-03-28). '
      nextPaymentAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
  Account_meta_mortgageMeta:
    type: object
    properties:
      interestRate:
        type: number
        description: "Interest rate charged to the mortgage. Determines the amount charged each time period based on the period. Value is formatted as a percentile. A passed value of 4.5 is equivalent to 0.045 actual. 4.500 may be displayed as 4.500% or 4.5% depending on the user interface. Decimals available: 999.999 "
      originalBalance:
        $ref: '#/definitions/Account_accountEscheatAmount'
      maturityDate:
        type: string
        format: date
        description: 'The date which a financial instrument matures. The date should be ISO 8601 format yyyy-mm-dd (2011-03-28). '
      escrowBalance:
        $ref: '#/definitions/Account_accountEscheatAmount'
      minimumPayment:
        $ref: '#/definitions/Account_accountEscheatAmount'
      currentDueDate:
        type: string
        format: date
        description: "The date that payment is due for the mortgage to keep in good standing and avoid penalties. Many times institutions will institute a grace period beyond this date, but this is the published due date.  The date should be ISO 8601 format yyyy-mm-dd (2011-03-28). "
      currentPayoffBalance:
        $ref: '#/definitions/Account_accountEscheatAmount'
      ytdTaxesPaid:
        $ref: '#/definitions/Account_accountEscheatAmount'
      ytdInterestPaid:
        $ref: '#/definitions/Account_accountEscheatAmount'
      previousYtdInterestPaid:
        $ref: '#/definitions/Account_accountEscheatAmount'
      latePaymentFee:
        $ref: '#/definitions/Account_accountEscheatAmount'
      pastDueAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      lastStatementDate:
        type: string
        format: date
        description: 'The date of the most recent statement The date should be ISO 8601 format yyyy-mm-dd (2011-03-28). '
      previousStatementDate:
        type: string
        format: date
        description: 'The date of the previous statment The date should be ISO 8601 format yyyy-mm-dd (2011-03-28). '
      nextPaymentDate:
        type: string
        format: date
        description: 'The date that the next payment is due. The date should be ISO 8601 format yyyy-mm-dd (2011-03-28). '
      nextPaymentAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
  Account_meta:
    type: object
    properties:
      loanMeta:
        $ref: '#/definitions/Account_meta_loanMeta'
      checkingSavingsMeta:
        $ref: '#/definitions/Account_meta_checkingSavingsMeta'
      creditCardMeta:
        $ref: '#/definitions/Account_meta_creditCardMeta'
      investmentMeta:
        $ref: '#/definitions/Account_meta_investmentMeta'
      lineOfCreditMeta:
        $ref: '#/definitions/Account_meta_lineOfCreditMeta'
      mortgageMeta:
        $ref: '#/definitions/Account_meta_mortgageMeta'
    description: "For each account type, optional meta information MAY be provided with these tags depending upon account type returned.  Intended choice - Due to cross language serialization issues the choice construct has been removed. It is the responsibility of the implementer to add programmatic logic for this complex type to detect, handle and or error when population of more than one element is present. "
  Account_transactionList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      transaction:
        type: array
        items:
          $ref: '#/definitions/Transaction'
    description: 'The transaction collection/array contains all the transactions for the given account. '
  Account_withholdingsInfoList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      withholdingInfo:
        type: array
        description: 'Fields related to require tax withholding information. '
        items:
          $ref: '#/definitions/WithholdingInfo'
    description: 'The list of withholding information. '
  AccountFilter_accountIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      accountId:
        type: array
        description: "An account ID that should have its associated accounts either returned or affected by a read, update or delete request. "
        items:
          $ref: '#/definitions/AccountId'
    description: "The list of account IDs that should have their associated accounts either returned or affected by a read, update or delete request. "
  AccountFilter_accountStatusList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      accountStatusPair:
        type: array
        description: 'Collection of account status and sub status pairs to return in a filter request. '
        items:
          $ref: '#/definitions/AccountStatusPair'
  AccountFilter_relationshipIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      relationshipId:
        type: array
        description: "A Relationship ID that should have its associated relationship either returned or affected by a read, update or delete request. "
        items:
          $ref: '#/definitions/RelationshipId'
    description: "The list of Relationship IDs that should be returned or affected by a read, update or delete request. "
  AccountFilter_accountTypeList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      accountType:
        type: array
        description: 'Collection of account types to return in a filter request. '
        items:
          $ref: '#/definitions/AccountType'
  AccountFilter_accountMicrList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      micrAccountNumber:
        type: array
        description: "An account MICR that should have its associated accounts either returned or affected by a read, update or delete request. "
        items:
          $ref: '#/definitions/MicrAccountNumber'
    description: "The list of account MICRs that should have their associated accounts either returned or affected by a read, update or delete request. "
  AccountFilter_accountIdentificationList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      accountIdentification:
        type: array
        description: "The set of account identification elements to specify accounts for a read, update or delete request. "
        items:
          $ref: '#/definitions/AccountIdentification'
    description: "Collection of account identifications to associate accounts affected by a read, update or delete request. This filter supports financial institutions that have a complex account identification structure to establish a unique key. "
  Activity_activityId:
    type: object
    properties:
      activityUniqueId:
        type: string
        description: 'A unique value (or values) used to identify one and only one activity within the repository. '
      activityIdKeyValueList:
        $ref: '#/definitions/AccessProfile_customData'
    description: "A unique value (or values) used to identify one and only one activity within the repository. Some activity systems do not have a concept of a unique key but a concept of a combined key to access values in the back end system  Intended choice  - Due to cross language serialization issues the choice construct has been removed. It is the responsibility of the implementer to add programmatic logic for this complex type to detect, handle and or error when population of more than one element is present. "
  Activity_activityRelatedTo_contactIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      contactId:
        type: array
        description: "A contact ID that should have its associated contacts either returned or affected by a read, update or delete request. "
        items:
          $ref: '#/definitions/ContactId'
    description: "The list of contact IDs that should have their associated contacts either returned or affected by a read, update or delete request. "
  Activity_activityRelatedTo_unknownPartyList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      party:
        type: array
        items:
          $ref: '#/definitions/Party'
    description: "The parties collection/array contains all the parties, for instance, that the credential set is authorized to access at the Institution based on applied filters. "
  Activity_activityRelatedTo:
    type: object
    properties:
      contactIdList:
        $ref: '#/definitions/Activity_activityRelatedTo_contactIdList'
      partyIdList:
        $ref: '#/definitions/Account_partyIdList'
      unknownPartyList:
        $ref: '#/definitions/Activity_activityRelatedTo_unknownPartyList'
      relationshipIdList:
        $ref: '#/definitions/AccountFilter_relationshipIdList'
      accountIdList:
        $ref: '#/definitions/AccountFilter_accountIdList'
      accountIdentificationList:
        $ref: '#/definitions/AccountFilter_accountIdentificationList'
    description: "List of contacts, parties, relationships and accounts related to this request. The lowest level will \"override\" the high levels.  The highest level items are used as defaults if the lower level items are not provided. Additionally, if contacts, parties, relationships or accounts are created as a result of the request, they can be included in the \"RelatedTo\" fields. "
  Activity_activityFieldImpactedList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      activityFieldImpacted:
        type: array
        items:
          $ref: '#/definitions/ActivityFieldImpacted'
    description: 'The collection/array of Fields impacted by an activity. '
  Activity_credentialTypesRequiredList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      credentialType:
        type: array
        description: 'List of credential types. '
        items:
          $ref: '#/definitions/CredentialType'
    description: 'List of credential types. '
  Activity_credentialsProvidedList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      credentialGroup:
        type: array
        description: "Combination of credentials necessary to get access to a system, i.e. a combination of username, password and token. "
        items:
          $ref: '#/definitions/CredentialGroup'
    description: 'Collection of credential groups for the party to use to access different systems. '
  ActivityFilter_activityIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      activityId:
        type: array
        items:
          $ref: '#/definitions/ActivityId'
    description: 'Collection of activity ids to return in a filter request. '
  ActivityFilter_activityStatusList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      activityStatus:
        type: array
        items:
          $ref: '#/definitions/ActivityStatus'
    description: 'Collection of activity statuses to return in a filter request. '
  ActivityFilter_activityTypeList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      activityType:
        type: array
        items:
          $ref: '#/definitions/ActivityType'
    description: 'Collection of activity types to return in a filter request. '
  ActivityFilter_creatorList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      activityType:
        type: array
        items:
          $ref: '#/definitions/ActivityType'
    description: 'Collection of creators to return in a filter request. '
  App_appParameterList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      appParameter:
        type: array
        description: 'Collection of app data. '
        items:
          $ref: '#/definitions/AppParameter'
  AppFilter_appIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      appId:
        type: array
        description: 'Collection of app ids to return in a filter request. '
        items:
          $ref: '#/definitions/AppId'
  AppFilter_appTypeList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      appType:
        type: array
        description: 'Collection of app types to return in a filter request. '
        items:
          $ref: '#/definitions/AppType'
  AppFilter_vendorIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      vendorId:
        type: array
        description: 'The vendor ID is a unique identifier which identifies the vendor that is creating a message. The vendor ID is assigned by the FI or established in concert by the vendor and FI. '
        items:
          $ref: '#/definitions/VendorId'
  AppFilter_appHashList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      appHash:
        type: array
        description: 'Collection of app hashes to return in a filter request. '
        items:
          $ref: '#/definitions/AppHash'
  AppFilter_appParameterIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      appParameterId:
        type: array
        description: 'Collection of app parameter ids to return in a filter request. '
        items:
          $ref: '#/definitions/AppParameterId'
  AppFilter_parameterNameList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      parameterName:
        type: array
        description: 'Collection of app parameter names to return in a filter request. '
        items:
          $ref: '#/definitions/ParameterName'
  AppFilter_parameterScopeList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      parameterScope:
        type: array
        description: 'Collection of app parameter scopes to return in a filter request. '
        items:
          $ref: '#/definitions/ParameterScope'
  AppFilter_parameterTypeList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      parameterType:
        type: array
        description: 'Collection of app parameter types to return in a filter request. '
        items:
          $ref: '#/definitions/ParameterType'
  Applicant_creditReportList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      creditReport:
        type: array
        description: "Details relating credit scores used in determining loan decisions, risk-based pricing, or membership eligibility. "
        items:
          $ref: '#/definitions/CreditReport'
    description: 'Collection of credit reports. '
  Application_productAppliedForList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      productAppliedFor:
        type: array
        description: "Product applied for and its requested amount, quoted rate, etc. "
        items:
          $ref: '#/definitions/ProductAppliedFor'
    description: "Products applied for and their requested amounts, quoted rates, etc. "
  Application_applicantList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      applicant:
        type: array
        description: 'Collection of fields to describe an applicant for the product. '
        items:
          $ref: '#/definitions/Applicant'
    description: 'List of applicants for the product. '
  ProductAppliedFor_productDetail:
    type: object
    properties:
      loan:
        $ref: '#/definitions/Loan'
      deposit:
        $ref: '#/definitions/Deposit'
      investment:
        $ref: '#/definitions/Investment'
    description: "Product detail is a structure pointing to fields based on the product type. Intended choice - Due to cross language serialization issues the choice construct has been removed. It is the responsibility of the implementer to add programmatic logic for this complex type to detect, handle and or error when population of more than one element is present. "
  ApplicationFilter_applicationIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      applicationId:
        type: array
        description: 'Filter for the unique identifier for the application in the back end system. '
        items:
          $ref: '#/definitions/ApplicationId'
    description: "Collection of applicaton IDs used for filtering on read, update or delete application service requests. "
  ApplicationFilter_productTypeList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      productType:
        type: array
        description: "Defines a general category for the product type to filter on.  If none are provided, then all should be returned. "
        items:
          $ref: '#/definitions/AccountType'
    description: 'Product type filter for making a request. If the list is nil then that indicates that no filters should be applied for product type. '
  ApplicationFilter_applicationStatusList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      applicationStatus:
        type: array
        description: 'Status of the application to indicate how the application is progressing from a workflow standpoint. '
        items:
          $ref: '#/definitions/ApplicationStatus'
    description: "List of application statuses used for filtering on read, update or delete application service requests. "
  Artifact_artifactId:
    type: object
    properties:
      artifactUniqueId:
        type: string
        description: 'A unique value (or values) used to identify one and only one artifact within the repository. '
      artifactIdKeyValueList:
        $ref: '#/definitions/AccessProfile_customData'
    description: "A unique value (or values) used to identify one and only one artifact within the repository. Some artifact systems do not have a concept of a unique key but a concept of a combined key to access values in the back end system.  Intended choice - Due to cross language serialization issues the choice construct has been removed. It is the responsibility of the implementer to add programmatic logic for this complex type to detect, handle and or error when population of more than one element is present. "
  ArtifactFilter_artifactIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      artifactId:
        type: array
        items:
          $ref: '#/definitions/ArtifactId'
    description: 'List of artifact IDs that can be used by other objects to point to each artifact in a list. '
  BillFilter_billIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      billId:
        type: array
        description: "A bill id that should have its associated bill data either returned or affected by a read, update or delete request. "
        items:
          $ref: '#/definitions/BillId'
    description: "The list of bill IDs that should have their associated bills either returned or affected by a read, update or delete request. "
  BillFilter_billFromPayeeIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      billPayeeId:
        type: array
        description: "A bill pay ID that should have its associated bill pay id either returned or affected by a read, update or delete request. "
        items:
          $ref: '#/definitions/BillPayeeId'
    description: "The list of bill pay IDs that should have their associated bill pay records either returned or affected by a read, update or delete request. "
  BillFilter_billStatusList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      billStatus:
        type: array
        description: "A bill status that should have its associated bill records either returned or affected by a read, update or delete request. "
        items:
          $ref: '#/definitions/BillStatus'
    description: "The list of bill statuses that should have their associated bill records either returned or affected by a read, update or delete request. "
  BillPayee_payeeAddress:
    type: object
    properties:
      line1:
        type: string
        description: 'Street address (Physical Address). '
      line2:
        type: string
        description: "Additional Address Information.  Typically contains additional information such as an apartment number, etc. "
      line3:
        type: string
        description: 'Additional Address Information. '
      line4:
        type: string
        description: 'Additional Address Information. '
      line5:
        type: string
        description: 'Additional Address Information. '
      line6:
        type: string
        description: 'Additional Address Information. '
      line7:
        type: string
        description: 'Additional Address Information. '
      line8:
        type: string
        description: 'Additional Address Information. '
      line9:
        type: string
        description: 'Additional Address Information. '
      line10:
        type: string
        description: 'Additional Address Information. '
      city:
        type: string
        description: 'City where party resides. '
      stateProvince:
        type: string
        description: 'State or province (international) where party resides. '
      postalCode:
        type: string
        description: 'Postal code or zip code where party resides. '
      countryCode:
        type: string
        description: ISO 3166-1  Year 2006 /xs:documentation
        enum:
        - AD
        - AE
        - AF
        - AG
        - AI
        - AL
        - AM
        - AN
        - AO
        - AQ
        - AR
        - AS
        - AT
        - AU
        - AW
        - AX
        - AZ
        - BA
        - BB
        - BD
        - BE
        - BF
        - BG
        - BH
        - BI
        - BJ
        - BL
        - BM
        - BN
        - BO
        - BR
        - BS
        - BT
        - BV
        - BW
        - BY
        - BZ
        - CA
        - CC
        - CD
        - CF
        - CG
        - CH
        - CI
        - CK
        - CL
        - CM
        - CN
        - CO
        - CR
        - CU
        - CV
        - CX
        - CY
        - CZ
        - DE
        - DJ
        - DK
        - DM
        - DO
        - DZ
        - EC
        - EE
        - EG
        - EH
        - ER
        - ES
        - ET
        - FI
        - FJ
        - FK
        - FM
        - FO
        - FR
        - GA
        - GB
        - GD
        - GE
        - GF
        - GG
        - GH
        - GI
        - GL
        - GM
        - GN
        - GP
        - GQ
        - GR
        - GS
        - GT
        - GU
        - GW
        - GY
        - HK
        - HM
        - HN
        - HR
        - HT
        - HU
        - ID
        - IE
        - IL
        - IM
        - IN
        - IO
        - IQ
        - IR
        - IS
        - IT
        - JE
        - JM
        - JO
        - JP
        - KE
        - KG
        - KH
        - KI
        - KM
        - KN
        - KP
        - KR
        - KW
        - KY
        - KZ
        - LA
        - LB
        - LC
        - LI
        - LK
        - LR
        - LS
        - LT
        - LU
        - LV
        - LY
        - MA
        - MC
        - MD
        - ME
        - MF
        - MG
        - MH
        - MK
        - ML
        - MM
        - MN
        - MO
        - MP
        - MQ
        - MR
        - MS
        - MT
        - MU
        - MV
        - MW
        - MX
        - MY
        - MZ
        - NA
        - NC
        - NE
        - NF
        - NG
        - NI
        - NL
        - "NO"
        - NP
        - NR
        - NU
        - NZ
        - OM
        - PA
        - PE
        - PF
        - PG
        - PH
        - PK
        - PL
        - PM
        - PN
        - PR
        - PS
        - PT
        - PW
        - PY
        - QA
        - RE
        - RO
        - RS
        - RU
        - RW
        - SA
        - SB
        - SC
        - SD
        - SE
        - SG
        - SH
        - SI
        - SJ
        - SK
        - SL
        - SM
        - SN
        - SO
        - SR
        - ST
        - SV
        - SY
        - SZ
        - TC
        - TD
        - TF
        - TG
        - TH
        - TJ
        - TK
        - TL
        - TM
        - TN
        - TO
        - TR
        - TT
        - TV
        - TW
        - TZ
        - UA
        - UG
        - UM
        - US
        - UY
        - UZ
        - VA
        - VC
        - VE
        - VG
        - VI
        - VN
        - VU
        - WF
        - WS
        - YE
        - YT
        - ZA
        - ZM
        - ZW
      country:
        type: string
        description: 'Country where party resides. This is typically read-only as it is recommended to be calculated based on the Country Code. Description based on the ISO 3166 2 Character Country Code. Back end systems can translate this to a description from the country code. '
      coordinate:
        $ref: '#/definitions/Account_externalAccountBankAddress_coordinate'
      addressType:
        type: string
        description: 'Classification of an address The temporary address overrides the home address when effective/expiration dates signal that temporary address is effective. CTR (Cash Transaction Report) address is used if the CTR address is different than the primary address. '
        enum:
        - Home
        - Work
        - Mailing
        - Previous
        - Temporary
        - CTR
        - Other
      effectiveDateTime:
        type: string
        format: datetime
        description: 'Used if address type is TEMPORARY. Address effective date and time. The date/time should be ISO 8601 UTC format. yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported. The time is assumed to be 00:00Z if omitted. '
      expirationDateTime:
        type: string
        format: datetime
        description: 'Used if address type is TEMPORARY. Address expiraton date and time. The date/time should be ISO 8601 UTC format. yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported. The time is assumed to be 00:00Z if omitted. '
      timeAtAddress:
        type: string
        format: duration
        description: "The duration spent at the address. The time interval is specified in the following form \"PnYnMnDTnHnMnS\" where: P indicates the period (required) nY indicates the number of years nM indicates the number of months nD indicates the number of days T indicates the start of a time section (required if you are going to specify hours, minutes, or seconds) nH indicates the number of hours nM indicates the number of minutes nS indicates the number of seconds Example: P5Y2M10DT15H would indicate five years, two months, 10 days, and 15 hours. "
      addressVerifyDateTime:
        type: string
        format: datetime
        description: 'The date the address was verified. The date/time should be ISO 8601 UTC format. yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported. The time is assumed to be 00:00Z if omitted. '
      otherAddressType:
        type: string
        description: 'Description of address type when addressType is set to other. '
    description: 'Fields related to address contact points. '
  BillPayee_payeePhone:
    type: object
    properties:
      phoneType:
        type: string
        description: 'The type of phone the number represents.  Also considered a classification of the phone. '
        enum:
        - Home
        - Work
        - Mobile
        - Pager
        - Fax
        - Other
      number:
        type: string
        description: 'Phone Number. '
      extension:
        type: string
        description: 'Phone Number Extension.  This is typically only seen when Phone Type is WORK but can apply to others in rare circumstances. '
      planFormat:
        type: string
        description: "(North American Number Plan Administration) +1-NPA-NXX-xxxx   Example 1-847-555-1212 (North American Number Plan without the Country Code)  NPA-NXX-xxxx Example 847-555-1212 Non-North American Number Plan phone numbers. This is an exception to the E.164 standard such as 411, 911, etc. to support shortened numbers within national boarders.  This value was provided to ensure 100% coverage of all types. "
        enum:
        - Nanp
        - NanpLessCountryCode
        - OtherInternational
        - NationalNumber
      description:
        type: string
        description: "Description beyond the phone number info. For example, Bobs phone when hes on vacation. This element is now secondary in priority to contactPointDescription and should be considered deprecated. "
      smsRegistered:
        type: boolean
        description: 'Phone number is registered to receive SMS messages. '
      countryCode:
        type: string
        description: ISO 3166-1  Year 2006 /xs:documentation
        enum:
        - AD
        - AE
        - AF
        - AG
        - AI
        - AL
        - AM
        - AN
        - AO
        - AQ
        - AR
        - AS
        - AT
        - AU
        - AW
        - AX
        - AZ
        - BA
        - BB
        - BD
        - BE
        - BF
        - BG
        - BH
        - BI
        - BJ
        - BL
        - BM
        - BN
        - BO
        - BR
        - BS
        - BT
        - BV
        - BW
        - BY
        - BZ
        - CA
        - CC
        - CD
        - CF
        - CG
        - CH
        - CI
        - CK
        - CL
        - CM
        - CN
        - CO
        - CR
        - CU
        - CV
        - CX
        - CY
        - CZ
        - DE
        - DJ
        - DK
        - DM
        - DO
        - DZ
        - EC
        - EE
        - EG
        - EH
        - ER
        - ES
        - ET
        - FI
        - FJ
        - FK
        - FM
        - FO
        - FR
        - GA
        - GB
        - GD
        - GE
        - GF
        - GG
        - GH
        - GI
        - GL
        - GM
        - GN
        - GP
        - GQ
        - GR
        - GS
        - GT
        - GU
        - GW
        - GY
        - HK
        - HM
        - HN
        - HR
        - HT
        - HU
        - ID
        - IE
        - IL
        - IM
        - IN
        - IO
        - IQ
        - IR
        - IS
        - IT
        - JE
        - JM
        - JO
        - JP
        - KE
        - KG
        - KH
        - KI
        - KM
        - KN
        - KP
        - KR
        - KW
        - KY
        - KZ
        - LA
        - LB
        - LC
        - LI
        - LK
        - LR
        - LS
        - LT
        - LU
        - LV
        - LY
        - MA
        - MC
        - MD
        - ME
        - MF
        - MG
        - MH
        - MK
        - ML
        - MM
        - MN
        - MO
        - MP
        - MQ
        - MR
        - MS
        - MT
        - MU
        - MV
        - MW
        - MX
        - MY
        - MZ
        - NA
        - NC
        - NE
        - NF
        - NG
        - NI
        - NL
        - "NO"
        - NP
        - NR
        - NU
        - NZ
        - OM
        - PA
        - PE
        - PF
        - PG
        - PH
        - PK
        - PL
        - PM
        - PN
        - PR
        - PS
        - PT
        - PW
        - PY
        - QA
        - RE
        - RO
        - RS
        - RU
        - RW
        - SA
        - SB
        - SC
        - SD
        - SE
        - SG
        - SH
        - SI
        - SJ
        - SK
        - SL
        - SM
        - SN
        - SO
        - SR
        - ST
        - SV
        - SY
        - SZ
        - TC
        - TD
        - TF
        - TG
        - TH
        - TJ
        - TK
        - TL
        - TM
        - TN
        - TO
        - TR
        - TT
        - TV
        - TW
        - TZ
        - UA
        - UG
        - UM
        - US
        - UY
        - UZ
        - VA
        - VC
        - VE
        - VG
        - VI
        - VN
        - VU
        - WF
        - WS
        - YE
        - YT
        - ZA
        - ZM
        - ZW
      country:
        type: string
        description: 'Country where phone resides. This is typically read-only as it is recommended to be calculated based on the Country Code. Description based on the ISO 3166 2 Character Country Code. Back end systems can translate this to a description from the country code. '
      otherPhoneType:
        type: string
        description: 'Description of phone type when phoneType is set to other. '
    description: 'Fields related to phone contact points when phone type is selected. '
  BillPayee_payeeEmail:
    type: object
    properties:
      emailType:
        type: string
        description: 'The members classification of the email. '
        enum:
        - Home
        - Work
        - Other
      address:
        type: string
        description: 'Contact Email Address. '
      otherEmailType:
        type: string
        description: 'Description of email type when emailType is set to other. '
  BillPayeeFilter_billPayeeGlobalIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      billPayeeGlobalId:
        type: array
        description: "A bill pay global ID that should have its associated bill pay global id either returned or affected by a read, update or delete request. "
        items:
          $ref: '#/definitions/BillPayeeGlobalId'
    description: "The list of bill pay global IDs that should have their associated bill pay records that are global either returned or affected by a read, update or delete request. "
  BillPayeeFilter_payeeStatusList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      payeeStatus:
        type: array
        description: "A bill payee status that should have its associated bill payee records either returned or affected by a read, update or delete request. "
        items:
          $ref: '#/definitions/PayeeStatus'
    description: "The list of bill payee statuses that should have their associated bill payee records either returned or affected by a read, update or delete request. "
  BillPayeeFilter_eBillEnrollmentStatusList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      eBillEnrollmentStatus:
        type: array
        description: "An ebill enrollment status that should have its associated bill payee records either returned or affected by a read, update or delete request. "
        items:
          $ref: '#/definitions/EBillEnrollmentStatus'
    description: "The list of ebill enrollment statuses that should have their associated bill payee records either returned or affected by a read, update or delete request. "
  BillPaymentFilter_occurrenceIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      occurrenceId:
        type: array
        description: "An occurrence ID that should have its associated payments or transfers either returned or affected by a read, update or delete request. "
        items:
          $ref: '#/definitions/OccurrenceId'
    description: "The list of payments or transfers occurrence IDs that should have their associated occurrence ID either returned or affected by a read, update or delete request. "
  BillPaymentFilter_recurringIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      recurringId:
        type: array
        description: 'ID to uniquely identify a recurring payment or transfer request. '
        items:
          $ref: '#/definitions/RecurringId'
    description: 'The list of recurring payments or transfer requests. '
  BillPaymentFilter_occurrenceStatusList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      occurrenceStatus:
        type: array
        description: "An occurrence status that should have its associated payments or transfers either returned or affected by a read, update or delete request. "
        items:
          $ref: '#/definitions/OccurrenceStatus'
    description: "The list of payments or transfers occurrence statuss that should have their associated occurrence status either returned or affected by a read, update or delete request. "
  BillPaymentFilter_recurringStatusList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      recurringStatus:
        type: array
        description: 'Request status for a recurring transfer or payment. '
        items:
          $ref: '#/definitions/RecurringStatus'
    description: 'The list of recurring status for payments or transfer requests for filtering. '
  BillPaymentFilter_batchIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      batchId:
        type: array
        description: "A batch id that should have its associated payments or transfers either returned or affected by a read, update or delete request. "
        items:
          $ref: '#/definitions/BatchId'
    description: "The list of batch ids that should have their associated payments or transfers either returned or affected by a read, update or delete request. "
  BillPaymentFilter_recurringFromAccountList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      recurringFromAccount:
        type: array
        items:
          $ref: '#/definitions/AccountBase'
    description: 'The list of accounts from which the transfer or payment was taken. '
  BillPaymentFilter_recurringToAccountList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      recurringToAccount:
        type: array
        items:
          $ref: '#/definitions/AccountBase'
    description: 'The list of accounts from which the transfer or payment was made to. '
  BillPaymentOccurrence_occurrenceAmountDetailList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      lineItem:
        type: array
        description: 'Describes individual line item amounts. '
        items:
          $ref: '#/definitions/LineItem'
    description: 'The list of line items that describe the breakdown of a given amount. The sum of the line items should match the total of the amount being detailed. '
  BillPaymentOccurrence_occurrenceFromAccount:
    type: object
    properties:
      accountId:
        type: string
        description: 'The account ID is a persistent and unique identifier for the account. It must be unique for all users across the institution and remain the same over the life of the account. '
      type:
        type: string
        description: "Checking account, i.e., checks can be written against the account. Money market accounts can be included here or in money markets.  Its up to the institution. Savings and club accounts.  This can optionally include CDs, but its up to the institution. Auto loans, etc. Loans that are NOT lines of credit or credit cards. Loan behind the credit card.  Note the actual card information in the card object. Loan that is a line of credit but NOT a credit card. Loan that is made in exchange for taking title of property. Investment accounts such as brokerage and this can optionally include CDs and/or money markets, but its up to the institution. This account is a special type of checking account connected to a pre-paid card. Other account type. Loan that is made in installments. Loan is typically unsecured. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Installment. Loan that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Commercial. Line of Credit that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of CommercialLineOfCredit. A general ledger account of the financial institution. A loan account type that has not been prevously defined. This enumeration is considered deprecated. Recommend using account type loan and subAccount of OtherLoan. "
        enum:
        - Checking
        - Savings
        - Loan
        - CreditCard
        - LineOfCredit
        - Mortgage
        - Investment
        - PrePaidCard
        - Other
        - Installment
        - CommercialLoan
        - CommercialLineOfCredit
        - GeneralLedger
        - OtherLoan
      accountSubType:
        type: string
        description: 'The account subtype identifies the specific account type that the back end system will recognize. '
      openDate:
        type: string
        format: date
        description: 'The date that the account was opened. '
      closeDate:
        type: string
        format: date
        description: 'The date that the account was closed. '
      accountStatus:
        $ref: '#/definitions/Account_accountStatus'
      accountSubStatus:
        type: string
        description: 'For use to support additional acount sub statuses not present in enumerations. '
      micrAccountNumber:
        type: string
        description: 'The account number portion of a draft or line of credit MICR line. '
      routingNumber:
        type: string
        description: 'Routing number for the account. '
      displayAccountId:
        type: string
        description: "The account ID as a masked or obfuscated representation of the Account ID (accountId). This can be used for display or document generation purposes as a security precaution, or in cases where the accountId element has been encrypted or tokenized. "
  Card_linkedAccountList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      linkedAccount:
        type: array
        items:
          $ref: '#/definitions/LinkedAccount'
    description: 'A collection of accounts linked to a card that are accessible from an ATM. '
  Card_merchantCountryCodes:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      countryCode:
        type: string
        description: 'Collection of country codes. '
  CardFilter_cardIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      cardId:
        type: array
        description: 'Collection of unique card IDs that point to a list of cards. '
        items:
          $ref: '#/definitions/CardId'
  CardFilter_cardTypeList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      cardType:
        type: array
        description: "Card type that should have its associated Card data either returned or affected by a read, update or delete requst. "
        items:
          $ref: '#/definitions/CardType'
  CardFilter_cardStatusList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      cardStatus:
        type: array
        description: "Card status that should have its associated Card data either returned or affected by a read, update or delete requst. "
        items:
          $ref: '#/definitions/CardStatus'
  CategoryFilter_categoryIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      categoryId:
        type: array
        items:
          $ref: '#/definitions/CategoryId'
    description: 'Collection of category IDs to return in a filter request. '
  CategoryFilter_categoryTypeList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      categoryType:
        type: array
        items:
          $ref: '#/definitions/CategoryType'
    description: 'Collection of category types to return in a filter request. '
  Collateral_motorVehicleCollateral:
    type: object
    properties:
      collateralId:
        type: string
        description: 'The collateral ID is a persistent and unique identifier for the collateral item. '
      collateralCode:
        type: string
        description: "This is FI-defined and is used to describe the collateral for a secured loan, i.e. vehicle, boat, shares  (will be conditional for Secured Loans). "
      collateralPledgedDate:
        type: string
        format: date
        description: 'Date that the collateral is pledged for a loan. '
      description:
        type: string
        description: 'Description of the type of collateral/security. '
      securedCode:
        type: string
        description: "Code describing how the loan is secured (100%, partial release, etc.) for a loan secured by savings, certificates, or stock. "
      totalSecuredAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      valuationOfCollateral:
        $ref: '#/definitions/Account_accountEscheatAmount'
      ownerOfCollateral:
        type: string
        description: 'Name of the owner of the collateral. '
      loanToValuePercentage:
        type: number
        description: "Loan to value percentage: calculation of the original loan amount to the collateral value. "
      collateralValueSourceDate:
        type: string
        format: date
        description: 'The date that the estimated value was obtained from the collateral value source. '
      collateralValueSource:
        type: string
        description: "The source used to value the collateral. Examples: Kelly Blue Book, NADA - National Automobile Dealers Association, appraisal, etc. "
      collateralType:
        type: string
        description: 'The type of collateral. '
        enum:
        - aircraftCollateral
        - boatCollateral
        - letterOfCreditCollateral
        - mobileHomeCollateral
        - motorVehicleCollateral
        - otherTitledCollateral
        - realEstateCollateral
        - savingsCDCollateral
        - securitiesCollateral
        - shipCollateral
        - trailerCollateral
        - uccCollateral
      collateralSubType:
        type: string
        description: 'The collateralSubType supports discreet sub classifications of the collateral by an institution. '
      collateralSubTypeDescription:
        type: string
        description: 'The description of the collateralSubType as defined by the institution. '
      accountIdentificationList:
        $ref: '#/definitions/AccountFilter_accountIdentificationList'
      address:
        $ref: '#/definitions/Account_externalAccountBankAddress'
      year:
        type: integer
        description: 'The year of the titled collateral. '
      manufacturer:
        type: string
        description: 'The manufacturer of the titled collateral. '
      make:
        type: string
        description: 'The titled collateral make. '
      model:
        type: string
        description: 'The titled collateral model. '
      color:
        type: string
        description: 'The color of the titled collateral. '
      purchasePrice:
        $ref: '#/definitions/Account_accountEscheatAmount'
      isVehicleUsed:
        type: boolean
        description: 'Whether the titled collateral is used or new. '
      uccCode:
        type: string
        description: "Code used to register boats, RVs etc. Vehicles that dont have a title value because some states use UCC instead of titles altogether. "
      vehicleIdentificationNumber:
        type: string
        description: 'Vehicle identification number (VIN). Conditional - required for vehicle loans. '
      mileage:
        type: integer
        description: 'The mileage of the vehicle. '
      licensePlateNumber:
        type: string
        description: 'License plate number. '
      licensePlateState:
        type: string
        description: 'License plate state. '
      licensePlateExpiration:
        type: string
        format: date
        description: "Expiration date for license plate, which is the registration expiration date for the vehicle. "
      titleNumber:
        type: string
        description: 'Collateral title number. '
      titleState:
        type: string
        description: 'Title state. '
    description: 'Details related to vehicle collateral. '
  Collateral_aircraftCollateral:
    type: object
    properties:
      collateralId:
        type: string
        description: 'The collateral ID is a persistent and unique identifier for the collateral item. '
      collateralCode:
        type: string
        description: "This is FI-defined and is used to describe the collateral for a secured loan, i.e. vehicle, boat, shares  (will be conditional for Secured Loans). "
      collateralPledgedDate:
        type: string
        format: date
        description: 'Date that the collateral is pledged for a loan. '
      description:
        type: string
        description: 'Description of the type of collateral/security. '
      securedCode:
        type: string
        description: "Code describing how the loan is secured (100%, partial release, etc.) for a loan secured by savings, certificates, or stock. "
      totalSecuredAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      valuationOfCollateral:
        $ref: '#/definitions/Account_accountEscheatAmount'
      ownerOfCollateral:
        type: string
        description: 'Name of the owner of the collateral. '
      loanToValuePercentage:
        type: number
        description: "Loan to value percentage: calculation of the original loan amount to the collateral value. "
      collateralValueSourceDate:
        type: string
        format: date
        description: 'The date that the estimated value was obtained from the collateral value source. '
      collateralValueSource:
        type: string
        description: "The source used to value the collateral. Examples: Kelly Blue Book, NADA - National Automobile Dealers Association, appraisal, etc. "
      collateralType:
        type: string
        description: 'The type of collateral. '
        enum:
        - aircraftCollateral
        - boatCollateral
        - letterOfCreditCollateral
        - mobileHomeCollateral
        - motorVehicleCollateral
        - otherTitledCollateral
        - realEstateCollateral
        - savingsCDCollateral
        - securitiesCollateral
        - shipCollateral
        - trailerCollateral
        - uccCollateral
      collateralSubType:
        type: string
        description: 'The collateralSubType supports discreet sub classifications of the collateral by an institution. '
      collateralSubTypeDescription:
        type: string
        description: 'The description of the collateralSubType as defined by the institution. '
      accountIdentificationList:
        $ref: '#/definitions/AccountFilter_accountIdentificationList'
      address:
        $ref: '#/definitions/Account_externalAccountBankAddress'
      year:
        type: integer
        description: 'The year of the titled collateral. '
      manufacturer:
        type: string
        description: 'The manufacturer of the titled collateral. '
      make:
        type: string
        description: 'The titled collateral make. '
      model:
        type: string
        description: 'The titled collateral model. '
      color:
        type: string
        description: 'The color of the titled collateral. '
      purchasePrice:
        $ref: '#/definitions/Account_accountEscheatAmount'
      isVehicleUsed:
        type: boolean
        description: 'Whether the titled collateral is used or new. '
      uccCode:
        type: string
        description: "Code used to register boats, RVs etc. Vehicles that dont have a title value because some states use UCC instead of titles altogether. "
      serialNumber:
        type: string
      faaRegistrationNumber:
        type: string
      inspectionReportYN:
        type: boolean
      faaCoverLetterYN:
        type: boolean
      aircraftForCommercialUse:
        type: boolean
      descAvionicsEngines:
        type: string
      descOfLogBooks:
        type: string
      airportHomeBase:
        type: string
      hours:
        type: integer
        description: 'The number of hours on the aircraft. '
    description: 'Details related to aircraft collateral. '
  Collateral_shipCollateral:
    type: object
    properties:
      collateralId:
        type: string
        description: 'The collateral ID is a persistent and unique identifier for the collateral item. '
      collateralCode:
        type: string
        description: "This is FI-defined and is used to describe the collateral for a secured loan, i.e. vehicle, boat, shares  (will be conditional for Secured Loans). "
      collateralPledgedDate:
        type: string
        format: date
        description: 'Date that the collateral is pledged for a loan. '
      description:
        type: string
        description: 'Description of the type of collateral/security. '
      securedCode:
        type: string
        description: "Code describing how the loan is secured (100%, partial release, etc.) for a loan secured by savings, certificates, or stock. "
      totalSecuredAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      valuationOfCollateral:
        $ref: '#/definitions/Account_accountEscheatAmount'
      ownerOfCollateral:
        type: string
        description: 'Name of the owner of the collateral. '
      loanToValuePercentage:
        type: number
        description: "Loan to value percentage: calculation of the original loan amount to the collateral value. "
      collateralValueSourceDate:
        type: string
        format: date
        description: 'The date that the estimated value was obtained from the collateral value source. '
      collateralValueSource:
        type: string
        description: "The source used to value the collateral. Examples: Kelly Blue Book, NADA - National Automobile Dealers Association, appraisal, etc. "
      collateralType:
        type: string
        description: 'The type of collateral. '
        enum:
        - aircraftCollateral
        - boatCollateral
        - letterOfCreditCollateral
        - mobileHomeCollateral
        - motorVehicleCollateral
        - otherTitledCollateral
        - realEstateCollateral
        - savingsCDCollateral
        - securitiesCollateral
        - shipCollateral
        - trailerCollateral
        - uccCollateral
      collateralSubType:
        type: string
        description: 'The collateralSubType supports discreet sub classifications of the collateral by an institution. '
      collateralSubTypeDescription:
        type: string
        description: 'The description of the collateralSubType as defined by the institution. '
      accountIdentificationList:
        $ref: '#/definitions/AccountFilter_accountIdentificationList'
      address:
        $ref: '#/definitions/Account_externalAccountBankAddress'
      year:
        type: integer
        description: 'The year of the titled collateral. '
      manufacturer:
        type: string
        description: 'The manufacturer of the titled collateral. '
      make:
        type: string
        description: 'The titled collateral make. '
      model:
        type: string
        description: 'The titled collateral model. '
      color:
        type: string
        description: 'The color of the titled collateral. '
      purchasePrice:
        $ref: '#/definitions/Account_accountEscheatAmount'
      isVehicleUsed:
        type: boolean
        description: 'Whether the titled collateral is used or new. '
      uccCode:
        type: string
        description: "Code used to register boats, RVs etc. Vehicles that dont have a title value because some states use UCC instead of titles altogether. "
      nameOfVessel:
        type: string
        description: 'The name of the ship. '
      officialNumber:
        type: string
        description: 'The official identification number for the ship. '
      marinaPort:
        type: string
        description: 'The marina or port from which the ship hails. '
      grossTonnage:
        type: string
        description: 'The total tonnage of the ship when it is loaded. '
      netTonnage:
        type: string
        description: 'The total tonnage of the ship when it is not loaded. '
    description: 'Details related to ship collateral. '
  Collateral_trailerCollateral:
    type: object
    properties:
      collateralId:
        type: string
        description: 'The collateral ID is a persistent and unique identifier for the collateral item. '
      collateralCode:
        type: string
        description: "This is FI-defined and is used to describe the collateral for a secured loan, i.e. vehicle, boat, shares  (will be conditional for Secured Loans). "
      collateralPledgedDate:
        type: string
        format: date
        description: 'Date that the collateral is pledged for a loan. '
      description:
        type: string
        description: 'Description of the type of collateral/security. '
      securedCode:
        type: string
        description: "Code describing how the loan is secured (100%, partial release, etc.) for a loan secured by savings, certificates, or stock. "
      totalSecuredAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      valuationOfCollateral:
        $ref: '#/definitions/Account_accountEscheatAmount'
      ownerOfCollateral:
        type: string
        description: 'Name of the owner of the collateral. '
      loanToValuePercentage:
        type: number
        description: "Loan to value percentage: calculation of the original loan amount to the collateral value. "
      collateralValueSourceDate:
        type: string
        format: date
        description: 'The date that the estimated value was obtained from the collateral value source. '
      collateralValueSource:
        type: string
        description: "The source used to value the collateral. Examples: Kelly Blue Book, NADA - National Automobile Dealers Association, appraisal, etc. "
      collateralType:
        type: string
        description: 'The type of collateral. '
        enum:
        - aircraftCollateral
        - boatCollateral
        - letterOfCreditCollateral
        - mobileHomeCollateral
        - motorVehicleCollateral
        - otherTitledCollateral
        - realEstateCollateral
        - savingsCDCollateral
        - securitiesCollateral
        - shipCollateral
        - trailerCollateral
        - uccCollateral
      collateralSubType:
        type: string
        description: 'The collateralSubType supports discreet sub classifications of the collateral by an institution. '
      collateralSubTypeDescription:
        type: string
        description: 'The description of the collateralSubType as defined by the institution. '
      accountIdentificationList:
        $ref: '#/definitions/AccountFilter_accountIdentificationList'
      address:
        $ref: '#/definitions/Account_externalAccountBankAddress'
      year:
        type: integer
        description: 'The year of the titled collateral. '
      manufacturer:
        type: string
        description: 'The manufacturer of the titled collateral. '
      make:
        type: string
        description: 'The titled collateral make. '
      model:
        type: string
        description: 'The titled collateral model. '
      color:
        type: string
        description: 'The color of the titled collateral. '
      purchasePrice:
        $ref: '#/definitions/Account_accountEscheatAmount'
      isVehicleUsed:
        type: boolean
        description: 'Whether the titled collateral is used or new. '
      uccCode:
        type: string
        description: "Code used to register boats, RVs etc. Vehicles that dont have a title value because some states use UCC instead of titles altogether. "
      serialNumber:
        type: string
        description: 'The trailer manufacturers assigned serial number. '
    description: 'Details related to trailer collateral. '
  Collateral_boatCollateral:
    type: object
    properties:
      collateralId:
        type: string
        description: 'The collateral ID is a persistent and unique identifier for the collateral item. '
      collateralCode:
        type: string
        description: "This is FI-defined and is used to describe the collateral for a secured loan, i.e. vehicle, boat, shares  (will be conditional for Secured Loans). "
      collateralPledgedDate:
        type: string
        format: date
        description: 'Date that the collateral is pledged for a loan. '
      description:
        type: string
        description: 'Description of the type of collateral/security. '
      securedCode:
        type: string
        description: "Code describing how the loan is secured (100%, partial release, etc.) for a loan secured by savings, certificates, or stock. "
      totalSecuredAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      valuationOfCollateral:
        $ref: '#/definitions/Account_accountEscheatAmount'
      ownerOfCollateral:
        type: string
        description: 'Name of the owner of the collateral. '
      loanToValuePercentage:
        type: number
        description: "Loan to value percentage: calculation of the original loan amount to the collateral value. "
      collateralValueSourceDate:
        type: string
        format: date
        description: 'The date that the estimated value was obtained from the collateral value source. '
      collateralValueSource:
        type: string
        description: "The source used to value the collateral. Examples: Kelly Blue Book, NADA - National Automobile Dealers Association, appraisal, etc. "
      collateralType:
        type: string
        description: 'The type of collateral. '
        enum:
        - aircraftCollateral
        - boatCollateral
        - letterOfCreditCollateral
        - mobileHomeCollateral
        - motorVehicleCollateral
        - otherTitledCollateral
        - realEstateCollateral
        - savingsCDCollateral
        - securitiesCollateral
        - shipCollateral
        - trailerCollateral
        - uccCollateral
      collateralSubType:
        type: string
        description: 'The collateralSubType supports discreet sub classifications of the collateral by an institution. '
      collateralSubTypeDescription:
        type: string
        description: 'The description of the collateralSubType as defined by the institution. '
      accountIdentificationList:
        $ref: '#/definitions/AccountFilter_accountIdentificationList'
      address:
        $ref: '#/definitions/Account_externalAccountBankAddress'
      year:
        type: integer
        description: 'The year of the titled collateral. '
      manufacturer:
        type: string
        description: 'The manufacturer of the titled collateral. '
      make:
        type: string
        description: 'The titled collateral make. '
      model:
        type: string
        description: 'The titled collateral model. '
      color:
        type: string
        description: 'The color of the titled collateral. '
      purchasePrice:
        $ref: '#/definitions/Account_accountEscheatAmount'
      isVehicleUsed:
        type: boolean
        description: 'Whether the titled collateral is used or new. '
      uccCode:
        type: string
        description: "Code used to register boats, RVs etc. Vehicles that dont have a title value because some states use UCC instead of titles altogether. "
      bodyStyle:
        type: string
        description: 'The body style of the boat. '
      serialNumber:
        type: string
        description: 'The boat manufacturers assigned serial number. '
      marinaPort:
        type: string
        description: 'The marina or port at which the boat is primarily docked. '
      descOfEnginesEquip:
        type: string
        description: 'Description of the equipment and engines installed in the boat. '
      descOfLogBooks:
        type: string
        description: 'Description of the boat bull and engine log books. '
    description: 'Details related to pleasure boat collateral. '
  Collateral_otherTitledCollateral:
    type: object
    properties:
      collateralId:
        type: string
        description: 'The collateral ID is a persistent and unique identifier for the collateral item. '
      collateralCode:
        type: string
        description: "This is FI-defined and is used to describe the collateral for a secured loan, i.e. vehicle, boat, shares  (will be conditional for Secured Loans). "
      collateralPledgedDate:
        type: string
        format: date
        description: 'Date that the collateral is pledged for a loan. '
      description:
        type: string
        description: 'Description of the type of collateral/security. '
      securedCode:
        type: string
        description: "Code describing how the loan is secured (100%, partial release, etc.) for a loan secured by savings, certificates, or stock. "
      totalSecuredAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      valuationOfCollateral:
        $ref: '#/definitions/Account_accountEscheatAmount'
      ownerOfCollateral:
        type: string
        description: 'Name of the owner of the collateral. '
      loanToValuePercentage:
        type: number
        description: "Loan to value percentage: calculation of the original loan amount to the collateral value. "
      collateralValueSourceDate:
        type: string
        format: date
        description: 'The date that the estimated value was obtained from the collateral value source. '
      collateralValueSource:
        type: string
        description: "The source used to value the collateral. Examples: Kelly Blue Book, NADA - National Automobile Dealers Association, appraisal, etc. "
      collateralType:
        type: string
        description: 'The type of collateral. '
        enum:
        - aircraftCollateral
        - boatCollateral
        - letterOfCreditCollateral
        - mobileHomeCollateral
        - motorVehicleCollateral
        - otherTitledCollateral
        - realEstateCollateral
        - savingsCDCollateral
        - securitiesCollateral
        - shipCollateral
        - trailerCollateral
        - uccCollateral
      collateralSubType:
        type: string
        description: 'The collateralSubType supports discreet sub classifications of the collateral by an institution. '
      collateralSubTypeDescription:
        type: string
        description: 'The description of the collateralSubType as defined by the institution. '
      accountIdentificationList:
        $ref: '#/definitions/AccountFilter_accountIdentificationList'
      address:
        $ref: '#/definitions/Account_externalAccountBankAddress'
      year:
        type: integer
        description: 'The year of the titled collateral. '
      manufacturer:
        type: string
        description: 'The manufacturer of the titled collateral. '
      make:
        type: string
        description: 'The titled collateral make. '
      model:
        type: string
        description: 'The titled collateral model. '
      color:
        type: string
        description: 'The color of the titled collateral. '
      purchasePrice:
        $ref: '#/definitions/Account_accountEscheatAmount'
      isVehicleUsed:
        type: boolean
        description: 'Whether the titled collateral is used or new. '
      uccCode:
        type: string
        description: "Code used to register boats, RVs etc. Vehicles that dont have a title value because some states use UCC instead of titles altogether. "
      bodyStyle:
        type: string
        description: 'The body style of the collateral. '
      serialNumber:
        type: string
        description: 'The manufacturers assigned serial number. '
    description: 'Details related to other titled collateral. '
  Collateral_mobileHomeCollateral:
    type: object
    properties:
      collateralId:
        type: string
        description: 'The collateral ID is a persistent and unique identifier for the collateral item. '
      collateralCode:
        type: string
        description: "This is FI-defined and is used to describe the collateral for a secured loan, i.e. vehicle, boat, shares  (will be conditional for Secured Loans). "
      collateralPledgedDate:
        type: string
        format: date
        description: 'Date that the collateral is pledged for a loan. '
      description:
        type: string
        description: 'Description of the type of collateral/security. '
      securedCode:
        type: string
        description: "Code describing how the loan is secured (100%, partial release, etc.) for a loan secured by savings, certificates, or stock. "
      totalSecuredAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      valuationOfCollateral:
        $ref: '#/definitions/Account_accountEscheatAmount'
      ownerOfCollateral:
        type: string
        description: 'Name of the owner of the collateral. '
      loanToValuePercentage:
        type: number
        description: "Loan to value percentage: calculation of the original loan amount to the collateral value. "
      collateralValueSourceDate:
        type: string
        format: date
        description: 'The date that the estimated value was obtained from the collateral value source. '
      collateralValueSource:
        type: string
        description: "The source used to value the collateral. Examples: Kelly Blue Book, NADA - National Automobile Dealers Association, appraisal, etc. "
      collateralType:
        type: string
        description: 'The type of collateral. '
        enum:
        - aircraftCollateral
        - boatCollateral
        - letterOfCreditCollateral
        - mobileHomeCollateral
        - motorVehicleCollateral
        - otherTitledCollateral
        - realEstateCollateral
        - savingsCDCollateral
        - securitiesCollateral
        - shipCollateral
        - trailerCollateral
        - uccCollateral
      collateralSubType:
        type: string
        description: 'The collateralSubType supports discreet sub classifications of the collateral by an institution. '
      collateralSubTypeDescription:
        type: string
        description: 'The description of the collateralSubType as defined by the institution. '
      accountIdentificationList:
        $ref: '#/definitions/AccountFilter_accountIdentificationList'
      address:
        $ref: '#/definitions/Account_externalAccountBankAddress'
      year:
        type: integer
        description: 'The year of the titled collateral. '
      manufacturer:
        type: string
        description: 'The manufacturer of the titled collateral. '
      make:
        type: string
        description: 'The titled collateral make. '
      model:
        type: string
        description: 'The titled collateral model. '
      color:
        type: string
        description: 'The color of the titled collateral. '
      purchasePrice:
        $ref: '#/definitions/Account_accountEscheatAmount'
      isVehicleUsed:
        type: boolean
        description: 'Whether the titled collateral is used or new. '
      uccCode:
        type: string
        description: "Code used to register boats, RVs etc. Vehicles that dont have a title value because some states use UCC instead of titles altogether. "
      serialNumber:
        type: string
        description: 'The mobile home manufacturers assigned serial number. '
      bodyStyle:
        type: string
        description: 'The body style of the mobile home. '
      descOfEquipment:
        type: string
        description: 'Description of the equipment installed in the mobile home. '
    description: 'Details related to mobile home collateral. '
  Collateral_realEstateCollateral:
    type: object
    properties:
      collateralId:
        type: string
        description: 'The collateral ID is a persistent and unique identifier for the collateral item. '
      collateralCode:
        type: string
        description: "This is FI-defined and is used to describe the collateral for a secured loan, i.e. vehicle, boat, shares  (will be conditional for Secured Loans). "
      collateralPledgedDate:
        type: string
        format: date
        description: 'Date that the collateral is pledged for a loan. '
      description:
        type: string
        description: 'Description of the type of collateral/security. '
      securedCode:
        type: string
        description: "Code describing how the loan is secured (100%, partial release, etc.) for a loan secured by savings, certificates, or stock. "
      totalSecuredAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      valuationOfCollateral:
        $ref: '#/definitions/Account_accountEscheatAmount'
      ownerOfCollateral:
        type: string
        description: 'Name of the owner of the collateral. '
      loanToValuePercentage:
        type: number
        description: "Loan to value percentage: calculation of the original loan amount to the collateral value. "
      collateralValueSourceDate:
        type: string
        format: date
        description: 'The date that the estimated value was obtained from the collateral value source. '
      collateralValueSource:
        type: string
        description: "The source used to value the collateral. Examples: Kelly Blue Book, NADA - National Automobile Dealers Association, appraisal, etc. "
      collateralType:
        type: string
        description: 'The type of collateral. '
        enum:
        - aircraftCollateral
        - boatCollateral
        - letterOfCreditCollateral
        - mobileHomeCollateral
        - motorVehicleCollateral
        - otherTitledCollateral
        - realEstateCollateral
        - savingsCDCollateral
        - securitiesCollateral
        - shipCollateral
        - trailerCollateral
        - uccCollateral
      collateralSubType:
        type: string
        description: 'The collateralSubType supports discreet sub classifications of the collateral by an institution. '
      collateralSubTypeDescription:
        type: string
        description: 'The description of the collateralSubType as defined by the institution. '
      accountIdentificationList:
        $ref: '#/definitions/AccountFilter_accountIdentificationList'
      address:
        $ref: '#/definitions/Account_externalAccountBankAddress'
      taxId:
        type: string
        description: 'The property tax identification number for the real estate property. '
      parcelIDNNumber:
        type: string
        description: 'The parcel number for the real estate property. '
      section:
        type: string
        description: 'The section ID for the real estate property. '
      block:
        type: string
        description: 'The block ID for the real estate property. '
      lot:
        type: string
        description: 'The lot ID for the real estate property. '
      firstLien:
        type: boolean
        description: 'Indicates that the loan is the first lien on the real estate property. '
      existingLiens:
        type: boolean
        description: 'Indicates that the real estate property is serving as collateral for other existing loans. '
      dwelling:
        type: boolean
        description: 'Indicates that the real estate property is being used as a dwelling. '
      numberOfUnits:
        type: number
        format: float
        description: 'The number of family living units contained in the real estate property. '
      ownerOccupied:
        type: boolean
        description: 'Indicates that the real estate property is or will be occupied by the owner. '
      principalDwelling:
        type: boolean
        description: 'Indicates that the real estate property is the principal dwelling for the owner. '
      assumable:
        type: boolean
        description: 'Indicates that the loan is assumable. '
      manufacturedHousing:
        type: boolean
        description: 'Indicates that the real estate property includes a manufactured home. '
      construction:
        type: boolean
        description: 'Indicates that the real estate property is or will be under construction. '
      yearBuilt:
        type: number
        format: float
        description: 'The year in which the real estate structure was built. '
      condoPUD:
        type: boolean
        description: 'Indicates that the real estate property is a condominium or a planned unit development. '
      legalDescription:
        type: string
        description: 'The legal description of the real estate property. '
      rentalProperty:
        type: boolean
        description: 'Indicates that the real estate property is used as a rental property. '
      yearAcquired:
        type: string
        description: "The year that the owner first acquired the real estate property, if currently owned. "
      originalCost:
        $ref: '#/definitions/Account_accountEscheatAmount'
      presentValue:
        $ref: '#/definitions/Account_accountEscheatAmount'
      improvements:
        $ref: '#/definitions/Account_accountEscheatAmount'
      timeshare:
        type: boolean
        description: 'Indicates that the real estate property is a timeshare. '
    description: "Contains Details about Real Estate collateral types.  Examples are: 1-4 Family; Multi-Family; Commercial; Land. "
  Collateral_uccCollateral:
    type: object
    properties:
      collateralId:
        type: string
        description: 'The collateral ID is a persistent and unique identifier for the collateral item. '
      collateralCode:
        type: string
        description: "This is FI-defined and is used to describe the collateral for a secured loan, i.e. vehicle, boat, shares  (will be conditional for Secured Loans). "
      collateralPledgedDate:
        type: string
        format: date
        description: 'Date that the collateral is pledged for a loan. '
      description:
        type: string
        description: 'Description of the type of collateral/security. '
      securedCode:
        type: string
        description: "Code describing how the loan is secured (100%, partial release, etc.) for a loan secured by savings, certificates, or stock. "
      totalSecuredAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      valuationOfCollateral:
        $ref: '#/definitions/Account_accountEscheatAmount'
      ownerOfCollateral:
        type: string
        description: 'Name of the owner of the collateral. '
      loanToValuePercentage:
        type: number
        description: "Loan to value percentage: calculation of the original loan amount to the collateral value. "
      collateralValueSourceDate:
        type: string
        format: date
        description: 'The date that the estimated value was obtained from the collateral value source. '
      collateralValueSource:
        type: string
        description: "The source used to value the collateral. Examples: Kelly Blue Book, NADA - National Automobile Dealers Association, appraisal, etc. "
      collateralType:
        type: string
        description: 'The type of collateral. '
        enum:
        - aircraftCollateral
        - boatCollateral
        - letterOfCreditCollateral
        - mobileHomeCollateral
        - motorVehicleCollateral
        - otherTitledCollateral
        - realEstateCollateral
        - savingsCDCollateral
        - securitiesCollateral
        - shipCollateral
        - trailerCollateral
        - uccCollateral
      collateralSubType:
        type: string
        description: 'The collateralSubType supports discreet sub classifications of the collateral by an institution. '
      collateralSubTypeDescription:
        type: string
        description: 'The description of the collateralSubType as defined by the institution. '
      accountIdentificationList:
        $ref: '#/definitions/AccountFilter_accountIdentificationList'
      address:
        $ref: '#/definitions/Account_externalAccountBankAddress'
      financingStatement:
        type: boolean
        description: 'Indicates that a UCC financing statement has been filed. '
      generalDescription:
        type: string
        description: 'Description of the UCC collateral. '
      tortClaimDescription:
        type: string
        description: 'Description for a tort claim. '
      immovableDescription:
        type: string
        description: 'Description of immovable UCC collateral. '
    description: "Contains details about UCC collateral types (ownership evidence by UCC filings). Examples are: Inventory; Equipment; Fixtures; Livestock; Crops; Standing Timber; Minerals, Oil and Gas "
  Collateral_savingsCDCollateral:
    type: object
    properties:
      collateralId:
        type: string
        description: 'The collateral ID is a persistent and unique identifier for the collateral item. '
      collateralCode:
        type: string
        description: "This is FI-defined and is used to describe the collateral for a secured loan, i.e. vehicle, boat, shares  (will be conditional for Secured Loans). "
      collateralPledgedDate:
        type: string
        format: date
        description: 'Date that the collateral is pledged for a loan. '
      description:
        type: string
        description: 'Description of the type of collateral/security. '
      securedCode:
        type: string
        description: "Code describing how the loan is secured (100%, partial release, etc.) for a loan secured by savings, certificates, or stock. "
      totalSecuredAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      valuationOfCollateral:
        $ref: '#/definitions/Account_accountEscheatAmount'
      ownerOfCollateral:
        type: string
        description: 'Name of the owner of the collateral. '
      loanToValuePercentage:
        type: number
        description: "Loan to value percentage: calculation of the original loan amount to the collateral value. "
      collateralValueSourceDate:
        type: string
        format: date
        description: 'The date that the estimated value was obtained from the collateral value source. '
      collateralValueSource:
        type: string
        description: "The source used to value the collateral. Examples: Kelly Blue Book, NADA - National Automobile Dealers Association, appraisal, etc. "
      collateralType:
        type: string
        description: 'The type of collateral. '
        enum:
        - aircraftCollateral
        - boatCollateral
        - letterOfCreditCollateral
        - mobileHomeCollateral
        - motorVehicleCollateral
        - otherTitledCollateral
        - realEstateCollateral
        - savingsCDCollateral
        - securitiesCollateral
        - shipCollateral
        - trailerCollateral
        - uccCollateral
      collateralSubType:
        type: string
        description: 'The collateralSubType supports discreet sub classifications of the collateral by an institution. '
      collateralSubTypeDescription:
        type: string
        description: 'The description of the collateralSubType as defined by the institution. '
      accountIdentificationList:
        $ref: '#/definitions/AccountFilter_accountIdentificationList'
      address:
        $ref: '#/definitions/Account_externalAccountBankAddress'
      securityCollateralValueLimit:
        $ref: '#/definitions/Account_accountEscheatAmount'
      securityMarketValueLimit:
        type: number
        description: "The desired percentage for the collateral value to loan ration, below which the loan will be considered in default. "
      accountNumber:
        type: string
        description: 'The account number providing security for the loan. '
      accountType:
        type: string
        description: "Checking account, i.e., checks can be written against the account. Money market accounts can be included here or in money markets.  Its up to the institution. Savings and club accounts.  This can optionally include CDs, but its up to the institution. Auto loans, etc. Loans that are NOT lines of credit or credit cards. Loan behind the credit card.  Note the actual card information in the card object. Loan that is a line of credit but NOT a credit card. Loan that is made in exchange for taking title of property. Investment accounts such as brokerage and this can optionally include CDs and/or money markets, but its up to the institution. This account is a special type of checking account connected to a pre-paid card. Other account type. Loan that is made in installments. Loan is typically unsecured. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Installment. Loan that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Commercial. Line of Credit that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of CommercialLineOfCredit. A general ledger account of the financial institution. A loan account type that has not been prevously defined. This enumeration is considered deprecated. Recommend using account type loan and subAccount of OtherLoan. "
        enum:
        - Checking
        - Savings
        - Loan
        - CreditCard
        - LineOfCredit
        - Mortgage
        - Investment
        - PrePaidCard
        - Other
        - Installment
        - CommercialLoan
        - CommercialLineOfCredit
        - GeneralLedger
        - OtherLoan
      accountSubType:
        type: string
        description: 'The account subtype identifies the specific account type that the back end system will recognize. '
      faceValue:
        type: string
        description: 'The face value of the account. '
      issuerType:
        type: string
        description: 'The issuing or depository financial institution. '
      certified:
        type: boolean
        description: "Indicates if there is physical evidence of the collateral that the lender can take into its possession (e.g. Passbook, Certificate of Deposit). "
      possessoryInterestRate:
        $ref: '#/definitions/Account_accountEscheatAmount'
      amount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      percentage:
        type: number
        description: 'Percentage of the loan pledged. '
      certificateNumber:
        type: string
        description: 'The certificate number of the collateral account that is providing security for the loan. '
    description: 'Contains details about share and CD secured collateral types. '
  Collateral_securitiesCollateral:
    type: object
    properties:
      collateralId:
        type: string
        description: 'The collateral ID is a persistent and unique identifier for the collateral item. '
      collateralCode:
        type: string
        description: "This is FI-defined and is used to describe the collateral for a secured loan, i.e. vehicle, boat, shares  (will be conditional for Secured Loans). "
      collateralPledgedDate:
        type: string
        format: date
        description: 'Date that the collateral is pledged for a loan. '
      description:
        type: string
        description: 'Description of the type of collateral/security. '
      securedCode:
        type: string
        description: "Code describing how the loan is secured (100%, partial release, etc.) for a loan secured by savings, certificates, or stock. "
      totalSecuredAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      valuationOfCollateral:
        $ref: '#/definitions/Account_accountEscheatAmount'
      ownerOfCollateral:
        type: string
        description: 'Name of the owner of the collateral. '
      loanToValuePercentage:
        type: number
        description: "Loan to value percentage: calculation of the original loan amount to the collateral value. "
      collateralValueSourceDate:
        type: string
        format: date
        description: 'The date that the estimated value was obtained from the collateral value source. '
      collateralValueSource:
        type: string
        description: "The source used to value the collateral. Examples: Kelly Blue Book, NADA - National Automobile Dealers Association, appraisal, etc. "
      collateralType:
        type: string
        description: 'The type of collateral. '
        enum:
        - aircraftCollateral
        - boatCollateral
        - letterOfCreditCollateral
        - mobileHomeCollateral
        - motorVehicleCollateral
        - otherTitledCollateral
        - realEstateCollateral
        - savingsCDCollateral
        - securitiesCollateral
        - shipCollateral
        - trailerCollateral
        - uccCollateral
      collateralSubType:
        type: string
        description: 'The collateralSubType supports discreet sub classifications of the collateral by an institution. '
      collateralSubTypeDescription:
        type: string
        description: 'The description of the collateralSubType as defined by the institution. '
      accountIdentificationList:
        $ref: '#/definitions/AccountFilter_accountIdentificationList'
      address:
        $ref: '#/definitions/Account_externalAccountBankAddress'
      securityCollateralValueLimit:
        $ref: '#/definitions/Account_accountEscheatAmount'
      securityMarketValueLimit:
        type: number
        description: "The desired percentage for the collateral value to loan ration, below which the loan will be considered in default. "
      possessoryNumber:
        type: string
        description: 'The account or other number for the security. '
      faceValue:
        type: string
        description: 'The face value of the security instrument(s). '
      issuer:
        type: string
        description: 'The issuer of the security instrument(s). '
      numberOfShares:
        type: number
        description: 'The number of shares of stock being used as collateral. '
      cusipNumber:
        type: string
        description: "Enter the CUSIP No. identifier for this piece of collateral, if it was issued in the United States. If this is a foreign security, enter the CUSIP number. The CUSIP No. identifier consists of seven numbers and two letters and appears on all U.S. securites issued after 1970 in book-entry or certificate form. Foreign securities issued after 1989 are identified by a nine-digit identifier. "
      heldBy:
        type: string
        description: "If the securites will be held by the lender, indicate lender. If the securities will be held by another holder, indicate the other holder. "
      bookEntry:
        type: boolean
        description: 'Indicates if the security is registered in the books of the depository institution at which it is held and there is no physical evidence of the collateral. '
      valuationFrequency:
        type: string
        description: 'Indicates the frequency by which the value of the security will be updated. '
        enum:
        - Weekly
        - BiWeekly
        - Monthly
        - BiMonthly
        - Quarterly
        - SemiAnnually
        - Annually
    description: 'Contains details about security-based secured collateral types. '
  Collateral_letterOfCreditCollateral:
    type: object
    properties:
      collateralId:
        type: string
        description: 'The collateral ID is a persistent and unique identifier for the collateral item. '
      collateralCode:
        type: string
        description: "This is FI-defined and is used to describe the collateral for a secured loan, i.e. vehicle, boat, shares  (will be conditional for Secured Loans). "
      collateralPledgedDate:
        type: string
        format: date
        description: 'Date that the collateral is pledged for a loan. '
      description:
        type: string
        description: 'Description of the type of collateral/security. '
      securedCode:
        type: string
        description: "Code describing how the loan is secured (100%, partial release, etc.) for a loan secured by savings, certificates, or stock. "
      totalSecuredAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      valuationOfCollateral:
        $ref: '#/definitions/Account_accountEscheatAmount'
      ownerOfCollateral:
        type: string
        description: 'Name of the owner of the collateral. '
      loanToValuePercentage:
        type: number
        description: "Loan to value percentage: calculation of the original loan amount to the collateral value. "
      collateralValueSourceDate:
        type: string
        format: date
        description: 'The date that the estimated value was obtained from the collateral value source. '
      collateralValueSource:
        type: string
        description: "The source used to value the collateral. Examples: Kelly Blue Book, NADA - National Automobile Dealers Association, appraisal, etc. "
      collateralType:
        type: string
        description: 'The type of collateral. '
        enum:
        - aircraftCollateral
        - boatCollateral
        - letterOfCreditCollateral
        - mobileHomeCollateral
        - motorVehicleCollateral
        - otherTitledCollateral
        - realEstateCollateral
        - savingsCDCollateral
        - securitiesCollateral
        - shipCollateral
        - trailerCollateral
        - uccCollateral
      collateralSubType:
        type: string
        description: 'The collateralSubType supports discreet sub classifications of the collateral by an institution. '
      collateralSubTypeDescription:
        type: string
        description: 'The description of the collateralSubType as defined by the institution. '
      accountIdentificationList:
        $ref: '#/definitions/AccountFilter_accountIdentificationList'
      address:
        $ref: '#/definitions/Account_externalAccountBankAddress'
      securityCollateralValueLimit:
        $ref: '#/definitions/Account_accountEscheatAmount'
      securityMarketValueLimit:
        type: number
        description: "The desired percentage for the collateral value to loan ration, below which the loan will be considered in default. "
      possessoryNumber:
        type: string
        description: 'The account or other number for the letter of credit. '
      issueDate:
        type: string
        format: date
        description: 'The date on which the letter of credit was issued. '
  CollateralFilter_collateralIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      collateralId:
        type: array
        description: "A collateral ID that should have its associated collateral either returned or affected by a read, update or delete request. "
        items:
          $ref: '#/definitions/CollateralId'
    description: "The list of collateral IDs that should have their associated collateral either returned or affected by a read, update or delete request. "
  CollateralFilter_collateralTypeList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      collateralType:
        type: array
        description: 'The type of collateral. '
        items:
          $ref: '#/definitions/CollateralType'
    description: "The list of collateral types that should have their associated collateral records either returned or affected by a read, update or delete request. "
  CollateralFilter_collateralSubTypeList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      collateralSubType:
        type: array
        description: 'The collateralSubType supports discreet sub classifications of the collateral by an institution. '
        items:
          $ref: '#/definitions/CollateralSubType'
    description: "The list of CollateralSubTypes that should have their associated collateral records either returned or affected by a read, update or delete request. "
  Configuration_fiIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      fiId:
        type: array
        description: 'A valid financial institution for this instance. Identifies that these configuration parameters are related to this financial institution. '
        items:
          $ref: '#/definitions/FinancialInstitutionId'
    description: 'The valid financial institution list for this instance. Identifies that these configuration parameters are related to these financial institutions. '
  Configuration_fiList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      financialInstitution:
        type: array
        description: 'List of financial institution within this configuration. '
        items:
          $ref: '#/definitions/ConfigurationFinancialInstitution'
  Configuration_serviceList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      service:
        type: array
        description: 'A service and list of methods within the CUFX instance that are supported by this end point. '
        items:
          $ref: '#/definitions/Service'
  Configuration_configurationAppList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      configurationApp:
        type: array
        description: 'An app as its installed in the configuration. '
        items:
          $ref: '#/definitions/ConfigurationApp'
  Configuration_configurationNetworkNodeAddressList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      configurationNetworkNodeAddressList:
        type: array
        description: 'A list of network node addresses that are in or comprise the configuration. '
        items:
          $ref: '#/definitions/ConfigurationNetworkNodeAddress'
  ConfigurationApp_configurationAppParameterList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      configurationAppParameter:
        type: array
        description: 'A list of configuration app parameter IDs that point to how an app parameter is set/specialized in the configuration for an app. '
        items:
          $ref: '#/definitions/ConfigurationAppParameter'
  ConfigurationFinancialInstitution_configurationFiVendorList_configurationFiVendor:
    type: object
    properties:
      configurationFiVendorId:
        type: string
        description: 'The unique identifier for the configuration and financial institution and vendor. '
      vendorId:
        type: string
        description: 'The vendor ID is a unique identifier which identifies the vendor that is creating a message. The vendor ID is assigned by the FI or established in concert by the vendor and FI. The client application sends this along with the messages so that logging or other business may take place based on the vendor utilizing the service. This ID is not generated per data or security request but is generated "out-of-band" (i.e. prior generation by some external mechanism) of this process and stored in the Financial Institutions and Vendorâ€™s systems. A standard error will be returned if the vendor ID is not provided when it is required. '
      partyId:
        type: string
        description: 'The party ID is a persistent and unique identifier for the party not related to the accounts they own but tied to that person or organization. It should be unique for all parties across the institution and remain the same over the life of the relationship with the financial institution. '
      customData:
        $ref: '#/definitions/AccessProfile_customData'
  ConfigurationFinancialInstitution_configurationFiVendorList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      configurationFiVendor:
        $ref: '#/definitions/ConfigurationFinancialInstitution_configurationFiVendorList_configurationFiVendor'
  ConfigurationFinancialInstitution_configurationFiAppList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      configurationFiApp:
        type: array
        description: 'An app as its installed/specialized in the configuration for a financial institution. '
        items:
          $ref: '#/definitions/ConfigurationFinancialInstitutionApp'
  ConfigurationFinancialInstitutionApp_configurationFiAppParameterList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      configurationFiAppParameter:
        type: array
        description: 'An app parameter as its installed/specialized in the configuration for the financial institution. '
        items:
          $ref: '#/definitions/ConfigurationFinancialInstitutionAppParameter'
  ConfigurationNetworkNodeAddress_networkNodeAddress:
    type: object
    properties:
      networkNodeAddressId:
        type: string
        description: "The network node Address ID is a unique identifier for the network node address. This could be a mac address, IP V4 or V6 address, generated GUID, etc. "
      networkNodeAddressDescription:
        type: string
        description: 'Description to help identify what the address is for in the network. '
      networkNodeAddressValue:
        type: string
        description: "The network node Address value is an identifier for the network node. This could be a mac address, IP V4 or V6 address, etc. Port can be found in the networkNodePort field. "
      networkNodeAddressScopeIsLocal:
        type: boolean
        description: 'The network node scope of the address property based on standard IPV4 and IPV6 conventions is local. '
      networkNodeAddressType:
        type: string
        description: "The fourth version of the Internet Protocol (IP). It is one of the core protocols of standards-based internetworking methods in the Internet, and was the first version deployed for production in the ARPANET in 1983. https://en.wikipedia.org/wiki/IPv4 Most recent version of the Internet Protocol (IP), the communications protocol that provides an identification and location system for computers on networks and routes traffic across the Internet. https://en.wikipedia.org/wiki/IPv6 A media access control address (MAC address) of a device is a unique identifier assigned to network interface controllers for communications at the data link layer of a network segment. https://en.wikipedia.org/wiki/MAC_address A reference to a web resource that specifies its location on a computer network and a mechanism for retrieving it. https://en.wikipedia.org/wiki/URL A network node address type yet to be defined by the specification. "
        enum:
        - IPV4
        - IPV6
        - MAC
        - URL
        - Other
      networkNodeAddressPort:
        type: string
        description: "If needed and not included in the NetworkNodeAddress, the network port type identifies the specific port that communications are performed on. "
      customData:
        $ref: '#/definitions/AccessProfile_customData'
  Service_currencySupportList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      currency:
        type: array
        description: 'A currency. '
        items:
          $ref: '#/definitions/ISOCurrencyCodeType'
  Service_acceptLanguageList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      language:
        type: array
        description: 'Specifies a valid language-region.  For example en-us. http://www.iana.org/assignments/language-subtag-registry '
        items:
          $ref: '#/definitions/Language'
    description: 'The list of languages. '
  Service_fieldNotSupportedList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      fieldNotSupported:
        type: array
        description: 'Describe which fields are not supported by specifying the XSD path and any comments as to why it isnt supported. '
        items:
          $ref: '#/definitions/FieldNotSupported'
    description: 'List of fields not supported in the service. '
  Service_customDataUseList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      customDataUse:
        type: array
        description: 'List of comments related to how the custom data sections are being used. This is informational only and not processed by the system. '
        items:
          $ref: '#/definitions/CustomDataUse'
    description: 'List of XSD paths and comments related to how the custom data sections are being used. This is information only and not processed by the system. '
  Service_methodList_method_methodDependencyList_methodDependency:
    type: object
    properties:
      methodDependencyId:
        type: string
        description: 'Unique id for the Method Dependency. '
      serviceName:
        type: string
        description: 'The service name of the method that must be executed first. '
        enum:
        - AccessProfile
        - Account
        - Activity
        - App
        - Application
        - Artifact
        - Bill
        - BillPayee
        - BillPaymentOccurrence
        - BillPaymentReoccurring
        - Card
        - Category
        - Collateral
        - Configuration
        - Contact
        - CredentialGroup
        - CreditReport
        - DepositFunding
        - Deposit
        - Document
        - EligibilityRequirement
        - FeeSchedule
        - Field
        - Hold
        - InvestmentHolding
        - Investment
        - LoanDisbursement
        - Loan
        - Location
        - MicroDepositFunding
        - NetworkNode
        - Notes
        - OverdraftPriority
        - PartyAssociation
        - Party
        - PermissionList
        - Preference
        - ProductOffering
        - ProductServiceEnrollment
        - ProductServiceRequest
        - RegisteredDevice
        - Relationship
        - RemoteDeposit
        - SecureMessage
        - SimpleValidationRequest
        - SystemStatus
        - Transaction
        - TransferOccurrence
        - TransferRecurring
        - User
        - Wire
      methodName:
        type: string
        description: 'The method name of the method that must be executed first. '
      cufxVersion:
        type: string
        description: 'The CUFX version of the method that must be executed first.  The CUFX version is part of the key value since there may be implementation differences between different versions of the same service/method. '
        enum:
        - 1.0.3
        - 1.0.6
        - 2.0.0
        - 3.1.0
        - 3.2.0
        - 3.3.0
        - 4.0.0
        - 4.1.0
        - 4.2.0
        - 4.3.0
        - 4.4.0
        - 4.5.0
      customData:
        $ref: '#/definitions/AccessProfile_customData'
  Service_methodList_method_methodDependencyList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      methodDependency:
        $ref: '#/definitions/Service_methodList_method_methodDependencyList_methodDependency'
    description: "The methods that must be executed first before this method can be executed. This allows for orchestration differences amongst different implementations of back end endpoints. For example: Does the party need to be created first or after the account is created? "
  Service_methodList_method:
    type: object
    properties:
      methodId:
        type: string
        description: 'Unique id for the method. '
      methodName:
        type: string
        description: 'Generic name for the method. '
        enum:
        - Create
        - Read
        - Update
        - Delete
      uri:
        type: string
        format: anyURI
        description: "The base URI for the method.  For example: POST https://api.dataprovider.com/deposit?subMethod=GET This could also be a relative URI. For example: POST https://../deposit?subMethod=GET "
      methodDependencyList:
        $ref: '#/definitions/Service_methodList_method_methodDependencyList'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
  Service_methodList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      method:
        $ref: '#/definitions/Service_methodList_method'
  ConfigurationFilter_configurationIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      configurationId:
        type: array
        description: 'unique identification for the configuration. '
        items:
          $ref: '#/definitions/ConfigurationId'
    description: "The list of configuration IDs that should have their associated configurations either returned or affected by a read, update or delete configuration request. "
  ConfigurationFilter_configurationNameList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      configurationName:
        type: array
        description: 'A valid configuration name for this endpoint. '
        items:
          $ref: '#/definitions/ConfigurationName'
    description: 'List of valid configuration names for this endpoint. '
  ConfigurationFilter_environmentList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      environment:
        type: array
        description: 'A valid environment to have its associated record(s) returned '
        items:
          $ref: '#/definitions/Environment'
    description: 'List of valid environments to have their associated record(s) returned. '
  ConfigurationFilter_configurationStatusList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      configurationStatus:
        type: array
        description: 'A valid configuration Status for this endpoint. '
        items:
          $ref: '#/definitions/ConfigurationStatus'
    description: 'List of valid configuration statuses for this endpoint. '
  ConfigurationFilter_configurationCreatedByList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      configurationCreatedBy:
        type: array
        description: 'The unique identifier for the user that created the configuration. '
        items:
          $ref: '#/definitions/UserId'
    description: "The list of users that created a configuration that should have their associated configurations either returned or affected by a read, update or delete configuration request. "
  ConfigurationFilter_configurationLastUpdatedByList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      configurationLastModifiedBy:
        type: array
        description: 'The unique identifier for the user that last modified the configuration. '
        items:
          $ref: '#/definitions/UserId'
    description: "The list of users that last modified a configuration that should have their associated configurations either returned or affected by a read, update or delete configuration request. "
  ConfigurationFilter_fiIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      fiId:
        type: array
        description: 'A valid financial institution id for this instance. '
        items:
          $ref: '#/definitions/FinancialInstitutionId'
    description: "The list of financial institutions IDs that should have their associated financial institution records either returned or affected by a read, update or delete financial institution request. "
  ConfigurationFilter_configurationFiIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      configurationFiId:
        type: array
        description: 'The unique identifier for the configuration and financial institution. '
        items:
          $ref: '#/definitions/ConfigurationFinancialInstitutionId'
    description: "The list of Configuration FI IDs that should have their associated configurations either returned or affected by a read, update or delete configuration request. "
  ConfigurationFilter_configurationFiVendorIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      configurationFiVendorId:
        type: string
        description: 'The unique identifier for the configuration and financial institution and vendor. '
  ConfigurationFilter_methodIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      MethodId:
        type: array
        description: 'unique identification for the method. '
        items:
          $ref: '#/definitions/MethodId'
    description: "The list of Method IDs that should have their associated configurations either returned or affected by a read, update or delete configuration request. "
  ConfigurationFilter_methodDependencyIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      methodDependencyId:
        type: array
        description: 'Unique id for the Method Dependency. '
        items:
          $ref: '#/definitions/MethodDependencyId'
    description: "The list of method dependency IDs that should have their associated configurations either returned or affected by a read, update or delete configuration request. "
  ConfigurationFilter_configurationAppIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      configurationAppId:
        type: array
        description: 'A list of configuration app IDs that point to how an app as its installed/specialized in the configuration. '
        items:
          $ref: '#/definitions/ConfigurationAppId'
  ConfigurationFilter_configurationAppParameterIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      configurationAppParameterId:
        type: array
        description: 'The list of app parameters IDs that have been set/specialized for a configuration. '
        items:
          $ref: '#/definitions/ConfigurationAppParameterId'
  ConfigurationFilter_configurationFiAppIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      configurationFiAppId:
        type: array
        description: "The unique identifier for the configuration, financial institution and App. "
        items:
          $ref: '#/definitions/ConfigurationFinancialInstitutionAppId'
    description: "The list of Configuration FI App IDs that should have their associated configurations either returned or affected by a read, update or delete configuration request. "
  ConfigurationFilter_configurationFiAppParameterIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      configurationFiAppParameterId:
        type: array
        description: "The unique identifier for the configuration, financial institution and App. "
        items:
          $ref: '#/definitions/ConfigurationFinancialInstitutionAppParameterId'
    description: "The list of Configuration FI App Parameter IDs that should have their associated configurations either returned or affected by a read, update or delete configuration request. "
  ConfigurationFilter_configurationNetworkNodeAddressIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      configurationNetworkNodeAddressId:
        type: array
        description: "The unique identifier for the configuration, financial institution and network node address. "
        items:
          $ref: '#/definitions/ConfigurationNetworkNodeAddressId'
    description: "The list of Configuration network node address IDs that should have their associated configurations either returned or affected by a read, update or delete configuration request. "
  ConfigurationFilter_networkNodeAddressIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      networkNodeId:
        type: array
        description: 'Collection of network node ids to return in a filter request. '
        items:
          $ref: '#/definitions/NetworkNodeId'
  Contact_contactPersonName:
    type: object
    properties:
      firstName:
        type: string
        description: 'The persons given first name. '
      middleName:
        type: string
        description: 'The personâ€™s middle name. '
      lastName:
        type: string
        description: 'The personâ€™s last name or surname. '
      prefix:
        type: string
        description: "The personâ€™s prefix to their name, as in their title.  Typical examples are Dr., Mr., Mrs., etc.. "
      suffix:
        type: string
        description: "The personâ€™s suffix to their name.  Typical examples are Jr., III, etc.. "
      formattedName:
        type: string
        description: "All person name fields combined into one. This is typically a read-only field that can be returned by the data source. To remain flexible, this field can be either written to or returned by the data source. "
      nickname:
        type: string
        description: "The partyâ€™s casual or familiar name reference. Typical examples might be Tim if the partys first name is Timothy, or Jenny if the first name is Jennifer. "
    description: 'Name of a person. '
  Contact_contactPoint_instantMessage:
    type: object
    properties:
      messagingService:
        type: string
        description: "Instant Messaging Service.  Examples would be Google IM, Jabber, AOL, Yahoo, Facebook, Skype, etc.  Not a restricted value as these services often change. "
      user:
        type: string
        description: 'Contact user name within the instant messaging platform. '
  Contact_contactPoint_social:
    type: object
    properties:
      socialService:
        type: string
        description: "Social Service.  Examples would be Facebook, Twitter, Google Plus, LinkedIn, Pinterest, etc.  This is not a restricted value as these services often change. "
      user:
        type: string
        description: 'Contact user name within the social platform. '
  Contact_contactPoint_website:
    type: object
    properties:
      sitename:
        type: string
        description: "The URL of the web site.  Examples would be Facebook, Twitter, Google Plus, LinkedIn, Pinterest, etc.  This is not a restricted value as these services often change. "
      user:
        type: string
        description: 'Contact user name within the website platform. '
  Contact_contactPoint:
    type: object
    properties:
      address:
        $ref: '#/definitions/BillPayee_payeeAddress'
      phone:
        $ref: '#/definitions/BillPayee_payeePhone'
      email:
        $ref: '#/definitions/BillPayee_payeeEmail'
      instantMessage:
        $ref: '#/definitions/Contact_contactPoint_instantMessage'
      social:
        $ref: '#/definitions/Contact_contactPoint_social'
      website:
        $ref: '#/definitions/Contact_contactPoint_website'
      sms:
        $ref: '#/definitions/BillPayee_payeePhone'
    description: "Choice of contact point types  Intended choice - Due to cross language serialization issues the choice construct has been removed. It is the responsibility of the implementer to add programmatic logic for this complex type to detect, handle and or error when population of more than one element is present. "
  Contact_demonstratedAccess:
    type: object
    properties:
      dateTime:
        type: string
        format: datetime
        description: 'The date/time that the party demonstrated having access to use this contact point for electronic delivery. The date/time should be ISO 8601 UTC format. yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      fullName:
        type: string
        description: "The full name of the party that demonstrated having access to use this preference.  Depending upon the use case, this may or may not be provided but will typically be the name that the user typed in when they agreed to the conditions.  Since a personâ€™s name can change over time, the best practice is to store this at the time that the agreement was made. "
      userName:
        type: string
        description: "The credential username of the party that demonstrated having access. Since the username for a contact may change over time, the best practice is to store this at the time that the agreement was made. "
    description: 'Is a collection of fields that identifies that appropriate access has been demonstrated to receive information electronically for this contact point. '
  Contact_preferenceSettingList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      preferenceSetting:
        type: array
        description: 'The preference setting related to the object '
        items:
          $ref: '#/definitions/PreferenceSetting'
    description: 'List of preference settings related to an object. '
  ContactFilter_taxIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      taxId:
        type: array
        description: "A tax ID that should have its associated parties either returned or affected by a read, update or delete request. "
        items:
          $ref: '#/definitions/TaxId'
    description: "The list of tax IDs that should have their associated parties either returned or affected by a read, update or delete request. "
  ContactFilter_contactTypeList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      contactType:
        type: array
        description: "A contact type that should have its associated contacts either returned or affected by a read, update or delete request. "
        items:
          $ref: '#/definitions/ContactType'
    description: "The list of contact types that should have their associated contacts either returned or affected by a read, update or delete request. "
  Credential_didValidation:
    type: object
    properties:
      id:
        type: string
        description: "A DID URL is a network location identifier for a specific resource. It can be used to retrieve things like representations of DID subjects, verification methods, services, specific parts of a DID document, or other resources. A string that conforms to the rules in Â§ 3.2 DID URL Syntax. "
      controller:
        type: string
        description: "An entity that has the capability to make changes to a DID document. The generic DID scheme is a URI scheme conformant with [RFC3986]. A string that conforms to the rules in 3.1 DID Syntax. "
      type:
        type: string
        description: "The value of the type property MUST be a string that references exactly one verification method type. In order to maximize global interoperability, the verification method type SHOULD be registered in the DID Specification Registries [DID-SPEC-REGISTRIES]. https://www.w3.org/TR/did-core/#bib-did-spec-registries "
      publicKeyJwk:
        type: string
        description: "A map representing a JSON Web Key that conforms to [RFC7517]. See definition of publicKeyJwk for additional constraints. "
      publicKeyBase58:
        type: string
        description: 'A string that conforms to a base58btc encoded public key. '
    description: 'The population of data when credentialType is DID. When presented a verifiable DID credential may or may not be validated at the time of presentation. The following elements are necessary to determine the status of the credential and or provide the ability to execute a verification of the credential. The following map to the w3.org Verifiable Credentials Data Model v1.0. https://www.w3.org/TR/did-core/ '
  Credential_verifiedCredential_attributeList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      attribute:
        type: array
        description: 'Attribute pair associated to a verifiable credential. '
        items:
          $ref: '#/definitions/ValuePair'
    description: 'List of credential attribute pairs. A verifiable credential can possess any number of associated attributes pairs as defined by the issuing institution. '
  Credential_verifiedCredential:
    type: object
    properties:
      attributeList:
        $ref: '#/definitions/Credential_verifiedCredential_attributeList'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
  Credential_connectionProtocol:
    type: object
    properties:
      protocolName:
        type: string
        description: 'The name of the connection protocol. example aires-rfc. See https://github.com/hyperledger/aries-rfcs for example. '
      protocolFeatureName:
        type: string
        description: "The name of the feature or class within the protocol. Example RFC 0113: Question Answer Protocol. See https://github.com/hyperledger/aries-rfcs/tree/master/features for examples. "
      protocolVersion:
        type: string
        description: 'The version of the connection protocol. '
      protocolMessage:
        type: string
        description: "Contains the protocol message formatted in compliance to the protocol name, protocolFeatureName, and protocol Version. See https://github.com/hyperledger/aries-rfcs/tree/master/features/0113-question-answer for example. "
      protocolResponse:
        type: string
        description: "Contains the protocol message response formatted in compliance to the protocol name, protocolFeatureName, and protocol Version. See https://github.com/hyperledger/aries-rfcs/tree/master/features/0113-question-answer for example. "
      customData:
        $ref: '#/definitions/AccessProfile_customData'
  CredentialGroup_credentialList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      credential:
        type: array
        description: 'Credentials used by the party to access a system. '
        items:
          $ref: '#/definitions/Credential'
    description: 'Credential list is a combination of credentials that the user must know in order to access the system. '
  CredentialGroup_deliveryChannelList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      deliveryChannel:
        type: array
        description: 'The delivery channel for which this credential applies. '
        items:
          $ref: '#/definitions/DeliveryChannel'
    description: 'List of applicable delivery channels for these credentials. '
  CredentialGroupFilter_fiUserIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      fiUserId:
        type: array
        description: "fiUserId is a unique identifier for the credential group and is readable by the person. The person types this into systems to gain access, also using their password, PIN or whatever else is required to gain access. "
        items:
          $ref: '#/definitions/FiUserId'
    description: 'FiUserId list is used for making a filtered request. '
  CredentialGroupFilter_userIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      userId:
        type: array
        description: 'Collection of user ids to return in a filter request. '
        items:
          $ref: '#/definitions/UserId'
  CredentialGroupFilter_userIdTypeList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      userType:
        type: array
        description: 'Collection of user id types to return in a filter request. '
        items:
          $ref: '#/definitions/UserIdType'
  CreditReportFilter_creditReportIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      creditReportId:
        type: array
        description: 'Unique identifier for the credit report in the data repository. '
        items:
          $ref: '#/definitions/CreditReportId'
    description: 'List of unique identifiers typically used for pulling a list of credit reports from the data repository. '
  CreditReportRequest_reportTypeList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      reportType:
        type: string
        description: "For example, Experian CreditProfile, TransUnion EmploymentReport, as defined and supported by individual service providers. Can request more than one report type to be returned for each applicant if available. "
    description: 'List of credit report types. '
  Deposit_depositPartyList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      depositParty:
        type: array
        description: 'This object is subset with additional fields of the party data. '
        items:
          $ref: '#/definitions/DepositParty'
    description: 'A collection of party IDâ€™s that uniquely identify each party associated to this deposit and additional fields on how the party relates to the deposit. This list is in addition to the relationship parties if available. '
  DepositParty_depositPartyRelationshipType_holder:
    type: object
    properties:
      isHolder:
        type: boolean
        description: 'Specifies whether the party has a relationship status of holder on the account. '
      qualifier:
        type: string
        description: 'Only one primary party can exist on a relationship or an account. More than one joint may exist on a relationship or an account. '
        enum:
        - Primary
        - Joint
      authority:
        type: string
        description: 'Has access to funds and can perform transactions. Does not have access to funds and cannot perform transactions. Has access to only to dividend funds and can perform dividend only transactions. '
        enum:
        - Authorized
        - Unauthorized
        - DividendOnly
  DepositParty_depositPartyRelationshipType_beneficiary:
    type: object
    properties:
      isBeneficiary:
        type: boolean
        description: 'Specifies whether the party has a relationship status of beneficiary on the account. '
      qualifier:
        type: string
        description: "Beneficiary does not have access to deposit funds unless all holders are deceased.  If specified at the relationship level, the beneficiary receives funds across all deposits in the relationship. Student is the funds beneficiary in the event of a Coverdell ESA when funds are distributed. "
        enum:
        - Standard
        - Education
      authority:
        type: string
        description: 'Has access to funds and can perform transactions. Does not have access to funds and cannot perform transactions. Has access to only to dividend funds and can perform dividend only transactions. '
        enum:
        - Authorized
        - Unauthorized
        - DividendOnly
      beneficiaryPercent:
        type: number
        description: "Default to 100%.  If there is more than one beneficiary on the relationship, then beneficiary percent should total to 100%. "
      beneficiaryTypes:
        type: string
        description: "If the primary passes away, then the contingent beneficiary receives the benefits. "
        enum:
        - Primary
        - Contingent
  DepositParty_depositPartyRelationshipType_agent:
    type: object
    properties:
      qualifier:
        type: string
        description: "Party acts on behalf of the account holder or borrower. If this is at the relationship level, they can manage all deposits and loans within the relationship. Party acting on behalf of the trust account based on a trust agreement. If this is at the relationship level, the party can manage all deposits and loans within the relationship. Party acting on behalf of the account holder or borrower based on a power of attorney letter. Party which can deposit government checks on behalf of the deposit account holder. If this is at the relationship level, they can deposit government checks in any of the deposits within the relationship. Party reported to government for CTR transactions on behalf of the account holder or borrower. Party is attorney-in-fact managing an account for a client. If this is at the relationship level, the party can manage all deposits and loans within the relationship. Party that is the adult caretaker of a Coverdell ESA deposit account. Typically this is the parent of the beneficiary upon distribution. Party with signature capability on the deposit or loan. If this is at the relationship level, the party has signature capability on all deposits and loans within the relationship. Depending on the loan arrangement, the authorized signer may be liable for the loan. Investment Company that is managing the investment on behalf of the investment account holder. "
        enum:
        - Custodian
        - Trustee
        - PowerOfAttorney
        - Representative
        - CtrTransactor
        - AttorneyTrust
        - ResponsibleIndividual
        - Signer
        - InvestmentCompany
      authority:
        type: string
        description: 'Has access to funds and can perform transactions. Does not have access to funds and cannot perform transactions. Has access to only to dividend funds and can perform dividend only transactions. '
        enum:
        - Authorized
        - Unauthorized
        - DividendOnly
  DepositParty_depositPartyRelationshipType_guarantor:
    type: object
    properties:
      isGuarantor:
        type: boolean
        description: 'Specifies whether the party has a relationship status of guarantor on the account. '
      authority:
        type: string
        description: 'Has access to funds and can perform transactions. Does not have access to funds and cannot perform transactions. Has access to only to dividend funds and can perform dividend only transactions. '
        enum:
        - Authorized
        - Unauthorized
        - DividendOnly
  DepositParty_depositPartyRelationshipType_safeDepositBoxUser:
    type: object
    properties:
      isSafeDepositBoxUser:
        type: boolean
        description: 'Specifies whether the party has a relationship status of safe deposit box user on the account. '
      qualifier:
        type: string
        description: 'Safe deposit box user is a colessee of the safe deposit box. Safe deposit box user is a deputy of the safe deposit box on behalf of the account or relationship holder. '
        enum:
        - Colessee
        - Deputy
      authority:
        type: string
        description: 'Has access to funds and can perform transactions. Does not have access to funds and cannot perform transactions. Has access to only to dividend funds and can perform dividend only transactions. '
        enum:
        - Authorized
        - Unauthorized
        - DividendOnly
  DepositParty_depositPartyRelationshipType:
    type: object
    properties:
      holder:
        $ref: '#/definitions/DepositParty_depositPartyRelationshipType_holder'
      beneficiary:
        $ref: '#/definitions/DepositParty_depositPartyRelationshipType_beneficiary'
      agent:
        $ref: '#/definitions/DepositParty_depositPartyRelationshipType_agent'
      guarantor:
        $ref: '#/definitions/DepositParty_depositPartyRelationshipType_guarantor'
      safeDepositBoxUser:
        $ref: '#/definitions/DepositParty_depositPartyRelationshipType_safeDepositBoxUser'
    description: "The party relationship type is the textual representation of what the party record represents to this loan, such as primary, co-borrower, beneficiary or some other type of relationship. This value may be visible to the user and must be human-readable.  If the same party exists at the relationship level, the account level relationship type overrides the relationship.  Intended choice - Due to cross language serialization issues the choice construct has been removed. It is the responsibility of the implementer to add programmatic logic for this complex type to detect, handle and or error when population of more than one element is present. "
  Document_documentSignatureList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      documentSignature:
        type: array
        description: 'An individual signature on the document. '
        items:
          $ref: '#/definitions/DocumentSignature'
    description: "If, when, and who signed the document. "
  Document_witnessList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      witness:
        type: array
        description: 'Details relating to the witness list. '
        items:
          $ref: '#/definitions/Witness'
    description: 'Collection of witnesses. '
  Document_documentArtifactList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      artifact:
        type: array
        items:
          $ref: '#/definitions/Artifact'
    description: "The artifacts collection/array contains all the artifacts, for instance, that the credential set is authorized to access at the Institution based on applied filters. "
  DocumentFilter_documentIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      documentId:
        type: array
        description: "A document ID that should have its associated documents either returned or affected by a read, update or delete request. "
        items:
          $ref: '#/definitions/DocumentId'
    description: "The list of document IDs that should have their associated documents either returned or affected by a read, update or delete request. "
  DocumentFilter_documentTitleList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      documentTitle:
        type: array
        description: "A document title that should have its associated documents either returned or affected by a read, update or delete request. "
        items:
          $ref: '#/definitions/DocumentTitle'
    description: "The list of document titles that should have their associated documents either returned or affected by a read, update or delete request. "
  DocumentFilter_documentTypeList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      documentType:
        type: array
        description: "A document type that should have its associated documents either returned or affected by a read, update or delete request. "
        items:
          $ref: '#/definitions/DocumentType'
    description: "The list of document types that should have their associated documents either returned or affected by a read, update or delete request. "
  DocumentFilter_documentSubTypeList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      documentSubType:
        type: array
        description: "A document sub type that should have its associated documents either returned or affected by a read, update or delete request. "
        items:
          $ref: '#/definitions/DocumentSubType'
    description: "The list of document sub types that should have their associated documents either returned or affected by a read, update or delete request. "
  DocumentFilter_documentStatusList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      documentStatus:
        type: array
        description: "A document status that should have its associated documents either returned or affected by a read, update or delete request. "
        items:
          $ref: '#/definitions/DocumentStatus'
    description: "The list of document statuses that should have their associated documents either returned or affected by a read, update or delete request. "
  DocumentFilter_documentSignatureTypeList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      documentSignatureType:
        type: array
        description: "A document signature type that should have its associated documents either returned or affected by a read, update or delete request. "
        items:
          $ref: '#/definitions/DocumentSignatureType'
    description: "The list of document signature types that should have their associated documents either returned or affected by a read, update or delete request. "
  EligibilityRequirement_affinityBrandList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      affinityBrand:
        type: array
        description: 'An affinity brand where the eligibility requirement is applicable. '
        items:
          $ref: '#/definitions/AffinityBrand'
    description: "List of affinity brands where this requirement is applicable.  Some institutions have sub-financial institutions that are affinity branded with a different name than the parent.  If no affinity brands are listed, then the eligibility requirement is applicable for all. "
  EligibilityRequirementFilter_eligibilityRequirementIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      requirementId:
        type: array
        description: "Identifier for the type of the eligibility requirement. For most financial institutions, this might be a select employee group, a community identifier or other field of membership criteria identifier. "
        items:
          $ref: '#/definitions/RequirementId'
  Fee_feeType:
    type: object
    properties:
      feeCategory:
        type: string
        description: "The fee category shows the family or category of a fee. Unpaid Item Fee Due to Draft or Due to Other: for NSF Fee. An overdraft is an extension of credit from a lending institution when an account balance reaches zero or an act of overdrawing a bank account. Overdraft fees are directly related to overdraft items due to draft and related transactions. These may include courtesy pay fees, overdraft item fee force paid, transfer courtesy fees, below minimum withdrawal fees, below minimum advance fees, and overdraft transfer fees. Withdrawal Fee: for W/D Fee. Advance Fee: for Adv Fee. Deposit Fee. Payment Fee. Stop Fee. Overlimit Fee Due to Draft: for OVL Fee; not covered by Reg DD. Bill Payment Fee; not covered by Reg DD. Transfer Fee: for XFR Fee; not covered by Reg DD. Withdrawal to Below Base Fee; not covered by Reg DD. Closing Within Base Count Days Fee; not covered by Reg DD. Withdrawal When Balance Below Base Fee: not covered by Reg DD. Fees related to interaction with tellers.  This could include a lobby visit fee. Check Printing Fee: for Check Fees; not covered by Reg DD. Check Other Fee: for Check Fees; not covered by Reg DD. New Share Fee; not covered by Reg DD. Document Stamp Fee: applies to Loan Tax (LT) teller transactions; not covered by Reg DD. ATM Custom Fee: for Custom ATM Fee Edits; not covered by Reg DD. Audio Custom Fee: for Custom Audio Fee Edits; not covered by Reg DD. Fees related to the delivery of online services. An example would be charging a member for custom data feed to desktop personal financial management products. International Transaction Fee: for Custom Card Fee Edits for International Transaction Fees; not covered by Reg DD. Payment Skip Fee: only for open end loans and lines of credit; covered by Regulation Z. Other Regulation Z Fee: only for open end loans and lines of credit. "
        enum:
        - Unpaid
        - Overdraft
        - Withdrawal
        - Advance
        - Deposit
        - Payment
        - StopFee
        - Overlimit
        - BillPayment
        - Transfer
        - WithdrawaltoBelowBase
        - ClosingWithinBaseCountDays
        - WithdrawalWhenBalanceBelowBase
        - TellerUsage
        - CheckPrinting
        - CheckOther
        - NewShare
        - DocumentStamp
        - ATMCustom
        - AudioCustom
        - OnlineServices
        - InternationalTransaction
        - PaymentSkip
        - OtherRegulationZ
      isRegDApplicable:
        type: boolean
        description: 'This element indicates if the fee is Regulation D applicable. Default is false.  If element is missing; false is assumed. '
  Fee_relatedTo:
    type: object
    properties:
      partyId:
        type: string
        description: 'The party ID is a persistent and unique identifier for the party not related to the accounts they own but tied to that person or organization. It should be unique for all parties across the institution and remain the same over the life of the relationship with the financial institution. '
      relationshipId:
        type: string
        description: 'The relationship ID is a persistent and unique identifier for the relationship. It should be unique for all relationships across the institution and remain the same over the life of the relationship with the financial institution. '
      accountId:
        type: string
        description: 'The account ID is a persistent and unique identifier for the account. It must be unique for all users across the institution and remain the same over the life of the account. '
      accountType:
        type: string
        description: "Checking account, i.e., checks can be written against the account. Money market accounts can be included here or in money markets.  Its up to the institution. Savings and club accounts.  This can optionally include CDs, but its up to the institution. Auto loans, etc. Loans that are NOT lines of credit or credit cards. Loan behind the credit card.  Note the actual card information in the card object. Loan that is a line of credit but NOT a credit card. Loan that is made in exchange for taking title of property. Investment accounts such as brokerage and this can optionally include CDs and/or money markets, but its up to the institution. This account is a special type of checking account connected to a pre-paid card. Other account type. Loan that is made in installments. Loan is typically unsecured. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Installment. Loan that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Commercial. Line of Credit that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of CommercialLineOfCredit. A general ledger account of the financial institution. A loan account type that has not been prevously defined. This enumeration is considered deprecated. Recommend using account type loan and subAccount of OtherLoan. "
        enum:
        - Checking
        - Savings
        - Loan
        - CreditCard
        - LineOfCredit
        - Mortgage
        - Investment
        - PrePaidCard
        - Other
        - Installment
        - CommercialLoan
        - CommercialLineOfCredit
        - GeneralLedger
        - OtherLoan
      accountSubType:
        type: string
        description: 'The account subtype identifies the specific account type that the back end system will recognize. '
    description: "Party, relationship, or account related to the Fee.  Intended choice - Due to cross language serialization issues the choice construct has been removed. It is the responsibility of the implementer to add programmatic logic for this complex type to detect, handle and or error when population of more than one element is present. "
  FeeScheduleFilter_feeIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      feeId:
        type: array
        description: 'The fee ID is a persistent and unique identifier for the fee. It must be unique for all users across the institution and remain the same over the life of the fee. '
        items:
          $ref: '#/definitions/FeeId'
    description: "The list of fee IDs that should have their associated transaction records either returned or affected by a read, update or delete request. "
  FeeScheduleFilter_feeTypeList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      feeType:
        type: array
        description: 'The fee type. '
        items:
          $ref: '#/definitions/FeeType'
    description: "The list of fee Types that should have their associated transaction records either returned or affected by a read, update or delete request. "
  FeeScheduleFilter_partyTypeList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      partyType:
        type: array
        description: "A party type that should have its associated parties either returned or affected by a read, update or delete request. "
        items:
          $ref: '#/definitions/PartyType'
    description: "The list of party types that should have their associated parties either returned or affected by a read, update or delete request. "
  Field_fieldRequirementList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      fieldRequirement:
        type: array
        description: 'Criteria that must be met for the field to be considered valid. '
        items:
          $ref: '#/definitions/FieldRequirement'
    description: 'List of data that a user provides '
  FieldFilter_fieldIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      fieldId:
        type: array
        description: 'Identifier for the field. '
        items:
          $ref: '#/definitions/FieldId'
  FieldFilter_fieldRequirementIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      fieldRequirementId:
        type: array
        description: 'Identifier for field requirement. '
        items:
          $ref: '#/definitions/FieldRequirementId'
  FieldFilter_fieldTypeList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      fieldType:
        type: array
        description: "The expected type for the  field. May be a Boolean, String, GUID, or other data types. "
        items:
          $ref: '#/definitions/FieldType'
  FieldFilter_fieldRequirementTypeList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      fieldRequirementType:
        type: array
        description: "The format of the content of fieldRequirement. Example: Java Script, Pattern, HTML, C# snippet. "
        items:
          $ref: '#/definitions/FieldRequirementType'
  FieldFilter_productServiceRequestIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      productServiceRequestId:
        type: array
        items:
          $ref: '#/definitions/ProductServiceRequestId'
    description: 'Definition of the list of product service request IDs that can be used by other objects to point to each product service request in a list. '
  FinancialInstitutionFilter_fiNameList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      fiName:
        type: array
        description: 'A valid financial institution name for this instance. '
        items:
          $ref: '#/definitions/FinancialInstitutionName'
    description: "The list of financial institution names that should have their associated financial institution records either returned or affected by a read, update or delete financial institution request. "
  FinancialInstitutionFilter_fiStatusList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      fiStatus:
        type: array
        description: 'A valid financial institution status for this instance. '
        items:
          $ref: '#/definitions/FinancialInstitutionStatus'
    description: "The list of financial institution statuses that should have their associated financial institution records either returned or affected by a read, update or delete financial institution request. "
  HoldFilter_holdIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      holdId:
        type: array
        description: "A hold ID that should have its associated hold id either returned or affected by a read, update or delete request. "
        items:
          $ref: '#/definitions/HoldId'
    description: "The list of hold IDs that should have their associated hold records either returned or affected by a read, update or delete request. "
  HoldFilter_transactionIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      transactionId:
        type: array
        description: "A transaction ID that should have its associated transaction records either returned or affected by a read, update or delete request. "
        items:
          $ref: '#/definitions/TransactionId'
    description: "The list of transaction IDs that should have their associated transaction records either returned or affected by a read, update or delete request. "
  HoldFilter_holdTypeList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      holdType:
        type: array
        description: "A hold type that should have its associated hold record either returned or affected by a read, update or delete request. "
        items:
          $ref: '#/definitions/HoldType'
    description: "The list of hold types that should have their associated hold records either returned or affected by a read, update or delete request. "
  HoldFilter_holdReasonTypeList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      holdReasonType:
        type: array
        description: "A hold reason type that should have its associated holds either returned or affected by a read, update or delete request. "
        items:
          $ref: '#/definitions/HoldReasonType'
    description: "The list of hold reason types that should have their associated hold records either returned or affected by a read, update or delete request. "
  Investment_investmentPartyList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      investmentParty:
        type: array
        description: 'This object is subset with additional fields of the party data. '
        items:
          $ref: '#/definitions/InvestmentParty'
    description: 'A collection of party IDâ€™s that uniquely identify each party associated to this investment and additional fields on how the party relates to the Investment. This list is in addition to the relationship parties if available. '
  Investment_investmentholdingList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      investmentHolding:
        type: array
        description: 'Details relating to a investment holding. '
        items:
          $ref: '#/definitions/InvestmentHolding'
    description: 'Data definition of a collection of holdings by account. '
  InvestmentParty_investmentPartyRelationshipType:
    type: object
    properties:
      holder:
        $ref: '#/definitions/DepositParty_depositPartyRelationshipType_holder'
      agent:
        $ref: '#/definitions/DepositParty_depositPartyRelationshipType_agent'
    description: "The investment party type is the textual representation of what the party record represents to this investment, such as primary, co-borrower, beneficiary or some other type of relationship. This value may be visible to the user and must be human-readable. If the same party exists at the relationship level, the account level relationship type overrides this relationship.  Intended choice - Due to cross language serialization issues the choice construct has been removed. It is the responsibility of the implementer to add programmatic logic for this complex type to detect, handle and or error when population of more than one element is present. "
  InvestmentParty_investmentContactList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      contact:
        type: array
        description: "The contact list collection/array contains all the contacts points, that the credential set is authorized to access at the Institution based on applied filters. "
        items:
          $ref: '#/definitions/Contact'
    description: "The contact list collection/array contains all the contacts points, that the credential set is authorized to access at the Institution based on applied filters. "
  InvestmentFilter_holdingIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      holdingId:
        type: array
        description: "An holding ID that should have its associated accounts either returned or affected by a read, update or delete request. "
        items:
          $ref: '#/definitions/HoldingId'
    description: "The list of holding IDs that should have their associated accounts either returned or affected by a read, update or delete request. "
  Loan_loanPartyList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      loanParty:
        type: array
        description: 'This includes each party ID and how it relates to the loan. '
        items:
          $ref: '#/definitions/LoanParty'
    description: "A collection of party IDâ€™s that uniquely identify each party associated to this loan and additional fields on how the party relates to the loan. This list is in addition to the relationship parties, if available. "
  Loan_loanInterestRateDetail:
    type: object
    properties:
      originalEffectiveRate:
        type: number
        description: 'Original effective rate when the loan was opened. '
      rateDiscountPercentage:
        type: number
        description: 'Percentage of interest rate discount being given. '
      rateDiscountReasonCode:
        type: string
        description: 'Code-reason for giving the rate discount. '
      relationshipRateDiscountPercentage:
        type: number
        description: "Relationship-based pricing discount percentage: percentage of interest rate discount for satisfying specific requirements, i.e. an employee is eligible for a certain discount rate percentage. "
      relationshipRateDiscountReasonCode:
        type: string
        description: "Reason for relationship-based pricing discount (i.e. multiple loans). This is FI-defined code and it can also be a relationship group in order to represent a group, i.e. all Bose employees. "
      annualPercentageRate:
        type: number
        description: 'Calculated annual percentage rate (APR). '
      rate:
        type: number
        description: 'Interest rate that is used for calculations. Most of the time you would only use rate AND APR when there is a split or variable rate. '
      isSplitRate:
        type: boolean
        description: 'Indicates if loan rates are split. '
      splitRateCode:
        type: string
        description: 'Describes the interest rate type that is used in the interest calculation process. '
      rateMaximum:
        type: number
        description: "Ceiling interest rate indicating the highest interest rate allowed. Note: revolving loans only, i.e. lines, credit cards. "
      rateMinimum:
        type: number
        description: "Floor rate indicating the lowest interest rate allowed. Note: revolving loans only, i.e. lines, credit cards. "
      ratePercentageChange:
        type: number
        description: 'Percentage rate change allowed. '
      margin:
        type: string
        description: "Indicates type of margin: points or percentage. "
        enum:
        - Percentage
        - Points
      baseRateIndex:
        type: number
        description: 'Base rate used for calculations. '
      rateMarginPercentage:
        type: number
        description: 'Amount added to the index to determine the interest rate. '
      maximumFirstRateChangeIncrease:
        type: number
        description: 'Maximum first rate change increase. '
      maximumFirstRateChangeDecrease:
        type: number
        description: 'Maximum first rate change decrease. '
      maximumPercentageAdjustableRateChangeIncrease:
        type: number
        description: 'Maximum percentage adjustable rate change increase. '
      maxPercentageAdjustableRateChangeDecrease:
        type: number
        description: 'Maximum percentage adjustable rate change decrease. '
      maxAnnualRateChangeIncrease:
        type: number
        description: 'Maximum annual rate change increase. '
      maxAnnualRateChangeDecrease:
        type: number
        description: 'Maximum annual rate change decrease. '
      isRateMarginAboveIndex:
        type: boolean
        description: 'Indicates if the rate is above or below the index (i.e. above or below prime). '
      marginRiskRate:
        type: number
        description: "Value that increases the margin rate. If you have bad credit, this is the margin rate applied based on your credit. It is used for risk-based pricing. "
      scheduledRateChangeDate:
        type: string
        format: date
        description: 'Rate change date. '
      periodicCapAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      periodicCapStartRate:
        type: number
        description: 'Starting interest rate for the Periodic Cap period. '
      periodicCapStartDate:
        type: string
        format: date
        description: 'Starting date for the Periodic Cap period. '
      periodicCapFrequency:
        type: string
        description: 'Defined period during which the Periodic Cap applies. '
        enum:
        - Annual
        - Quarterly
        - Monthly
        - Semi-Annual
      periodicCapFrequencyValue:
        type: integer
        description: 'Periodic Cap frequency value. '
      splitRateBalance:
        $ref: '#/definitions/Account_accountEscheatAmount'
      paymentChangeDateTime:
        type: string
        format: datetime
        description: 'The date that the account may be subject to a payment change. The date/time should be ISO 8601 UTC format.  yyyy-mm-ddThh:mmZ (2011-03-28T12:00Z) or yyyy-mm-dd (2011-03-28) formats are supported.  The time is assumed to be 00:00Z if omitted. '
      rateReviewDays:
        type: string
        description: 'The number of days to prior to the next payment change date to begin an account rate review. '
      paymentReviewDays:
        type: string
        description: 'The number of days to prior to the next payment change date to begin a payment review. '
      rateChangeFrequencyType:
        type: string
        description: 'The frequency of interest rate adjustments on loan. '
        enum:
        - AmortizedSchedule
        - Annual
        - AtMaturity
        - Bimonthly
        - Biweekly
        - BiweeklySkipFirst
        - BiweeklySkipLast
        - Daily
        - EventTrigger
        - Hourly
        - Immediate
        - Monthly
        - None
        - OneTime
        - Other
        - PerUse
        - Quarterly
        - SemiAnnual
        - SemiMonthly
        - Triannual
        - Weekly
        - WeeklySkipFirst
        - WeeklySkipLast
        - XDays
        - XMonths
        - XYears
      rateChangeFrequencyDuration:
        type: string
        description: "The number of time periods when FrequencyType is of type XDays, XMonths or XYears. "
      paymentChangeFrequencyType:
        type: string
        description: 'The frequency of payment changes on loan. '
        enum:
        - AmortizedSchedule
        - Annual
        - AtMaturity
        - Bimonthly
        - Biweekly
        - BiweeklySkipFirst
        - BiweeklySkipLast
        - Daily
        - EventTrigger
        - Hourly
        - Immediate
        - Monthly
        - None
        - OneTime
        - Other
        - PerUse
        - Quarterly
        - SemiAnnual
        - SemiMonthly
        - Triannual
        - Weekly
        - WeeklySkipFirst
        - WeeklySkipLast
        - XDays
        - XMonths
        - XYears
      paymentChangeFrequencyDuration:
        type: string
        description: "The number of time periods when FrequencyType is of type XDays, XMonths or XYears. "
    description: 'Details related to the interest rate for the loan. '
  Loan_paymentOption:
    type: object
    properties:
      calculationCode:
        type: string
        description: "Payment calculation type in the loan record, which is used to tell the system how to calculate the loan payment. "
      type:
        type: string
        description: "Generally a code for fixed or variable type loans, but also could be a code indicating how the system will calculate/apply payments. "
        enum:
        - Fixed
        - LevelPayment
        - LevelPrincipal
        - Variable
      calculationMethod:
        type: string
        description: "FI-defined formula or method for calculating the payment. Its usually generated from product defaults, so from configuration or from a product default middle-ware message. "
      calculationPercentage:
        type: number
        description: 'Payment calculation percentage conditional for variable payment lines of credit '
      paymentApplicationOrderCode:
        type: string
        description: "FI-defined code that describes the order of applying loan payments, i.e. principal, interest, late fees, insurance. "
      frequency:
        type: string
        description: 'Used for corporate interface clients only. '
        enum:
        - AmortizedSchedule
        - Annual
        - Bimonthly
        - Biweekly
        - BiweeklySkipFirst
        - BiweeklySkipLast
        - Immediate
        - Monthly
        - Quarterly
        - SemiAnnual
        - SemiMonthly
        - SinglePayment
        - Weekly
        - WeeklySkipFirst
        - WeeklySkipLast
      numberOfAnnualPayments:
        type: integer
        description: "Number of payments per year. Note: this is for loans that are weekly or bi-weekly. "
      adjustmentMethod:
        type: string
        description: "FI-defined method by which payments are adjusted, based on the payment frequency. "
      isRoundPayment:
        type: boolean
        description: 'Whether or not to round off the payment amount. '
      paymentAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      dueDate:
        type: string
        format: date
        description: 'Due date of the payment. '
      firstPaymentDueDate:
        type: string
        format: date
        description: "First payment date for a loan, which can be different than the due date for the month (example: first of the month). "
      minimumPaymentAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      latePaymentAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      finalPaymentAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      maturityDate:
        type: string
        format: date
        description: 'The date which a financial instrument matures. The date should be ISO 8601 format yyyy-mm-dd (2011-03-28). '
      paymentDay:
        type: integer
        description: "Calendar day that the loan payment will be due, i.e. specific day of the month requested for due dates (15th of the month for example). "
      paymentMethod:
        type: string
        description: "The chosen payment method, examples: automatic transfer, automatic debit, cash, counter, check, bill pay, phone, debit card, electronic, payroll, coupon, etc. "
        enum:
        - AmortizationTransfer
        - AutomaticDebit
        - AutomaticTransfer
        - BillPay
        - Cash
        - Check
        - Counter
        - Coupon
        - DebitCard
        - Distribution
        - DistributionAfterDue
        - Electronic
        - Other
        - Payroll
        - PayrollAfterDue
        - Phone
        - ScheduledAutomaticTransfer
        - ScheduledAutomaticTransferAfterDue
      otherPaymentMethod:
        type: string
        description: "When Other is chosen for the payment method, this field is used for the other value. "
      couponCode:
        type: string
        description: 'Code used for batch programs to generate a coupon book. Conditional because its only for loans with a payment method equal to Coupon. '
      amountIncludingPrincipalAndInterest:
        $ref: '#/definitions/Account_accountEscheatAmount'
    description: 'Details related to the loan payment options. '
  Loan_loanFeeList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      loanFee:
        type: array
        description: 'Details related to loan fees. '
        items:
          $ref: '#/definitions/LoanFee'
    description: 'Details related to loan fees. '
  Loan_insuranceAddOnList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      insuranceAddOn:
        type: array
        description: 'Details relating to each insurance add on placed on the loan. It is insurance directly related to the loan. '
        items:
          $ref: '#/definitions/InsuranceAddOn'
    description: 'Details related to insurance details added to the loan. It is insurance directly related to the loan. '
  Loan_collateralList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      collateral:
        type: array
        description: 'Details related to specific collateral for a loan. '
        items:
          $ref: '#/definitions/Collateral'
    description: 'List of collateral returned from a data pull that was based on filters that were applied. '
  Loan_autoPaymentOption:
    type: object
    properties:
      autoPaymentOption:
        type: string
        description: "Can be used to set payment option for credit cards and LOC (minimum due, balance, set payment, principal, other). "
        enum:
        - Balance
        - MinimumDue
        - Other
        - Principal
        - SetPayment
      otherAutoPaymentOption:
        type: string
        description: 'Used when the AutoPaymentOption element value is Other. '
      autoPaymentFrequency:
        type: string
        description: 'The payment frequency of the auto payment. '
        enum:
        - Bimonthly
        - Biweekly
        - Monthly
        - OneTime
        - Other
        - Weekly
        - Yearly
      autoPaymentDayOfTheWeek:
        type: string
        description: "A specific day of the month on a monthly basis, or a specific day of the week on a weekly basis, or bi-weekly, or yearly.  If you have this, you would not send AutoPaymentDayOfTheMonth. "
        enum:
        - Monday
        - Tuesday
        - Wednesday
        - Thursday
        - Friday
        - Saturday
        - Sunday
      autoPaymentDayOfTheMonth:
        type: integer
        description: "A specific day of the month (typically a subset of 1-31). If you have this, you would not send AutoPaymentDayOfTheWeek. "
      autoPaymentAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      fromAccountId:
        type: string
        description: 'The account ID is a persistent and unique identifier for the account. It must be unique for all users across the institution and remain the same over the life of the account. '
      fromAccountType:
        type: string
        description: "Checking account, i.e., checks can be written against the account. Money market accounts can be included here or in money markets.  Its up to the institution. Savings and club accounts.  This can optionally include CDs, but its up to the institution. Auto loans, etc. Loans that are NOT lines of credit or credit cards. Loan behind the credit card.  Note the actual card information in the card object. Loan that is a line of credit but NOT a credit card. Loan that is made in exchange for taking title of property. Investment accounts such as brokerage and this can optionally include CDs and/or money markets, but its up to the institution. This account is a special type of checking account connected to a pre-paid card. Other account type. Loan that is made in installments. Loan is typically unsecured. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Installment. Loan that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Commercial. Line of Credit that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of CommercialLineOfCredit. A general ledger account of the financial institution. A loan account type that has not been prevously defined. This enumeration is considered deprecated. Recommend using account type loan and subAccount of OtherLoan. "
        enum:
        - Checking
        - Savings
        - Loan
        - CreditCard
        - LineOfCredit
        - Mortgage
        - Investment
        - PrePaidCard
        - Other
        - Installment
        - CommercialLoan
        - CommercialLineOfCredit
        - GeneralLedger
        - OtherLoan
      fromAccountSubType:
        type: string
        description: 'The account subtype identifies the specific account type that the back end system will recognize. '
    description: "Details related to auto payment options. Note: this is in the request; long-term may be added to inquiry response for maintenance. "
  Loan_delinquencyNoticeList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      delinquencyNotice:
        type: array
        description: 'Details related to each delinquency notice. It describes/details the actions taken when the loan is in a delinquent state. '
        items:
          $ref: '#/definitions/DelinquencyNotice'
    description: 'Details related to delinquency notices. This describes/details the actions taken when the loan is in a delinquent state. '
  Loan_skipPayment:
    type: object
    properties:
      numberOfSkipPaymentsAllowed:
        type: integer
        description: 'Number of loan payments allowed to be skipped. '
      skipPaymentBeginDate:
        type: string
        format: date
        description: 'Date a borrower is allowed to begin skipping payments. '
      monthToStartSkipPayments:
        type: string
        description: 'Type representing name of months. '
        enum:
        - January
        - February
        - March
        - April
        - May
        - June
        - July
        - August
        - September
        - October
        - November
        - December
      yearToSkipPayment:
        type: integer
        description: 'Indicates the year that a loan payment will be skipped. '
      isSkipRecurring:
        type: boolean
        description: 'Indicates that the skip payment details are on a recurring basis. '
    description: "Details describing up front skip payment parameters, available in specific loan products. "
  Loan_creditLimitIncreaseRequestList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      creditLimitIncreaseRequest:
        type: array
        description: 'A credit limit increase request. '
        items:
          $ref: '#/definitions/CreditLimitIncreaseRequest'
    description: "The list of credit limit increase request that should have their associated loans either returned or affected by a read, update or delete request. "
  LoanFee_lateChargeFee:
    type: object
    properties:
      lateChargeFormulaCode:
        type: string
        description: "Formula for calculating late charge, FI-defined. "
      numberOfLateChargeGraceDays:
        type: integer
        description: 'Number of grace days before accruing late charges. '
      addLateChargeToStandardPayment:
        type: boolean
        description: 'Defines whether or not to add the late charge to the standard payment. '
      lateChargePercentageRate:
        type: number
        description: 'Late charge percentage rate. '
    description: 'Late charge fee-related details. '
  LoanParty_loanPartyRelationshipType_borrower:
    type: object
    properties:
      qualifier:
        type: string
        description: 'Only one primary party can exist on a relationship or an account. More than one joint may exist on a relationship or an account. '
        enum:
        - Primary
        - Joint
      authority:
        type: string
        description: 'Has access to funds and can perform transactions. Does not have access to funds and cannot perform transactions. Has access to only to dividend funds and can perform dividend only transactions. '
        enum:
        - Authorized
        - Unauthorized
        - DividendOnly
  LoanParty_loanPartyRelationshipType_payee:
    type: object
    properties:
      isPayee:
        type: boolean
        description: 'Specifies whether the party has a relationship status of payee on the account. '
      qualifier:
        type: string
        description: "Payee can receive non-maturing dividend and interest payments from deposit accounts. If this is defined at the relationship level, the party receives all non-maturing dividends from all accounts within the relationship. Party can receive maturing dividend and interest payments from maturing deposits. If this is defined at the relationship level, the party receives all maturing dividend and interest payments from all accounts within the relationship. Party can receive non-maturing dividend and interest payments as well as maturing dividend and interest payments from maturing deposits.  If this is defined at the relationship level, the party receives all non-maturing and maturing dividend and interest payments from all accounts within the relationship. "
        enum:
        - Dividend
        - Maturity
        - DividendAndMaturity
      authority:
        type: string
        description: 'Has access to funds and can perform transactions. Does not have access to funds and cannot perform transactions. Has access to only to dividend funds and can perform dividend only transactions. '
        enum:
        - Authorized
        - Unauthorized
        - DividendOnly
  LoanParty_loanPartyRelationshipType_collateralGrantor:
    type: object
    properties:
      isCollateralGrantor:
        type: boolean
        description: 'Specifies whether the party has a relationship status of collateral grantor on the account. '
      authority:
        type: string
        description: 'Has access to funds and can perform transactions. Does not have access to funds and cannot perform transactions. Has access to only to dividend funds and can perform dividend only transactions. '
        enum:
        - Authorized
        - Unauthorized
        - DividendOnly
  LoanParty_loanPartyRelationshipType:
    type: object
    properties:
      borrower:
        $ref: '#/definitions/LoanParty_loanPartyRelationshipType_borrower'
      agent:
        $ref: '#/definitions/DepositParty_depositPartyRelationshipType_agent'
      payee:
        $ref: '#/definitions/LoanParty_loanPartyRelationshipType_payee'
      guarantor:
        $ref: '#/definitions/DepositParty_depositPartyRelationshipType_guarantor'
      collateralGrantor:
        $ref: '#/definitions/LoanParty_loanPartyRelationshipType_collateralGrantor'
    description: "The party relationship type is the textual representation of what the party record represents to this loan, such as primary, co-borrower, beneficiary or some other type of relationship. This value may be visible to the user and must be human-readable.  If the same party exists at the relationship level, the account level relationship type overrides the relationship.  Intended choice - Due to cross language serialization issues the choice construct has been removed. It is the responsibility of the implementer to add programmatic logic for this complex type to detect, handle and or error when population of more than one element is present. "
  LoanDisbursement_loanDisbursementCheck:
    type: object
    properties:
      loanDisbursementId:
        type: string
        description: "Unique identifier for this loan disbursement record. This should be a globally unique identifier, meaning it should be unique across all loans, not just this loan. "
      amount:
        type: number
        description: 'The amount of this disbursement.  This is a required field. '
      description:
        type: string
        description: 'A description of this disbursement.  This is for informative purposes and is optional. '
      comment:
        type: string
        description: "An optional comment that would be created on the host system corresponding to this transaction.  An example comment is: Disbursement from loan 1234-L10. "
      payeeLines:
        type: string
        description: "A check can have up to 3 payee lines printed on the check.  You need at least one payee line, otherwise the check cannot be printed. "
    description: 'A check disbursement would be used to produce a check with the given payee for the given amount. The check would draw from the funds of the new loan.  The host system is expected to calculate the check number and print out the check. '
  LoanDisbursement_loanDisbursementDepositToAccount:
    type: object
    properties:
      loanDisbursementId:
        type: string
        description: "Unique identifier for this loan disbursement record. This should be a globally unique identifier, meaning it should be unique across all loans, not just this loan. "
      amount:
        type: number
        description: 'The amount of this disbursement.  This is a required field. '
      description:
        type: string
        description: 'A description of this disbursement.  This is for informative purposes and is optional. '
      comment:
        type: string
        description: "An optional comment that would be created on the host system corresponding to this transaction.  An example comment is: Disbursement from loan 1234-L10. "
      toAccount:
        type: string
        description: 'The account number on the host that would have the funds deposited to it. This would be the full account number including everything the core needs to deposit the funds.  This field is required. '
      toAccountType:
        type: string
        description: "Checking account, i.e., checks can be written against the account. Money market accounts can be included here or in money markets.  Its up to the institution. Savings and club accounts.  This can optionally include CDs, but its up to the institution. Auto loans, etc. Loans that are NOT lines of credit or credit cards. Loan behind the credit card.  Note the actual card information in the card object. Loan that is a line of credit but NOT a credit card. Loan that is made in exchange for taking title of property. Investment accounts such as brokerage and this can optionally include CDs and/or money markets, but its up to the institution. This account is a special type of checking account connected to a pre-paid card. Other account type. Loan that is made in installments. Loan is typically unsecured. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Installment. Loan that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Commercial. Line of Credit that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of CommercialLineOfCredit. A general ledger account of the financial institution. A loan account type that has not been prevously defined. This enumeration is considered deprecated. Recommend using account type loan and subAccount of OtherLoan. "
        enum:
        - Checking
        - Savings
        - Loan
        - CreditCard
        - LineOfCredit
        - Mortgage
        - Investment
        - PrePaidCard
        - Other
        - Installment
        - CommercialLoan
        - CommercialLineOfCredit
        - GeneralLedger
        - OtherLoan
      toAccountSubType:
        type: string
        description: 'The account subtype identifies the specific account type that the back end system will recognize. '
    description: "A deposit to account disbursement would deposit the given amount from the loan, to the provided account and suffix.  This does not have to be the same account as the member. "
  LoanDisbursement_loanDisbursementDealerAch:
    type: object
    properties:
      loanDisbursementId:
        type: string
        description: "Unique identifier for this loan disbursement record. This should be a globally unique identifier, meaning it should be unique across all loans, not just this loan. "
      amount:
        type: number
        description: 'The amount of this disbursement.  This is a required field. '
      description:
        type: string
        description: 'A description of this disbursement.  This is for informative purposes and is optional. '
      comment:
        type: string
        description: "An optional comment that would be created on the host system corresponding to this transaction.  An example comment is: Disbursement from loan 1234-L10. "
      dealerId:
        type: string
        description: 'The unique identifier for the dealer that this disbursement should go to. '
      dealerName:
        type: string
        description: 'The name of this dealer. '
      dealerRtn:
        type: string
        description: 'The routing transfer number for this dealer. '
      dealerAccountNumber:
        type: string
        description: 'The account number for this dealer. '
    description: "A dealer ACH loan disbursement would be used, for example, in the case of an indirect loan where the proceeds of the loan are being ACHd to the dealer. "
  LoanDisbursement_loanDisbursementGL:
    type: object
    properties:
      loanDisbursementId:
        type: string
        description: "Unique identifier for this loan disbursement record. This should be a globally unique identifier, meaning it should be unique across all loans, not just this loan. "
      amount:
        type: number
        description: 'The amount of this disbursement.  This is a required field. '
      description:
        type: string
        description: 'A description of this disbursement.  This is for informative purposes and is optional. '
      comment:
        type: string
        description: "An optional comment that would be created on the host system corresponding to this transaction.  An example comment is: Disbursement from loan 1234-L10. "
      glAccount:
        type: string
        description: 'The unique identifier for the dealer that this disbursement should go to. '
    description: "A disbursement to a general ledger account.  Could be used to pay business partners, GAP, etc. "
  LoanDisbursementFilter_loanDisbursementIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      loanDisbursementId:
        type: array
        description: "Unique identifier for this loan disbursement record. This should be a globally unique identifier, meaning it should be unique across all loans, not just this loan. "
        items:
          $ref: '#/definitions/LoanDisbursementId'
    description: "The list of loan disbursement IDs that should be returned or affected by a read, update or delete loan disbursement request. "
  LoanDisbursementFilter_loanIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      loanId:
        type: array
        description: 'Unique identifier for the loan that corresponds to these disbursements. '
        items:
          $ref: '#/definitions/LoanId'
    description: "The list of loan IDs that should be returned or affected by a read, update or delete loan disbursement request. "
  LoanFilter_loanCategoryList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      loanCategory:
        type: array
        description: "A loan account category that should have its associated loans either returned or affected by a read, update or delete request. "
        items:
          $ref: '#/definitions/LoanAccountCategory'
    description: "The list of loan account categories that should have their associated loans either returned or affected by a read, update or delete request. "
  Location_distance:
    type: object
    properties:
      unit:
        type: string
        description: 'Distance unit of measure. '
      value:
        type: number
        description: 'Numerical value of the distance as defined by unit. '
  Location_locationHoursList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      locationHours:
        type: array
        items:
          $ref: '#/definitions/LocationHours'
    description: 'A list of location hours. '
  Location_servicesList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      servicesList:
        type: array
        items:
          $ref: '#/definitions/ValuePair'
    description: "The services or features of the location.  For example, a branch could have a service such as a coin counter, or an ATM could accept check deposits. "
  LocationFilter_locationIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      locationId:
        type: array
        description: 'A unique identifier for the location. '
        items:
          $ref: '#/definitions/LocationId'
    description: "The list of location IDs that should have their associated location data either returned or affected by a read, update or delete request. "
  LocationFilter_locationTypeList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      locationType:
        type: array
        description: "The type of location (e.g. ATM, branch). "
        items:
          $ref: '#/definitions/LocationType'
    description: "The list of location types that should have their associated location data either returned or affected by a read, update or delete request. "
  MessageContext_userList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      user:
        type: array
        description: 'Collection of user data. '
        items:
          $ref: '#/definitions/User'
  MessageContext_statusList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      status:
        type: array
        description: 'A collection of fields that represents an individual response message that occurred when a service point was called. '
        items:
          $ref: '#/definitions/Status'
    description: 'The message response list collection/array contains all the messages returned when a service point was called. '
  Status_substitutionList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      substitution:
        type: array
        description: "Optional substitution to send data to the end point about which fields may be in error and/or which values may be out-of-range.  The error message can be scanned for potential substitution IDs (for example %1, %2) and replaced with the value from the substitution list.  This is useful for when an end point wants to support multiple languages or wants all of the message to be reconfigured for better consumption. "
        items:
          $ref: '#/definitions/Substitution'
  MicroDepositFunding_microDepositList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      microDeposit:
        type: array
        items:
          $ref: '#/definitions/MicroDeposit'
    description: 'A list of micro deposit. '
  MicroDepositFundingFilter_microDepositFundingIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      microDepositFundingId:
        type: array
        description: "A micro funding deposit ID that should have its associated records either returned or affected by a read, update or delete request. "
        items:
          $ref: '#/definitions/MicroDepositFundingId'
    description: "The list of micro funding deposit ids to be returned or affected by a read, update or delete request. "
  MicroDepositFundingFilter_microDepositIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      microDepositId:
        type: array
        description: "A micro deposit ID that should have its associated records either returned or affected by a read, update or delete request. "
        items:
          $ref: '#/definitions/MicroDepositId'
    description: "The list of micro deposit ids to be returned or affected by a read, update or delete request. "
  NetworkNode_networkNodeAddressList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      networkNodeAddress:
        type: array
        description: 'Collection of network node addresses associated to the network node. '
        items:
          $ref: '#/definitions/NetworkNodeAddress'
  NetworkNodeFilter_networkIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      networkId:
        type: array
        description: 'Collection of network ids to return in a filter request. '
        items:
          $ref: '#/definitions/NetworkId'
  NetworkNodeFilter_networkNodeStatusList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      networkNodeStatus:
        type: array
        description: 'Collection of network node types to return in a filter request. '
        items:
          $ref: '#/definitions/NetworkNodeStatus'
  NetworkNodeFilter_networkNodeTypeList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      networkNodeType:
        type: array
        description: 'Collection of network node types to return in a filter request. '
        items:
          $ref: '#/definitions/NetworkNodeType'
  NetworkNodeFilter_networkNodeAddressIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      networkNodeAddressId:
        type: array
        description: 'Collection of network node types to return in a filter request. '
        items:
          $ref: '#/definitions/NetworkNodeAddressId'
  NetworkNodeFilter_networkNodeAddressValueList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      networkNodeAddressValue:
        type: array
        description: 'Collection of network node types to return in a filter request. '
        items:
          $ref: '#/definitions/NetworkNodeAddressValue'
  NetworkNodeFilter_networkNodeAddressTypeList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      networkNodeAddressType:
        type: array
        description: 'Collection of network node types to return in a filter request. '
        items:
          $ref: '#/definitions/NetworkNodeAddressType'
  NetworkNodeFilter_networkNodeAddressPortList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      networkNodeAddressPort:
        type: array
        description: 'Collection of network node types to return in a filter request. '
        items:
          $ref: '#/definitions/NetworkNodeAddressPort'
  DetailedNote_referenceIdChoice:
    type: object
    properties:
      accountId:
        type: string
        description: 'The account ID is a persistent and unique identifier for the account. It must be unique for all users across the institution and remain the same over the life of the account. '
      accountType:
        type: string
        description: "Checking account, i.e., checks can be written against the account. Money market accounts can be included here or in money markets.  Its up to the institution. Savings and club accounts.  This can optionally include CDs, but its up to the institution. Auto loans, etc. Loans that are NOT lines of credit or credit cards. Loan behind the credit card.  Note the actual card information in the card object. Loan that is a line of credit but NOT a credit card. Loan that is made in exchange for taking title of property. Investment accounts such as brokerage and this can optionally include CDs and/or money markets, but its up to the institution. This account is a special type of checking account connected to a pre-paid card. Other account type. Loan that is made in installments. Loan is typically unsecured. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Installment. Loan that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Commercial. Line of Credit that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of CommercialLineOfCredit. A general ledger account of the financial institution. A loan account type that has not been prevously defined. This enumeration is considered deprecated. Recommend using account type loan and subAccount of OtherLoan. "
        enum:
        - Checking
        - Savings
        - Loan
        - CreditCard
        - LineOfCredit
        - Mortgage
        - Investment
        - PrePaidCard
        - Other
        - Installment
        - CommercialLoan
        - CommercialLineOfCredit
        - GeneralLedger
        - OtherLoan
      accountSubType:
        type: string
        description: 'The account subtype identifies the specific account type that the back end system will recognize. '
      applicationId:
        type: string
        description: 'Unique identifier for the application in the back end system. '
      partyId:
        type: string
        description: 'The party ID is a persistent and unique identifier for the party not related to the accounts they own but tied to that person or organization. It should be unique for all parties across the institution and remain the same over the life of the relationship with the financial institution. '
      relationshipId:
        type: string
        description: 'The relationship ID is a persistent and unique identifier for the relationship. It should be unique for all relationships across the institution and remain the same over the life of the relationship with the financial institution. '
      productServiceRequestId:
        type: string
        description: 'The product service request ID is a persistent and unique identifier for the product service request.  It should be unique for all product service requests across the institution and remain the same over the life of the product service request within the financial institution. '
      activityId:
        $ref: '#/definitions/Activity_activityId'
      transactionId:
        type: string
        description: "The transaction ID is a persistent and unique identifier for each transaction. It must be unique within the account as it is used for matching purposes. Transactions should always be returned with the same ID, even if transactional information has changed (type, amount, description, date, etc.) since the previous account data pull. "
    description: "Intended choice - Due to cross language serialization issues the choice construct has been removed. It is the responsibility of the implementer to add programmatic logic for this complex type to detect, handle and or error when population of more than one element is present. "
  DetailedNote_commonNoteData:
    type: object
    properties:
      noteId:
        type: string
        description: 'The note ID is a persistent and unique identifier for the note. It must be unique within the account. '
      recordType:
        type: string
        description: 'Enumeration of the different types of top-level records. '
        enum:
        - Account
        - Application
        - Loan
        - Portfolio
        - Deposit
        - ProductServiceRequest
        - Relationship
        - Request
        - Activity
        - Transaction
        - Transfer
        - TransferOccurrence
        - TransferRecurring
      noteCode:
        type: string
        description: 'The code associated to this note.  It could determine the type of note or reference predefined notes configured on the core. '
      noteText:
        type: string
        description: 'The text(s) of the note. '
      noteCreatedDateTime:
        type: string
        format: datetime
        description: 'UTC date and time when the note was created. '
      noteExpirationDate:
        type: string
        format: date
        description: 'The date this note expires. '
      noteCreator:
        type: string
        description: "Either the name or ID of person, system or end user that created the note. "
    description: 'Details related to a specific note. '
  NotesFilter_noteIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      noteID:
        type: array
        description: "An Note ID that should have its associated records either returned or affected by a read, update or delete request. "
        items:
          $ref: '#/definitions/NoteId'
    description: "The list of note IDs that should have their associated accounts either returned or affected by a read, update or delete request. "
  NotesFilter_noteCodelist:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      noteCode:
        type: array
        description: "A Note Code that should have its associated records either returned or affected by a read, update or delete request. "
        items:
          $ref: '#/definitions/NoteCode'
    description: "The list of note codess that should have their associated records either returned or affected by a read, update or delete request. "
  NotesFilter_noteCreatorList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      noteCode:
        type: array
        description: "An Note Creator that should have its associated records either returned or affected by a read, update or delete request. "
        items:
          $ref: '#/definitions/NoteCreator'
    description: "The list of note creators that should have their associated records either returned or affected by a read, update or delete request. "
  OverdraftPriority_overdraftPriorityAccountList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      overdraftPriorityAccount:
        type: array
        description: "An entry in an accounts overdraft priority list, i.e. where should funds be pulled from to cover the overdraft and its order based on priority. "
        items:
          $ref: '#/definitions/OverdraftPriorityAccount'
  OverdraftPriorityListFilter_overdraftPriorityIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      overdraftPriorityId:
        type: array
        description: 'An overdraft priority ID that should have its associated overdraft priority list entry either returned or affected by an update or delete request. '
        items:
          $ref: '#/definitions/OverdraftPriorityId'
    description: "A list of overdraft priority IDs that should have their associated overdraft priority list entry either returned or affected by a read, update or delete request. "
  OverdraftPriorityListFilter_priorityList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      priority:
        type: array
        description: 'An overdraft priority order value that should have its associated overdraft priority list entry either returned or affected by an update or delete request. '
        items:
          $ref: '#/definitions/Priority'
    description: 'A list of overdraft priority order values that should have their associated overdraft priority list entry either returned or affected by an update or delete request. '
  Employment_employmentIncome_grossIncomeData:
    type: object
    properties:
      amount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      frequency:
        type: string
        description: 'The frequency of the income. '
        enum:
        - AmortizedSchedule
        - Annual
        - AtMaturity
        - Bimonthly
        - Biweekly
        - BiweeklySkipFirst
        - BiweeklySkipLast
        - Daily
        - EventTrigger
        - Hourly
        - Immediate
        - Monthly
        - None
        - OneTime
        - Other
        - PerUse
        - Quarterly
        - SemiAnnual
        - SemiMonthly
        - Triannual
        - Weekly
        - WeeklySkipFirst
        - WeeklySkipLast
        - XDays
        - XMonths
        - XYears
      otherFrequencyType:
        type: string
        description: 'Free form text that describes the frequency type "Other" when it is set in the frequency element. '
      excludeIncomeFromCalculations:
        type: boolean
        description: "By default, income details are included in any applicable calculations. "
      customData:
        $ref: '#/definitions/AccessProfile_customData'
    description: 'Details related to the applicant main income. '
  Employment_employmentIncome:
    type: object
    properties:
      grossIncomeData:
        $ref: '#/definitions/Employment_employmentIncome_grossIncomeData'
      netIncomeData:
        $ref: '#/definitions/Employment_employmentIncome_grossIncomeData'
  IdentificationDocument_idDocumentType:
    type: object
    properties:
      individualDocument:
        type: string
        description: 'Documentation type for individuals. '
        enum:
        - DriversLicense
        - USPassport
        - MilitaryId
        - StateIssuedId
        - BirthCertficate
        - ForeignPassport
        - KnownExistingParty
        - ForeignGovernmentId
        - ResidentAlienCard
        - NonResidentAlienCard
        - DisabledElderlyWithNoId
        - ForeignEntityWithNoId
        - LawEnforcementId
        - AmishPartyWithNoId
        - ForeignDriversLicense
        - InsuranceCard
        - OrganizationalMembershipCard
        - Passport
        - PropertyTaxBill
        - SocialSecurityCard
        - StudentId
        - UtilityBill
        - Visa
        - DepartmentHomelandSecurityEmploymentAuthorization
        - VoterRegistrationCard
        - Photo
        - Other
      organizationDocument:
        type: string
        description: 'Documentation types for Organizations. '
        enum:
        - StateCorporateId
        - StateDba
        - ArticlesOfIncorporation
        - BusinessLicense
        - CorporateResolution
        - SecretaryOfStateFilingReceipt
        - AssociationMinutes
        - PartnershipAgreement
      trustDocument:
        type: string
        description: 'Documentation types for trusts. '
        enum:
        - TrustDocument
      estateDocument:
        type: string
        description: 'Documentation types for estates. '
        enum:
        - Will
        - EstateInstrument
      otherDocument:
        type: string
        description: 'For use with for all other document types. '
    description: "Intended choice - Due to cross language serialization issues the choice construct has been removed. It is the responsibility of the implementer to add programmatic logic for this complex type to detect, handle and or error when population of more than one element is present. "
  Party_taxInformationList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      taxInformation:
        type: array
        items:
          $ref: '#/definitions/TaxInformation'
    description: 'The tax information collection/array contains all the tax identifiers for a party. '
  Party_characteristics_organization_doingBusinessAsList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      doingBusinessAs:
        type: array
        items:
          $ref: '#/definitions/DoingBusinessAs'
  Party_characteristics_organization:
    type: object
    properties:
      organizationType:
        type: string
        description: "A business that legally has no separate existence from its owner. Income and losses are taxed on the individuals personal income tax return. Legal form of company that provides limited liability to its owners in the vast majority of United States jurisdictions. A nominate contract between individuals who, in a spirit of cooperation, agree to carry on an enterprise; contribute to it by combining property, knowledge or activities; and share its profit. An association of individuals, created by law or under authority of law, having a continuous existence independent of the existences of its members, and powers and liabilities distinct from those of its members. A not for profit organization is a type of organization that does not earn profits for its owners. All of the money earned by or donated to a not for profit organization is used in pursuing the organizations objectives. Typically not for profit organizations are charities or other types of public service organizations. Generally, not for profit organizations can apply for a tax exempt status so that the organization is not subject to most forms of taxation. Donations made to a tax exempt not for profit organization may also be tax-deductible for the donor. Taken from investopedia.com. An organization composed of people who voluntarily meet on a regular basis for a mutual purpose other than educational, religious, charitable, or financial pursuits. A club is any kind of group that has members who meet for a social, literary, or political purpose, such as health clubs, country clubs, book clubs, and womens associations. The term club is not a legal term per se, but a group that organizes itself as a club must comply with any laws governing its organization and otherwise be cognizant of the legal ramifications in undertaking to organize itself in this manner. Taken from legal-dictionary.thefreedictionary.com "
        enum:
        - SoleProprietorship
        - Llc
        - Partnership
        - Corporation
        - NotForProfit
        - Club
      organizationSubType:
        type: string
        description: "Organization sub type is the textual representation of what kind of organization it is. Completed if party type is Organization. For example: FinancialInstitution, Vendor, CUSO, Bank, Government Agency, etc. It is up to the endpoints to determine what they will pass in sub type. "
      organizationName:
        type: string
        description: 'Standard/legal name of the organization. Completed if party type is Organization. '
      doingBusinessAsList:
        $ref: '#/definitions/Party_characteristics_organization_doingBusinessAsList'
    description: 'Fields related to when the party is an organization. '
  Party_characteristics_individual_citizenshipList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      citizenship:
        type: array
        items:
          $ref: '#/definitions/Citizenship'
    description: 'List of countries where the party has citizenship.  Country code is expected to be ISO 3166-1 2 character codes. '
  Party_characteristics_individual_employmentList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      employment:
        type: array
        description: 'Collection of employer details related to an individual. '
        items:
          $ref: '#/definitions/Employment'
    description: 'Collection of employer details related to an individual. '
  Party_characteristics_individual_additionalIncomeList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      additionalIncome:
        type: array
        description: "Describes additional non-standard sources of income (child support, investments, e-bay, etc.). "
        items:
          $ref: '#/definitions/AdditionalIncome'
    description: "List of additional non-standard sources of income (child support, investments, e-bay, etc.). "
  Party_characteristics_individual_liabilityList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      liability:
        type: array
        description: 'Details related to liability. '
        items:
          $ref: '#/definitions/Liability'
    description: 'List of liabilities. '
  Party_characteristics_individual_residence:
    type: object
    properties:
      currentHousingStatus:
        type: string
        description: 'The housing status type for the current residence. '
        enum:
        - Rent
        - Own
        - Other
      currentHousingOwnershipType:
        type: string
        description: 'The housing ownership type for the current residence. '
        enum:
        - Self
        - Government
        - Military
        - Other
      currentHousingDebtType:
        type: string
        description: 'The housing debt type for the current residence. '
        enum:
        - OwnWithMortgage
        - OwnWithoutMortgage
        - Rent
        - NoHousingExpense
        - Other
      currentHousingType:
        type: string
        description: 'The housing type for the current residence. '
        enum:
        - PrimaryResidence
        - NonPrimaryResidence
    description: 'Details related to residence. '
  Party_characteristics_individual:
    type: object
    properties:
      firstName:
        type: string
        description: 'The partyâ€™s first name is the persons given name. '
      middleName:
        type: string
        description: 'The partyâ€™s middle name. '
      lastName:
        type: string
        description: 'The partyâ€™s last name or surname. '
      prefix:
        type: string
        description: "The partyâ€™s prefix to their name, as in their title.  Typical examples are Dr., Mr., Mrs., etc.. "
      suffix:
        type: string
        description: "The partyâ€™s suffix to their name.  Typical examples are Jr., III, etc.. "
      formattedName:
        type: string
        description: "All party name fields combined into one. This is typically a read-only field that can be returned by the data source. To remain flexible, this field can be either written to or returned by the data source. "
      mothersMaidenName:
        type: string
        description: 'The partys mothers maiden name.  This has recently been falling out of favor for an account code word.  See the credentials collection. '
      nickname:
        type: string
        description: "The partyâ€™s casual or familiar name reference. Typical examples might be Tim if the partys first name is Timothy, or Jenny if the first name is Jennifer. "
      birthdate:
        type: string
        format: date
        description: 'Birth date of the individual. The date/time should be ISO 8601 UTC format. yyyy-mm-dd (2011-03-28) format is supported. '
      deathDate:
        type: string
        format: date
        description: 'Deceased date of the individual. The date/time should be ISO 8601 UTC format. yyyy-mm-dd (2011-03-28) format is supported. '
      gender:
        type: string
        description: 'Gender of the party. '
        enum:
        - Male
        - Female
        - Other
      cityOfBirth:
        type: string
        description: 'Birth place of individual (city only). '
      citizenshipList:
        $ref: '#/definitions/Party_characteristics_individual_citizenshipList'
      employmentStatus:
        type: string
        description: "Represents available individual employment status values, i.e. employed, unemployed, contract, etc.. "
        enum:
        - Contract
        - Employed
        - Homemaker
        - Other
        - Retired
        - SelfEmployed
        - Student
        - Temporary
        - Unemployed
      employmentList:
        $ref: '#/definitions/Party_characteristics_individual_employmentList'
      additionalIncomeList:
        $ref: '#/definitions/Party_characteristics_individual_additionalIncomeList'
      liabilityList:
        $ref: '#/definitions/Party_characteristics_individual_liabilityList'
      residence:
        $ref: '#/definitions/Party_characteristics_individual_residence'
      ethnicity:
        type: string
        description: 'Recommended population per Ethnicity definitions of the US Dept of Labor. Enumerations were not applied as alternate populations may exist that predate the current definitions and may not account for international definitions that could also be applicable. "Hispanic or Latino" "Not Hispanic or Latino" '
      race:
        type: string
        description: 'Recommended population per race definitions of the US Dept of Labor. Enumerations were not applied as alternate populations may exist that predate the current definitions and may not account for international definitions that could also be applicable. "American Indian or Alaska Native" "Asian" "Black or African American" "Native Hawaiian or Other Pacific Islander" "White" '
      maritalStatus:
        type: string
        description: 'The current marital status of the individual. '
        enum:
        - Annulled
        - CommonLaw
        - Divorced
        - DomesticPartner
        - Interlocutory
        - LegallySeparated
        - Married
        - RegisteredDomesticPartner
        - Separated
        - Single
        - Widowed
        - Unknown
    description: 'Fields related to when the party is an individual. '
  Party_characteristics_trust:
    type: object
    properties:
      trustName:
        type: string
        description: 'Legal name of the trust. '
      trustType:
        type: string
        description: "Further defines the type of trust. Exemption, Living, Employee, Revocable, Irrovocable, Naked, Clifford. "
    description: 'Fields related to when the party is a trust. '
  Party_characteristics_estate:
    type: object
    properties:
      estateName:
        type: string
        description: 'Legal name of the estate. '
      estateType:
        type: string
        description: "Further defines the type of estate. Freehold, Leasehold, Life, Non-Freehold, Concurrent "
    description: 'Fields related to when the party is an estate. '
  Party_characteristics:
    type: object
    properties:
      organization:
        $ref: '#/definitions/Party_characteristics_organization'
      individual:
        $ref: '#/definitions/Party_characteristics_individual'
      trust:
        $ref: '#/definitions/Party_characteristics_trust'
      estate:
        $ref: '#/definitions/Party_characteristics_estate'
    description: "Intended choice - Due to cross language serialization issues the choice construct has been removed. It is the responsibility of the implementer to add programmatic logic for this complex type to detect, handle and or error when population of more than one element is present. "
  Party_identificationDocumentList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      identificationDocument:
        type: array
        description: 'Collection of identification documents. '
        items:
          $ref: '#/definitions/IdentificationDocument'
  Party_eligibilityRequirementMetList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      eligibilityRequirementMet:
        type: array
        description: 'How the party was eligible. '
        items:
          $ref: '#/definitions/EligibilityRequirementMet'
    description: 'List of how the party qualified for relationship with the financial institution. '
  PartyAssociation_partyAssociationType_partner:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      qualifier:
        type: string
        description: "Owners of a partnership who have unlimited liability. Read more: http://www.investopedia.com/terms/g/generalpartner.asp#ixzz2792brLlG Owners of a partnership who have limited liability. Read more: http://legal-dictionary.thefreedictionary.com/limited%20partnership "
        enum:
        - GeneralPartner
        - LimitedPartner
    description: 'Individual (parent) is a partner in a business (child). '
  PartyAssociation_partyAssociationType_officerManager:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      qualifier:
        type: string
        description: 'On Board of Directors of an organization.  Excludes CEO. C level manager of an organization.  Excludes CFO. CFO or Finance Director at an organization. President of an organization. Sold proprietor of an organization. Vice President of an organization.  Excludes CFO/Finance Director. Executive Director of an organization.  Excludes CFO/Finance Director. Director of an organization. Manager of an organization. Treasurer at an organization. Secretary at an organization. Manager level not listed in other categories at an organization. Not a manager at an organization. '
        enum:
        - BoardOfDirectors
        - CxO
        - FinancialOfficer
        - President
        - SoleProprietor
        - VicePresident
        - ExecutiveDirector
        - Director
        - Manager
        - Treasurer
        - Secretary
        - OtherManager
        - NonManager
    description: 'Individual (parent) is an officer or a manager of an organization (child). '
  PartyAssociation_partyAssociationType_nextOfKin:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      qualifier:
        type: string
        description: 'Party is the next of kin of another party but the relationship isnt specified. Party is parent of another party. Party is spouse of another party. Party is first cousin of another party. Party is child of another party. Party is sibling of another party. Party is grandchild of another party. Party is great grandchild of another party. Party is niece or nephew of another party. Party is aunt or uncle of another party. Party is great grandparent of another party. Party is great niece or great nephew of another party. Party is great aunt or great uncle of another party. Party is great-great grandparent of another party. Party is great-great grandchild of another party. Party is first cousin once removed of another party. Party is great grand aunt or great grand uncle of another party. Party is great-great-great grandchild of another party. Party is great-great-great grandparent of another party. Party is first cousin twice removed of another party. Party is second cousin of another party. Party is related to another party but the option is not listed. '
        enum:
        - NotSpecified
        - Parent
        - Spouse
        - FirstCousin
        - Child
        - Sibling
        - GrandChild
        - GreatGrandchild
        - NieceNephew
        - AuntUncle
        - GreatGrandparent
        - GreatNieceNephew
        - GreatAuntUncle
        - GreatGreatGrandparent
        - GreatGreatGrandChild
        - FirstCousinOnceRemoved
        - GreatGrandAuntUncle
        - GreatGreatGreatGrandChild
        - GreatGreatGreatGrandParent
        - FirstCousinTwiceRemoved
        - SecondCousin
        - Other
    description: 'Individual (parent) is the next of kin of another individual (child). '
  PartyAssociation_partyAssociationType_trustor:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      qualifier:
        type: string
        description: 'Individual provides funds to the associated trust. '
        enum:
        - ProvidesFunds
    description: 'Individual provides funds to the associated trust. '
  PartyAssociation_partyAssociationType_financialInstitution:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      qualifier:
        type: string
        description: 'Financial Institution provides credit union services. '
        enum:
        - ProvidesServices
    description: "Organization provides financial serivces to Organization, Individual, Estate or Trust. "
  PartyAssociation_partyAssociationType_vendor:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      qualifier:
        type: string
        description: 'Vendor provides services. '
        enum:
        - ProvidesServices
    description: "Organization provides financial serivces to Organization, Individual, Estate or Trust. "
  PartyAssociation_partyAssociationType:
    type: object
    properties:
      partner:
        $ref: '#/definitions/PartyAssociation_partyAssociationType_partner'
      officerManager:
        $ref: '#/definitions/PartyAssociation_partyAssociationType_officerManager'
      agent:
        $ref: '#/definitions/DepositParty_depositPartyRelationshipType_agent'
      nextOfKin:
        $ref: '#/definitions/PartyAssociation_partyAssociationType_nextOfKin'
      trustor:
        $ref: '#/definitions/PartyAssociation_partyAssociationType_trustor'
      financialInstitution:
        $ref: '#/definitions/PartyAssociation_partyAssociationType_financialInstitution'
      vendor:
        $ref: '#/definitions/PartyAssociation_partyAssociationType_vendor'
    description: 'The party association type identifies how the parent party relates to the child party. '
  PartyAssociationFilter_partyAssociationIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      partyAssociationId:
        type: array
        description: 'The unique identifier to be filtered on. '
        items:
          $ref: '#/definitions/PartyAssociationId'
    description: 'The party association ID list contains an ID list for filtering the party association list services. '
  PartyAssociationFilter_partyAssociationTypeList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      partyAssociationType:
        type: array
        description: 'The party association type identifies how the parent party relates to the child party. '
        items:
          $ref: '#/definitions/PartyAssociationType'
    description: 'The party association type list contains an ID list for filtering the party association list services. '
  PartyFilter_accountAccountTypeList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      accountAccountTypePair:
        type: array
        description: 'Collection of account and account type pairs to return in a filter request. '
        items:
          $ref: '#/definitions/AccountAccountTypePair'
    description: 'Deprecated - the type AccountAccountTypeList will be removed in v5.0. Use AccountIdentificationList '
  PartyFilter_partyStatusList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      partyStatus:
        type: array
        description: "A party status that should have its associated parties either returned or affected by a read, update or delete request. "
        items:
          $ref: '#/definitions/PartyStatus'
    description: "The list of party statuses that should have their associated parties either returned or affected by a read, update or delete request. "
  PartyFilter_partySubStatusList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      partySubStatus:
        type: array
        description: "A party sub status that should have its associated parties either returned or affected by a read, update or delete request. "
        items:
          $ref: '#/definitions/PartySubStatus'
    description: "The list of party sub status that should have their associated parties either returned or affected by a read, update or delete request. "
  PartyFilter_personNameList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      personName:
        type: array
        description: "A Person that should have its associated records either returned or affected by a read, update or delete request. "
        items:
          $ref: '#/definitions/PersonName'
    description: "The list of persons that should have their associated records either returned or affected by a read, update or delete request. "
  PartyFilter_organizationNameList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      organizationName:
        type: array
        description: "An organization name that should have its associated parties either returned or affected by a read, update or delete request. "
        items:
          $ref: '#/definitions/OrganizationName'
    description: "The list of organization names that should have their associated parties either returned or affected by a read, update or delete request. "
  PartyFilter_organizationTypeList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      organizationType:
        type: array
        description: "An organization type that should have its associated parties either returned or affected by a read, update or delete request. "
        items:
          $ref: '#/definitions/OrganizationType'
    description: "The list of organization types that should have their associated parties either returned or affected by a read, update or delete request. "
  PartyFilter_organizationSubTypeList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      organizationSubType:
        type: array
        description: "An organization type that should have its associated parties either returned or affected by a read, update or delete request. "
        items:
          $ref: '#/definitions/OrganizationSubType'
    description: "The list of organization sub types that should have their associated parties either returned or affected by a read, update or delete request. "
  Permission_resource:
    type: object
    properties:
      accountId:
        type: string
        description: 'The account ID is a persistent and unique identifier for the account. It must be unique for all users across the institution and remain the same over the life of the account. '
      fiUserId:
        type: string
        description: "FiUserId is a unique identifier for the credential group and is readable by the person. The person types this into systems to gain access, also using their password, PIN or whatever else is required to gain access. "
      cardId:
        type: string
        description: 'The card ID is a persistent and unique identifier for the card. It must be unique for all users across the institution and remain the same over the life of the card. The card ID should not be the same as the card number embossed on the card. '
      relationshipId:
        type: string
        description: 'The relationship ID is a persistent and unique identifier for the relationship. It should be unique for all relationships across the institution and remain the same over the life of the relationship with the financial institution. '
      productId:
        type: string
        description: 'Product ID is a unique identifier for the product. '
    description: "The account, user, or other securable asset that the action applies to.  Intended choice - Due to cross language serialization issues the choice construct has been removed. It is the responsibility of the implementer to add programmatic logic for this complex type to detect, handle and or error when population of more than one element is present. "
  Permission_maxLimits_dailyMax:
    type: object
    properties:
      maxAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      maxNumber:
        type: integer
      rollingAmount:
        $ref: '#/definitions/Account_accountEscheatAmount'
      rollingNumber:
        type: integer
    description: 'Maximum limits for actions and resources. '
  Permission_maxLimits:
    type: object
    properties:
      dailyMax:
        $ref: '#/definitions/Permission_maxLimits_dailyMax'
      weeklyMax:
        $ref: '#/definitions/Permission_maxLimits_dailyMax'
      monthlyMax:
        $ref: '#/definitions/Permission_maxLimits_dailyMax'
    description: "Limits encompassing daily, weekly, and monthly maximums for a given action and resource. "
  PermissionListFilter_resources_productIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      productId:
        type: array
        description: "Product ID is a unique identifier for the product. If none are provided, then no filters should be applied by product ID. "
        items:
          $ref: '#/definitions/ProductId'
    description: 'Product sub type filter for making a request.  If the list is nil then that indicates that no filters should be applied for product sub type. '
  PermissionListFilter_resources:
    type: object
    properties:
      accountIdList:
        $ref: '#/definitions/AccountFilter_accountIdList'
      accountStatusList:
        $ref: '#/definitions/AccountFilter_accountStatusList'
      fiUserIdList:
        $ref: '#/definitions/CredentialGroupFilter_fiUserIdList'
      cardIdList:
        $ref: '#/definitions/CardFilter_cardIdList'
      relationshipIdList:
        $ref: '#/definitions/AccountFilter_relationshipIdList'
      productIdList:
        $ref: '#/definitions/PermissionListFilter_resources_productIdList'
    description: "The accounts, users, or other securable assets to search for. "
  Preference_subType:
    type: object
    properties:
      eAlertSubType:
        type: string
        description: "An address change was made on a related account (either through party, relationship, card or account). If this alert is present and active, it should be acted upon if event occurs.  The value field is ignored. A transaction or authorization on a related account (either through party, relationship, card or account) caused a loan balance to approach the credit limit by the amount in the value field. For example if value field was 100.00 and credit limit was 500.00 and the transaction or authorization changed the balance from 350.00 to 410.00 an alert would occur. An ATM withdrawal on a related account (either through party, relationship, card or account) exceeded the amount in the value field. An ATM Deposit on a related account (either through party, relationship, card or account) exceeded the amount in the value field. An automated transfer on a related account (either through party, relationship, card or account) exceeded the amount in the value field. A balance on a related account (either through party, relationship, card or account) is below the amount in the value field. A balance on a related account (either through party, relationship, card or account) exceeded the amount in the value field. A balance on a related account (either through party, relationship, card or account) is on a regular schedule for notification. As defined by preferenceFrequency. A balance on a related account (either through party, relationship, card or account) had its value modified. A bill pay payment on a related account (either through party, relationship, card or account) exceeded the amount in the value field. A bill pay payee was added on a related account (either through party, relationship, card or account). If this alert is present and active, it should be acted upon if event occurs.  The value field is ignored. A bill pay payment was rejected on a related account (either through party, relationship, card or account). If this alert is present and active, it should be acted upon if event occurs.  The value field is ignored. A bill pay payment was paid on a related account (either through party, relationship, card or account). If this alert is present and active, it should be acted upon if event occurs.  The value field is ignored. A check number was cleared within a range of checks on a related account (either through party, relationship, card or account).  The value has the range of checks with the bottom and top checks separated by a dash (-) that are being monitored. A check withdrawal on a related account (either through party, relationship, card or account) exceeded the amount in the value field. A counter withdrawal on a related account (either through party, relationship, card or account) exceeded the amount in the value field. A courtesy payment occurring on a related account (either through party, relationship, card or account) exceeded the amount in the value field.  Typically the value will be 0.00 because the user may wish to be alerted on any courtesy payment, but the model is flexible in that it can be made be any value. A courtesy payment occurring on a related account (either through party, relationship, card or account) is below the amount in the value field.  This is useful for parties that are trying to manage smaller payments that are causing courtesy payments. A credit card authorization was declined on a related account (either through party, relationship, card or account). Typically the value field will be zero which will cause all declines to be alerted. A credit card authorization on a related account (either through party, relationship, card or account) exceeded the amount in the value field. A credit card authorization occurred at a fuel dispenser on a related account (either through party, relationship, card or account) exceeded the amount in the value field.  Typically the value will be zero which will cause an alert for all fuel dispensing attempts. An international credit card authorization on a related account (either through party, relationship, card or account) exceeded the amount in the value field. A credit card online authorization on a related account (either through party, relationship, card or account) exceeded the amount in the value field. An out-of-state credit card authorization on a related account (either through party, relationship, card or account) exceeded the amount in the value field. Typically the value will be zero which will cause all out-of-state authorizations to be alerted. A credit card reversal/refund/credit on a related account (either through party, relationship, card or account) exceeded the amount in the value field. A debit card authorization was declined on a related account (either through party, relationship, card or account). Typically the value will be zero which will cause all declines to be alerted. A debit card authorization on a related account (either through party, relationship, card or account) exceeded the amount in the value field. A debit card authorization occurred at a fuel dispenser on a related account (either through party, relationship, card or account) exceeded the amount in the value field. Typically the value will be zero which will cause all fuel dispensing attempts to be alerted. An international debit card authorization on a related account (either through party, relationship, card or account) exceeded the amount in the value field. A debit card online authorization on a related account (either through party, relationship, card or account) exceeded the amount in the value field. An out-of-state debit card authorization on a related account (either through party, relationship, card or account) exceeded the amount in the value field. Typically the value will be zero which will cause all out-of-state authorizations to be alerted. A debit card reversal/refund or credit on a related account (either through party, relationship, card or account) exceeded the amount in the value field. A deposit on a related account (either through party, relationship, card or account) was returned to the entity that originated the deposit. If this alert is present and active, it should be acted upon if event occurs.  The value field is ignored. A deposit on a related account (either through party, relationship, card or account) exceeded the amount in the value field. A direct deposit on a related account (either through party, relationship, card or account) exceeded the amount in the value field. A direct deposit on a related account (either through party, relationship, card or account) is below the amount in the value field. An email address change was made on a related account (either through party, relationship, card or account). If this alert is present and active, it should be acted upon if event occurs.  The value field is ignored. An external transfer to another FI (not a bill pay or wire transfer) on a related account (either through party, relationship, card or account) exceeded the amount in the value field. Potential fraud was found on a related account (either through party, relationship, card or account). If this alert is present and active, it should be acted upon if event occurs.  The value field is ignored. An incoming wire on a related account (either through party, relationship, card or account) exceeded the amount in the value field. Insufficient funds were available to pay a check on a related account (either through party, relationship, card or account). If this alert is present and active, it should be acted upon if event occurs.  The value field is ignored. A hold that was placed on a related account (either through party, relationship, card or account) exceeded the amount in the value field. A hold that was placed on a related account (either through party, relationship, card or account) and exceeded the amount in the value field was subsequently removed. A phone number change was made on a related account (either through party, relationship, card or account). If this alert is present and active, it should be acted upon if event occurs.  The value field is ignored. A loan payment is currently due on a related account (either through party, relationship, card or account). A loan payment is overdue on a related account (either through party, relationship, card or account). by the number of days in the value field. Optionally with frequency of notification. A login through a remote channel was successful on a related account (either through party, relationship, card or account). If this alert is present and active, it should be acted upon if event occurs.  The value field is ignored. A login through a remote channel was attempted but failed on a related account (either through party, relationship, card or account). If this alert is present and active, it should be acted upon if event occurs.  The value field is ignored. A name was changed on a related account (either through party, relationship, card or account). If this alert is present and active, it should be acted upon if event occurs.  The value field is ignored. A name was changed on a related account (either through party, relationship, card or account). If this alert is present and active, it should be acted upon if event occurs.  The value field is ignored. A notification that the CU has sent a secure message to the party. The value field is ignored. An outgoing wire on a related account (either through party, relationship, card or account) exceeded the amount in the value field. Password reset was attempted and was successful on a related account (either through party, relationship, card or account). If this alert is present and active, it should be acted upon if event occurs.  The value field is ignored. A password reset was attempted but failed on a related account (either through party, relationship, card or account). If this alert is present and active, it should be acted upon if event occurs.  The value field is ignored. A payment is currently due on a related account (either through party, relationship, card or account). A payment is due on a related account (either through party, relationship, card or account) within the number of days in the value field. A personal identification number (PIN; typically 4 digits) was changed on a related account (either through party, relationship, card or account). If this alert is present and active, it should be acted upon if event occurrs.  The value field is ignored. A preference value was changed on a related account (either through party, relationship, card or account). If this alert is present and active, it should be acted upon if event occurrs.  The value field is ignored. The user set up a message to be sent (either through party, relationship, card or account). The value in this EAlert sub type is a date/time for the message to be sent.  This can be used for scheduling birthday reminders, etc. by the user.  The text to be sent is in the alertCustomText field. A scheduled payment failed on a related account (either through party, relationship, card or account). If this alert is present and active, it should be acted upon if event occurs.  The value field is ignored. A scheduled payment was stopped on a related account (either through party, relationship, card or account). If this alert is present and active, it should be acted upon if event occurs.  The value field is ignored. A specific check number was cleared on a related account (either through party, relationship, card or account). The value has the specific check number that is being monitored for clearance. An SSN was changed on a related account (either through party, relationship, card or account). If this alert is present and active, it should be acted upon if event occurs.  The value field is ignored. Party wishes to be contacted using the associated contact channel when there are system issues such as scheduled outages, unexpected outages, etc. If this alert is present and active, it should be acted upon if event occurs.  The value field is ignored. A statement is available on a related account (either through party, relationship, card or account). If this alert is present and active, it should be acted upon if event occurs.  The value field is ignored. A transaction on a related account (either through party, relationship, card or account) is below the amount in the value field. A transaction on a related account (either through party, relationship, card or account) exceeded the amount in the value field. A tax form is available on a related account (either through party, relationship, card or account). If this alert is present and active, it should be acted upon if event occurs.  The value field is ignored. "
        enum:
        - AddressChanged
        - ApproachingCreditLimit
        - AtmWithdrawalExceeds
        - AtmDepositExceeds
        - AutomatedTransferExceeds
        - BalanceBelow
        - BalanceExceeds
        - BalanceScheduled
        - BalanceUpdated
        - BillPayExceeds
        - BillPayPayeeAdded
        - BillPayPaymentRejected
        - BillPayPaymentPaid
        - CheckNumberWithinRangeHasCleared
        - CheckWithdrawalExceeds
        - CounterWithdrawalExceeds
        - CourtesyPayExceeds
        - CourtesyPayBelow
        - CreditCardAuthorizationDeclined
        - CreditCardAuthorizationExceeds
        - CreditCardFuelDispenserAuthorizationExceeds
        - CreditCardInternationalAuthorizationExceeds
        - CreditCardOnlineAuthorizationExceeds
        - CreditCardOutOfStateAuthorizationExceeds
        - CreditCardRefundExceeds
        - DebitCardAuthorizationDeclined
        - DebitCardAuthorizationExceeds
        - DebitCardFuelDispenserAuthorizationExceeds
        - DebitCardInternationalAuthorizationExceeds
        - DebitCardOnlineAuthorizationExceeds
        - DebitCardOutOfStateAuthorizationExceeds
        - DebitCardRefundExceeds
        - DepositedFundsHaveBeenReturned
        - DepositExceeds
        - DirectDepositExceeds
        - DirectDepositBelow
        - EmailAddressChanged
        - ExternalTransferExceeds
        - PotentialFraud
        - IncomingWireExceeds
        - InsufficientFundsToPayCheck
        - HoldPlacedOnAccountExceeded
        - HoldThatExceededWasRemovedFromAccount
        - PhoneNumberChanged
        - LoanPaymentDue
        - LoanPaymentOverDue
        - LoginOccurred
        - LoginFailed
        - NameChangeAttempted
        - NameChangeOccurred
        - NotifySecureMessage
        - OutgoingWireExceeds
        - PasswordResetSuccess
        - PasswordResetFailure
        - PaymentDue
        - PaymentDueInXDays
        - PinChanged
        - PreferenceChanged
        - ScheduledMessage
        - ScheduledPaymentHasFailed
        - ScheduledPaymentHasStopped
        - SpecificCheckNumberHasCleared
        - SsnChanged
        - SystemNotification
        - StatementAvailable
        - TransactionBelow
        - TransactionExceeds
        - TaxFormAvailable
      emailFormatSubType:
        type: string
        description: 'Any emails should be forwarded using html formats. Any emails should be forwarded using text formats. '
        enum:
        - Html
        - Text
      widgetSubType:
        type: string
        description: "What is the display status of the widget. The value field will contain one of of several values. Hide - party has selected to hide this widget from view completely.  Up to the end user application on how a party might unhide a widget. AutoShow - party has selected to hide this widget unless for example the cursor is moved over the area of the screen that reveals the widget.  Order of widgets in autoshow area is controlled by DisplayOrder value.  Up to application on how to hide the widget. AlwaysOnTop - Display this widget above all other widgets. Docked - Display this widget in an area of the screen selected by the party but controlled by the application. Order of widgets in docked area is controlled by DisplayOrder value. The order in which the party wishes to display the widget versus other widgets selected by the party. The order is stored in the value field. The value will be an non-negative integer between 0 and the total number of widgets available for display. If value is not available/specified, the widget display order is up to the application to determine. The value holds the party selected string of characters that represent the keyboard characters to concurrently press to activate a widget. The value holds the name of the page on which the widget should display.  If widget should display on multiple pages, each will require an additional preference instance. "
        enum:
        - DisplayStatus
        - DisplayOrder
        - ShortCutKey
        - DisplayPage
    description: "Sub type of preference if applicable.  Additions to this list can be submitted to the CUFX committee.  Intended choice - Due to cross language serialization issues the choice construct has been removed. It is the responsibility of the implementer to add programmatic logic for this complex type to detect, handle and or error when population of more than one element is present. "
  PreferenceFilter_preferenceIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      preferenceId:
        type: array
        description: "A preference ID that should have its associated preference either returned or affected by a read, update or delete request. "
        items:
          $ref: '#/definitions/PreferenceId'
    description: "The list of Preference IDs that should have their preference accounts either returned or affected by a read, update or delete request. "
  PreferenceFilter_preferenceTypeList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      preferenceType:
        type: array
        description: 'Preference type used for filtering. '
        items:
          $ref: '#/definitions/PreferenceType'
    description: 'Preference type list used for filtering. '
  PreferenceFilter_preferenceSubTypeList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      subType:
        type: array
        description: 'Preference sub type used for filtering. '
        items:
          $ref: '#/definitions/SubType'
    description: 'Preference sub type list used for filtering. '
  PreferenceFilter_preferenceStatusList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      preferenceStatus:
        type: array
        description: "A preference status that should have its associated preference either returned or affected by a read, update or delete request. "
        items:
          $ref: '#/definitions/PreferenceStatus'
    description: "The list of preference statuses that should have their preference records either returned or affected by a read, update or delete request. "
  PreferenceFilter_widgetNameList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      widgetName:
        type: array
        description: "A widget name that should have its associated preference either returned or affected by a read, update or delete request. "
        items:
          $ref: '#/definitions/WidgetName'
    description: "The list of widget names that should have their preference records either returned or affected by a read, update or delete request. "
  ProductOffering_interestRateList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      interestRate:
        type: array
        description: 'Collection of fields that define an interest rate for a specific product offering at the institution level. '
        items:
          $ref: '#/definitions/InterestRate'
    description: "The interest rate list collection/array contains all the possible interest rates for a product offering. This can be used for tiered pricing, risk pricing or effective date pricing. "
  ProductOfferingFilter_productSubTypeList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      productSubType:
        type: array
        description: "Product sub type identifies how the product will be identified in the back end system. If none are provided, then all should be returned. "
        items:
          $ref: '#/definitions/ProductSubType'
    description: 'Product sub type filter used for making a request. If the list is nil then that indicates that no filters should be applied for product sub type. '
  ProductServiceEnrollment_requestItem:
    type: object
    properties:
      productOfInterest:
        type: string
        description: "A product that the party is interested in, for example but not limited to credit card, mortgage, membership, new account, insurance, etc. "
      serviceOfInterest:
        type: string
        description: "A service that the party is interested in, for example but not limited to online banking, etc. "
      question:
        type: string
        description: "A question the member has which may lead to a product or service request such as what are your rates, etc. "
    description: "A product, service or question related to products and services.  Intended choice - Due to cross language serialization issues the choice construct has been removed. It is the responsibility of the implementer to add programmatic logic for this complex type to detect, handle and or error when population of more than one element is present. "
  ProductServiceEnrollment_fieldList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      field:
        type: array
        description: 'Field data. '
        items:
          $ref: '#/definitions/Field'
    description: 'List of fields to provide for a given interaction. '
  ProductServiceEnrollmentFilter_productServiceEnrollmentIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      productServiceEnrollmentId:
        type: array
        description: 'Product Service Enrollment id. '
        items:
          $ref: '#/definitions/ProductServiceEnrollmentId'
  ProductServiceEnrollmentFilter_productServiceEnrollmentStatusList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      productServiceEnrollmentStatus:
        type: array
        description: 'The productServiceEnrollment status '
        items:
          $ref: '#/definitions/ProductServiceEnrollmentStatus'
  ProductServiceRequest_requestList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      request:
        type: array
        description: "An individual request thats part of a larger request of products, services, etc. that the member is requesting. "
        items:
          $ref: '#/definitions/Request'
    description: 'A list of products or services that the person is interested in or questions they have about the institutions products and services. '
  Request_activityList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      activity:
        type: array
        items:
          $ref: '#/definitions/Activity'
    description: 'The activities collection/array contains all the activity for a specified request. '
  Request_secureMessageList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      secureMessage:
        type: array
        description: "The secure message defines the information sent and then received by two or more parties. It also relates secure messages to the sending and receiving party(ies), and potentially to the relationship and/or account(s) to which the secure message is bound.  The information and message statuses below are in the context of the user that is viewing the message. "
        items:
          $ref: '#/definitions/SecureMessage'
    description: "The secure messages collection/array list contains all the secure messages or secure message templates, for instance, that the credential set is authorized to access at the Institution based on applied filters. "
  ProductServiceRequestFilter_secureMessageIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      secureMessageId:
        type: array
        description: "A secure message ID that should have its associated secure messages either returned or affected by a read, update or delete request. "
        items:
          $ref: '#/definitions/SecureMessageId'
    description: "The list of secure message IDs that should have their associated secure messages either returned or affected by a read, update or delete request. "
  ProductServiceRequestFilter_productServiceRequestStatusList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      status:
        type: array
        description: 'Product service request status. '
        items:
          $ref: '#/definitions/ProductServiceStatus'
    description: "List of product service request statuses, typically used for filtering. "
  RegisteredDeviceFilter_deviceIDList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      deviceId:
        type: string
        description: 'The registered device identification string.  The application should ensure that this is unique across all accounts. '
    description: 'List of device IDs used for filtering or referencing in other schemas for foreign key relationships. '
  Relationship_relationshipPartyList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      relationshipParty:
        type: array
        description: 'A collection of fields required to relate this relationship with the identified parties and what level of ownership they have on the underlying accounts within the relationship. '
        items:
          $ref: '#/definitions/RelationshipParty'
    description: "A collection of party IDâ€™s that uniquely identify each party associated to this relationship, along with how each party is related to the relationship. "
  RelationshipParty_partyRelationshipType:
    type: object
    properties:
      holder:
        $ref: '#/definitions/DepositParty_depositPartyRelationshipType_holder'
      beneficiary:
        $ref: '#/definitions/DepositParty_depositPartyRelationshipType_beneficiary'
      agent:
        $ref: '#/definitions/DepositParty_depositPartyRelationshipType_agent'
      payee:
        $ref: '#/definitions/LoanParty_loanPartyRelationshipType_payee'
      guarantor:
        $ref: '#/definitions/DepositParty_depositPartyRelationshipType_guarantor'
      collateralGrantor:
        $ref: '#/definitions/LoanParty_loanPartyRelationshipType_collateralGrantor'
      safeDepositBoxUser:
        $ref: '#/definitions/DepositParty_depositPartyRelationshipType_safeDepositBoxUser'
    description: "The party relationship type is the textual representation of what the party record represents to this relationship, such as primary or joint ownership, beneficiary or some other type of relationship. This value may be visible to the user and must be human-readable.  If the party does not have full ownership or responsibility of all accounts within the relationship, then the party should be related to those accounts via a party list within the account object.  Specific loan level ownership will also be in the accounts via a party list within the account object. "
  RelationshipFilter_relationshipStatusList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      relationshipStatus:
        type: array
        description: 'Status of the Relationship. '
        items:
          $ref: '#/definitions/RelationshipStatus'
    description: "The list of relationship statuses that should have their accounts either returned or affected by a read, update or delete request. "
  RemoteDeposit_remoteDepositFeeList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      fee:
        type: array
        items:
          $ref: '#/definitions/Fee'
    description: "The accounts collection/array contains all the fees, for instance, that the credential set is authorized to access at the Institution based on applied filters. "
  RemoteDeposit_frontImage:
    type: object
    properties:
      artifactId:
        $ref: '#/definitions/Artifact_artifactId'
      artifactType:
        type: string
        description: 'The MIME type of the artifact.  See RFC 2046 for valid MIME type. '
      externalId:
        type: string
        description: 'An identifier or reference value typically used by the repository consumer. '
      accountId:
        type: string
        description: 'The account ID is a persistent and unique identifier for the account. It must be unique for all users across the institution and remain the same over the life of the account. '
      accountType:
        type: string
        description: "Checking account, i.e., checks can be written against the account. Money market accounts can be included here or in money markets.  Its up to the institution. Savings and club accounts.  This can optionally include CDs, but its up to the institution. Auto loans, etc. Loans that are NOT lines of credit or credit cards. Loan behind the credit card.  Note the actual card information in the card object. Loan that is a line of credit but NOT a credit card. Loan that is made in exchange for taking title of property. Investment accounts such as brokerage and this can optionally include CDs and/or money markets, but its up to the institution. This account is a special type of checking account connected to a pre-paid card. Other account type. Loan that is made in installments. Loan is typically unsecured. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Installment. Loan that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of Commercial. Line of Credit that is a made to a business organization. This enumeration is considered deprecated. Recommend using account type Loan and subAccount of CommercialLineOfCredit. A general ledger account of the financial institution. A loan account type that has not been prevously defined. This enumeration is considered deprecated. Recommend using account type loan and subAccount of OtherLoan. "
        enum:
        - Checking
        - Savings
        - Loan
        - CreditCard
        - LineOfCredit
        - Mortgage
        - Investment
        - PrePaidCard
        - Other
        - Installment
        - CommercialLoan
        - CommercialLineOfCredit
        - GeneralLedger
        - OtherLoan
      accountSubType:
        type: string
        description: 'The account subtype identifies the specific account type that the back end system will recognize. '
      partyId:
        type: string
        description: 'The party ID is a persistent and unique identifier for the party not related to the accounts they own but tied to that person or organization. It should be unique for all parties across the institution and remain the same over the life of the relationship with the financial institution. '
      artifact:
        type: string
        format: base64Binary
        description: 'This is the binary object containing the digital data to be stored in the repository. '
      artifactName:
        type: string
        description: 'A human-readable name of the artifact. '
      artifactDescription:
        type: string
        description: 'A human-readable text describing the contents of the artifact. '
      artifactOwner:
        type: string
        description: 'A human-readable string describing the owner of the artifact. '
      artifactCreationDate:
        type: string
        format: datetime
        description: 'The date and time at which an artifact was created. '
      artifactModifiedDate:
        type: string
        format: datetime
        description: 'The date and time at which an artifact was modified. '
      artifactArchivedDate:
        type: string
        format: datetime
        description: 'The date and time at which an artifact was archived. '
      artifactDeletedDate:
        type: string
        format: datetime
        description: 'The date and time at which an artifact was deleted. '
      artifactCompressionType:
        type: string
        description: "The type of compression used to reduce the size of the artifact for transport over the wire (e.g â€œzipâ€\x9d, â€œtarâ€\x9d, â€œgzipâ€\x9d, â€œrarâ€\x9d, â€œnoneâ€\x9d etc.).  If this field is blank or null, then it is assumed that the artifact is not in a compressed state. "
      artifactUri:
        type: string
        format: anyURI
        description: 'The URI location of the artifact image. '
      artifactArchived:
        type: boolean
        description: 'A flag used to determine if the artifact has been archived or not. '
      customData:
        $ref: '#/definitions/AccessProfile_customData'
    description: "An artifact is a binary representation of an image, document, etc. that needs to be stored in a back end system for later retrieval. "
  RemoteDeposit_imageValidationIssueList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      imageValidationIssue:
        type: array
        description: 'Details related to an image validation issue. '
        items:
          $ref: '#/definitions/ImageValidationIssue'
      imageValidationIssueOther:
        type: string
        description: 'Description for when ImageValidationIssue is Other '
    description: 'Collection of image validation issues. '
  RemoteDepositFilter_remoteDepositIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      remoteDepositId:
        type: array
        description: "A RemoteDeposit ID that should have its associated remote deposits either returned or affected by a read, update or delete request. "
        items:
          $ref: '#/definitions/RemoteDepositId'
    description: "The list of remote deposit IDs that should be returned or affected by a read, update or delete request. "
  RemoteDepositFilter_statusList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      status:
        type: array
        description: "The list of remote deposit statuses that should be returned or affected by a read, update or delete request. "
        items:
          $ref: '#/definitions/RemoteDepositStatus'
    description: "The list of remote deposit statuses that should be returned or affected by a read, update or delete request. "
  RemoteDepositFilter_actionList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      action:
        type: array
        description: "The list of actions that may be filtered to identify remote deposits to be affected by a read, update or delete request. Any single remote deposit will only have one valid action in progress at a given time. "
        items:
          $ref: '#/definitions/RemoteDepositAction'
    description: "The list of actions that may be filtered to identify remote deposits to be affected by a read, update or delete request. "
  SecureMessage_messageFromList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      secureMessageUser:
        type: array
        description: "A secure message type that should have its associated secure messages either returned or affected by a read, update or delete request. "
        items:
          $ref: '#/definitions/SecureMessageUser'
    description: "Can serve as a list of users that either receive or send a message. Can also serve as a list of secure message users that should have their associated secure messages returned or affected by a read, update or delete request when filtering. "
  SecureMessage_statusLog:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      statusLogEntry:
        type: array
        description: 'Status entry at the point in time when the secure message was at a given status. '
        items:
          $ref: '#/definitions/StatusLogEntry'
    description: "The dates and times corresponding to the secure messages statuses, i.e. drafted, sent, read, replied, forwarded, etc. "
  SecureMessageFilter_threadIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      threadId:
        type: array
        description: 'The unique ID associated with a message or group of messages. '
        items:
          $ref: '#/definitions/ThreadId'
    description: "The list of thread IDs that should have their associated secure messages either returned or affected by a read, update or delete request. "
  SecureMessageFilter_subjectLineContainsList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      subjectLine:
        type: array
        description: "A secure message subject line that should have its associated secure messages either returned or affected by a read, update or delete request. "
        items:
          $ref: '#/definitions/SubjectLine'
    description: "The list of secure message subjects that should have their associated secure messages either returned or affected by a read, update or delete request. "
  SecureMessageFilter_secureMessageTypeList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      secureMessageType:
        type: array
        description: "A secure message type that should have its associated secure messages either returned or affected by a read, update or delete request. "
        items:
          $ref: '#/definitions/SecureMessageType'
    description: "The list of secure message types that should have their associated secure messages either returned or affected by a read, update or delete request. "
  SecureMessageFilter_currentStatusList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      secureMessageStatus:
        type: array
        description: "A secure message status that should have its associated secure messages either returned or affected by a read, update or delete request. "
        items:
          $ref: '#/definitions/SecureMessageStatus'
    description: "The list of secure message statuses that should have their associated secure messages either returned or affected by a read, update or delete request. "
  SecureMessageFilter_bodyContainsList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      bodyContains:
        type: string
        description: "String contained in the body that should have their associated secure messages either returned or affected by a read, update or delete request. "
    description: "The list of bodyContains strings somewhere within its body and that should have their associated secure messages either returned or affected by a read, update or delete secure message request. "
  SimpleValidationRequest_applicant:
    type: object
    properties:
      applicantId:
        type: string
        description: 'Unique identifier for the applicant. '
      role:
        type: string
        description: 'Role of the  applicant. '
        enum:
        - Primary
        - Secondary
        - AuthorizedUser
      creditReportList:
        $ref: '#/definitions/Applicant_creditReportList'
      relationshipId:
        type: string
        description: 'The relationship ID is a persistent and unique identifier for the relationship. It should be unique for all relationships across the institution and remain the same over the life of the relationship with the financial institution. '
      partyId:
        type: string
        description: 'The party ID is a persistent and unique identifier for the party not related to the accounts they own but tied to that person or organization. It should be unique for all parties across the institution and remain the same over the life of the relationship with the financial institution. '
      party:
        $ref: '#/definitions/Party'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
    description: 'Collection of fields to describe an applicant for the product. '
  SimpleValidationRequestFilter_applicantIdList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      applicantId:
        type: array
        description: 'Unique identifier for the applicant. '
        items:
          $ref: '#/definitions/ApplicantId'
    description: "List of applicant IDs used for filtering on read, update or delete application service requests. "
  SimpleValidationRequestFilter_validationTypeList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      validationType:
        type: array
        description: "Validation type specified by the service provider (Exs.: OFAC, CU Loss, etc.). "
        items:
          $ref: '#/definitions/ValidationType'
    description: "The list of validation types that should be returned or affected by a read, update or delete simple validation request. "
  SimpleValidationRequestFilter_simpleValidationStatusList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      simpleValidationStatus:
        type: array
        description: "Validation type specified by the service provider (Exs.: OFAC, CU Loss, etc.). "
        items:
          $ref: '#/definitions/SimpleValidationStatus'
    description: "The list of validation status that should be returned or affected by a read, update or delete simple validation request. "
  SystemStatusFilter_systemStatusList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      systemState:
        type: array
        items:
          $ref: '#/definitions/SystemState'
    description: 'The system status collection/array list contains all the system statuses that are authorized for access at the Institution based on applied filters. '
  Transaction_transactionFeeList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      transactionFee:
        type: array
        description: 'Details related to tranaction fees. '
        items:
          $ref: '#/definitions/TransactionFee'
    description: 'Details related to transaction fees. '
  TransactionFilter_transactionStatusList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      transactionStatus:
        type: array
        description: "The list of transaction statuses that should be returned or affected by a read, update or delete request. "
        items:
          $ref: '#/definitions/TransactionStatus'
    description: "The list of transaction statuses that should be returned or affected by a read, update or delete request. "
  TransactionFilter_checkNumberList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      checkNumber:
        type: array
        description: "The list of check numbers that should be returned or affected by a read, update or delete request. "
        items:
          $ref: '#/definitions/CheckNumber'
    description: "The list of check numbers that should be returned or affected by a read, update or delete request. "
  TransactionFilter_categoryList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      category:
        type: array
        description: "The list of transaction categories that should be returned or affected by a read, update or delete request. "
        items:
          $ref: '#/definitions/TransactionCategory'
    description: "The list of transaction categories that should be returned or affected by a read, update or delete request. "
  TransactionFilter_sourceList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      source:
        type: array
        description: "The list of transaction sources that should be returned or affected by a read, update or delete request. "
        items:
          $ref: '#/definitions/TransactionSource'
    description: "The list of transaction sources that should be returned or affected by a read, update or delete request. "
  TransferOccurrence_fromCard:
    type: object
    properties:
      cardId:
        type: string
        description: 'The card ID is a persistent and unique identifier for the card. It must be unique for all users across the institution and remain the same over the life of the card. The card ID should not be the same as the card number embossed on the card. '
      cardNumber:
        type: string
        description: "The card number is the visible sequence of numbers that appear on the card. It is up to the end points to determine if the card number can/should be transmitted. It is up to the end points to determine the encryption methodology, if required. It must be unique for all users across the institution and remain the same over the life of the card. "
      cardType:
        type: string
        description: 'Enumeration of the different types of cards. '
        enum:
        - Atm
        - Credit
        - Debit
        - HomeEquity
        - Prepaid
      cardSubType:
        type: string
        description: "Specifies the \"flavor\" of the card (ie: platinum, sports team branded, etc.). "
      expirationDate:
        type: string
        format: date
        description: 'Expiration date is either the expiration date that is calculated by the card data provider or the expiration date that is provided in the creation of the card. It is up to the end points to determine if the expiration date can/should be transmitted. '
      pin:
        type: string
        description: "PIN is the 4 digit security code that is used to authenticate the user and allow them access to the associated accounts of the card. It is up to the end points to determine if the PIN can/should be transmitted. It is up to the end points to determine the encryption methodology, if required. The PIN is provided as a string in case encryption has been utilized. "
      cvv2:
        type: string
        description: "cvv2 is the 3 or 4 digit security code that is printed on the back of the card. This field is typically read-only because it is generated 2-3 days after the card is requested to be printed. It is up to the end points to determine if the CVV2 date can/should be transmitted. It is up to the end points to determine the encryption methodology, if required. The CVV2 is provided as a string in case encryption has been utilized. "
      linkedAccountList:
        $ref: '#/definitions/Card_linkedAccountList'
      partyId:
        type: string
        description: 'The party ID is a persistent and unique identifier for the party not related to the accounts they own but tied to that person or organization. It should be unique for all parties across the institution and remain the same over the life of the relationship with the financial institution. '
      overrideAddressContactId:
        type: string
        description: 'Unique identifier within system to uniquely identify this contact point. '
      cardAddress:
        $ref: '#/definitions/Account_externalAccountBankAddress'
      nameOnCard:
        type: string
        description: 'Specifies the name on the card if overriding the name from the party. 0 instances - means use the party formatted name. 1st instance - use as line one. 2nd instance - use as line two. '
      activationDateTime:
        type: string
        format: datetime
        description: 'Specifies the date when the card was activated. '
      cardStatus:
        type: string
        description: 'Enumeration of the different types of statuses for a card. The card has been disabled typically controlled by the FI. Card is to be captured and destroyed at next presentation. The card has been disabled typically controlled by the card owner. '
        enum:
        - Active
        - AssignPIN
        - Blocked
        - Closed
        - Expedite
        - Expired
        - HotCarded
        - Inactive
        - Issued
        - Lost
        - ReadOnly
        - Restricted
        - Stolen
        - Suspended
        - Other
      blockedReason:
        type: string
        description: "For a blocked card, specifies the reason for the block. Element deprecated in favor of cardStatusReason. "
      blockedDateTime:
        type: string
        format: datetime
        description: "For a blocked card, specifies the date on which the card was blocked. Element deprecated in favor of cardStatusDateTime. "
      cardStatusDateTime:
        type: string
        format: datetime
        description: 'The date and time the current card status was applied. '
      cardStatusReason:
        type: string
        description: 'Specifies the reason for the current card status. '
      virtualNumber:
        type: string
        description: 'The virtual number associated with the card. '
      merchantCountryCodes:
        $ref: '#/definitions/Card_merchantCountryCodes'
      cardDesignImageArtifactId:
        $ref: '#/definitions/Artifact_artifactId'
      customData:
        $ref: '#/definitions/AccessProfile_customData'
  WireFilter_wireTransferTypeList:
    type: object
    properties:
      currentPage:
        type: integer
        description: 'Pagination support. Current page of information presented in the message response. Typically used in combination with totalPages and pageSize. '
      totalPages:
        type: integer
        description: 'Pagination support. Total pages of information available as a result of the query. Typically used in combination with currentPage and pageSize. '
      pageSize:
        type: integer
        description: 'Pagination support. The total number of records that may be returned as part of 1 page. Typically used in combination with currentPage and totalPages. '
      positionIndex:
        type: string
        description: 'Pagination support. The record position index of the current message response. '
      returnPage:
        type: integer
        description: 'Pagination support. The requested page value to be returned in the message response. '
      returnPositionIndex:
        type: string
        description: 'Pagination support. The requested record position to be returned in the message response. '
      wireTransferType:
        type: array
        description: "Wire transfer type to be returned or affected by a read, update or delete request. "
        items:
          $ref: '#/definitions/WireTransferType'
    description: "The list of Wire transfer types either returned or affected by a read, update or delete request. "
externalDocs:
  description: Find out more about CUFX
  url: http://www.cufxstandards.com
